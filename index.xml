<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title>Musings and Mutterings of Zee Spencer</title>
  <link rel="self" type="application/atom+xml" href="http://zeespencer.com/index.xml" />
  <link href="http://zeespencer.com/" />
  <updated>2020-07-25T18:31:12-07:00</updated>
  <id>http://zeespencer.com/</id>
  <author>
    <name>Zee</name>
    <email>zee@zeespencer.com</email>
  </author>

  
  
  <entry>
    <id>http://zeespencer.com/choosing-between-web-ui-libraries</id>
    <link type="text/html" rel="alternate" href="http://zeespencer.com/choosing-between-web-ui-libraries"/>
    <title>Choosing Between Web UI Tooling and Libraries</title>
    <updated>2020-05-30T00:00:00-07:00</updated>
    <author>
      <name>Zee</name>
      <uri>http://zeespencer.com/</uri>
    </author>
    <content type="html">&lt;p&gt;Building high quality software in a small team requires thoughtful application
of both soft &lt;em&gt;and&lt;/em&gt; sharp focus. As primarily a back end or systems engineer, I
rely heavily on UI tooling to offload cognitive overhead without sacrificing
design quality.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;&lt;a href=&quot;https://zinc.coop&quot;&gt;Zinc&lt;/a&gt; has been gently exploring HTML and CSS tooling for UI
prototyping. I tend to approach tooling and library selection from a
&lt;a href=&quot;https://www.fastcompany.com/1113892/build-borrow-or-buy&quot;&gt;buy/build/borrow&lt;/a&gt;
perspective, and personally landed pretty quickly on buying &lt;a href=&quot;https://tailwindui.com/&quot;&gt;TailwindUI&lt;/a&gt; for two
reasons:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;I am not particularly fluent in &lt;em&gt;visual design&lt;/em&gt;; so having a professionally
maintained library of off-the-shelf interaction-design components is a
compelling value proposition.&lt;/li&gt;
&lt;li&gt;My usage of &lt;a href=&quot;https://tailwindcss.com/&quot;&gt;TailwindCSS&lt;/a&gt; as a utility-first CSS framework has been quite
pleasant. The maintainers leverage what we&amp;#39;ve learned from &lt;a href=&quot;https://getbootstrap.com/&quot;&gt;Bootstrap&lt;/a&gt;,
&lt;a href=&quot;https://tachyons.io/&quot;&gt;Tachyons&lt;/a&gt; and other utility-first UI tooling quite well.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;As we discussed the decision-making process, I realized underneath my initial
&amp;quot;this feels good&amp;quot; response was a number of implicit architectural values.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;I rely heavily on &lt;a href=&quot;https://en.wikipedia.org/wiki/Open%E2%80%93closed_principle&quot;&gt;Open/Closed&lt;/a&gt; as an architectural decision-making
principle.&lt;/li&gt;
&lt;li&gt;I like &lt;em&gt;thoughtful&lt;/em&gt; programming. Thought is half of what it takes to build
useful, reliable software. &lt;em&gt;Action&lt;/em&gt; is the other half.&lt;/li&gt;
&lt;li&gt;I like &lt;em&gt;slow&lt;/em&gt; release cycles for breaking changes and &lt;em&gt;fast&lt;/em&gt; release cycles
for adding improvements and resolving defects.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;applying-the-open-closed-principle&quot;&gt;Applying The Open / Closed Principle&lt;/h2&gt;

&lt;p&gt;Many CSS and Component Libraries provide fully-featured components. When these
components apply the Open / Closed principle effectively, they follow one or two
paths:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;They expect to be used &lt;em&gt;as-is&lt;/em&gt; within the system, and expose &lt;a href=&quot;https://www.interaction-design.org/literature/book/the-glossary-of-human-computer-interaction/affordances&quot;&gt;affordances&lt;/a&gt;
for developers or designers to &lt;a href=&quot;https://www.thoughtworks.com/insights/blog/composition-vs-inheritance-how-choose&quot;&gt;&lt;em&gt;extend&lt;/em&gt; or &lt;em&gt;wrap&lt;/em&gt;&lt;/a&gt; the
component without needing to understand the underlying implementation.&lt;/li&gt;
&lt;li&gt;They provide tiny pieces and a blueprint to assemble them into the desired
component.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Both strategies are valid applications of the Open / Closed principle. Early in
my career, I gravitated towards relatively fully-formed components that could be
extended or wrapped. Libraries that prioritize this design structure often allow
for incredible initial productivity; and the longer these libraries and services
stay around, the better-shaped the affordances for extension become.&lt;/p&gt;

&lt;p&gt;Over time, I have shifted more towards composing small-to-medium sized tools
into larger systems; with an eye for disposing of the underlying code. This is
due in no small part to how the economics of open source and free software play
out, with libraries falling out of maintenance as tech fashion moves to new
paradigms.&lt;/p&gt;

&lt;h2 id=&quot;determining-thoughtfulness&quot;&gt;Determining Thoughtfulness&lt;/h2&gt;

&lt;p&gt;Thoughtfulness is difficult to measure. Many projects bias towards &lt;em&gt;code&lt;/em&gt; and
&lt;em&gt;execution&lt;/em&gt; instead of &lt;em&gt;documentation&lt;/em&gt; and &lt;em&gt;community&lt;/em&gt;. This is a classic
chicken-and-egg problem.&lt;/p&gt;

&lt;p&gt;How can you build a community around a project if the project isn&amp;#39;t in a
functional state? How do you get a project to a functional state without pushing
forward on the implementation? When and how do we decide to discard behaviors
that served the project well in getting to a functional state are no longer
serving as we extend the breadth and depth of the product?&lt;/p&gt;

&lt;p&gt;My current rubric is to evaluate the public discussion forums for a project. Do
they have an active asynchronous community support system? What about for
real-time community support? Do they have public documentation with a reasonable
information architecture that prioritizes discoverability?&lt;/p&gt;

&lt;p&gt;I also tend to dive into the underlying code base and issue tracker. How timely
are responses to issues? Are patches left open? Or do maintainers do the work to
bring contributions home or gently redirect eager attention in a more productive
manner?&lt;/p&gt;

&lt;h2 id=&quot;assessing-the-release-cadence&quot;&gt;Assessing the Release Cadence&lt;/h2&gt;

&lt;p&gt;Every project has a different tempo. Consider how often a release breaks
backwards compatibility or changes its user or programmer interface drastically
enough to require applications using the library to update their source code or
configuration.&lt;/p&gt;

&lt;p&gt;Projects which release breaking changes frequently have higher carry-costs.
These costs may be trivial in well-capitalized and well-staffed organizations,
but can be debilitating in organizations with limited financial resources or a
limited labor force.&lt;/p&gt;

&lt;h2 id=&quot;so-what-to-choose&quot;&gt;So What To Choose?&lt;/h2&gt;

&lt;p&gt;I, personally, do not believe the &lt;em&gt;result&lt;/em&gt; of a decision is terribly important
so long as the &lt;em&gt;methodology&lt;/em&gt; for reaching a decision centers the group that will
live with the decision.&lt;/p&gt;

&lt;p&gt;Personally, I prefer libraries like &lt;a href=&quot;https://tailwindui.com/&quot;&gt;TailwindUI&lt;/a&gt; over libraries like &lt;a href=&quot;https://getbootstrap.com/&quot;&gt;Bootstrap&lt;/a&gt;
due to the level of thoughtfulness placed into their documentation, community
and implementation; and the reasonably clear boundaries that allow me to extend
or adjust components without needing to understand source code that lives
outside a particular project.&lt;/p&gt;
</content>
  </entry>
  
  
  
  <entry>
    <id>http://zeespencer.com/drift-work-and-shift-work</id>
    <link type="text/html" rel="alternate" href="http://zeespencer.com/drift-work-and-shift-work"/>
    <title>Drift Work, Shift Work</title>
    <updated>2020-01-08T00:00:00-08:00</updated>
    <author>
      <name>Zee</name>
      <uri>http://zeespencer.com/</uri>
    </author>
    <content type="html">&lt;p&gt;Over the years, I&amp;#39;ve heard many ways to frame the tradeoff in work conditions
that optimize contributors&amp;#39; work productivity and managers&amp;#39; work productivity.
The most popular being &amp;quot;Maker schedule, manager schedule.&amp;quot; While I agree that
some kinds of work are best suited to specific work conditions, I&amp;#39;m unconvinced
a manager versus individual contributor framing is helpful when attempting to
determine how to structure my workday.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Why?&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;It exacerbates tensions between management practices and software development
practices.&lt;/li&gt;
&lt;li&gt;It &amp;quot;walls off&amp;quot; work tactics or strategies that may be suitable across roles
behind role boundaries.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I suggest an alternative: shift work and drift work. Instead of splitting work
between a boss/worker hierarchy, we acknowledge that work fits best when and
where the time and attention the worker has is well suited to the task at hand.&lt;/p&gt;

&lt;p&gt;Thinking in terms of shift work and drift work gives us options for mitigating
tensions around what work is and is not getting done. We can evaluate the work
that is missing, determine whether it&amp;#39;s more amenable to shift work or drift
work, and adjust our work-schedules as appropriate.&lt;/p&gt;

&lt;h2 id=&quot;shift-work&quot;&gt;Shift Work&lt;/h2&gt;

&lt;p&gt;Shift work is &lt;em&gt;focused.&lt;/em&gt; It&amp;#39;s the work where we are at our best in a
&lt;a href=&quot;https://en.wikipedia.org/wiki/Flow_(psychology)&quot;&gt;flow state&lt;/a&gt;. Our goal is to
complete &lt;em&gt;all the things&lt;/em&gt; or perform a particularly time-intensive task to
completion. Work like debugging, designing test plans, processing support
tickets, shipping a feature, intensively reading a book or following a course,
or providing thoughtful critique are some examples of &lt;em&gt;shift work&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Shift work responds well to &lt;em&gt;structures that enable a state of flow&lt;/em&gt; while
performing that work. For some, these structures may be working in a particular
place at a specific time. For others, they may be having the flexibility to drop
deeply into work when inspiration strikes. Perhaps someone achieves flow when
their workflow bubbles up the next piece of work worth doing. Or maybe it&amp;#39;s
easier to achieve flow in a distraction-free environment where only the current
task matters.&lt;/p&gt;

&lt;p&gt;There is no &amp;quot;right&amp;quot; or &amp;quot;wrong&amp;quot; way to perform shift work, and &lt;strong&gt;what works well
for me may not work well for you.&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;drift-work&quot;&gt;Drift Work&lt;/h2&gt;

&lt;p&gt;Conversely, drift work is &lt;em&gt;unfocused.&lt;/em&gt; The goal with drift work is not &amp;quot;complete
all the things,&amp;quot; but rather &amp;quot;notice what wants doing, and (perhaps!) do it.&amp;quot;
When doing drift work, we do not try to complete a known set of tasks. Instead,
we try to take care of the things that may be at risk of falling through the
cracks. Some examples of drift work are catching up on correspondence, double
checking some numbers, jotting out a rough draft, fiddling a bit with a design
that isn&amp;#39;t quite baked, skimming a monitoring suite to evaluate system health,
or casually reading a book or following a course.&lt;/p&gt;

&lt;p&gt;Drift work responds well to &lt;em&gt;structures that increase spaciousness&lt;/em&gt; while
performing the work. For some, having clear time-budgets encourages
spaciousness. For others, time limits feel constraining and over-bearing. Some
drift work requires availability to be interrupted. Other drift work is done
best when you don&amp;#39;t have to worry about other people or pressing tasks wanting
your attention.&lt;/p&gt;

&lt;p&gt;Like shift work, there is no right or wrong way to make space and perform drift
work.&lt;/p&gt;

&lt;h2 id=&quot;make-time-for-both&quot;&gt;Make Time for Both&lt;/h2&gt;

&lt;p&gt;In systems where people are not doing enough drift work may have stresses and
tensions emerge where people feel there &amp;quot;isn&amp;#39;t enough time&amp;quot; to get &amp;quot;all the
things done.&amp;quot; These tensions emerge not because there is not enough time to get
all the things done, but because we are not doing enough drift to evaluate what
is genuinely valuable and what appears urgent or critical at first glance.&lt;/p&gt;

&lt;p&gt;Conversely, in systems where people are not doing enough shift work struggle to
execute on work worth doing. People may feel pulled in too many directions, or
like there isn&amp;#39;t a &lt;em&gt;point&lt;/em&gt; to the conversations they&amp;#39;re having at work. After
all, &lt;em&gt;nothing gets done anyway.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It may come as no surprise that different people within the same team or
organization may perceive the tensions as having different causes. People who
feel most productive doing shift work or enjoy the feeling of pushing their
limits may feel like doubling down on getting things done will make the tensions
go away. People with a strong preference for drift work may feel exhausted by
spending even a few hours a day in a focused, high-activation work state. Even
more confounding, the same person may have different needs applying the drift
work/shift work spectrum based upon factors outside the context of the
organization.&lt;/p&gt;

&lt;h2 id=&quot;what-works-well-for-me-for-now&quot;&gt;What Works Well For Me (For Now)&lt;/h2&gt;

&lt;p&gt;I&amp;#39;ve found that my most productive days are ones where I can take thirty minutes
in a &amp;quot;triage and respond shift&amp;quot; that slowly transitions into drift work. Once I
no longer have things pulling my attention, I take a break, eat some food, move
around a bit, and wash up. Once restored, I&amp;#39;m ready for some tightly-focused
shift-work that can last two to six hours and ends when I&amp;#39;m fatigued or
otherwise &amp;#39;done.&amp;#39;&lt;/p&gt;
</content>
  </entry>
  
  
  
  <entry>
    <id>http://zeespencer.com/a-2019-physical-economic-and-mental-health-year-in-review</id>
    <link type="text/html" rel="alternate" href="http://zeespencer.com/a-2019-physical-economic-and-mental-health-year-in-review"/>
    <title>2019 Year in Review</title>
    <updated>2020-01-01T00:00:00-08:00</updated>
    <author>
      <name>Zee</name>
      <uri>http://zeespencer.com/</uri>
    </author>
    <content type="html">&lt;p&gt;In 2018, I set out to establish habits that made me physically, economically, and mentally healthier. It&amp;#39;s been tough, but worth it. And it gets easier every day.&lt;/p&gt;

&lt;h2 id=&quot;my-2019-key-metric-pairs&quot;&gt;My 2019 Key Metric Pairs&lt;/h2&gt;

&lt;p&gt;First, I established a pair of &lt;strong&gt;key physical, economic, and mental health metrics&lt;/strong&gt;:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Body fat percentage and weight.&lt;/li&gt;
&lt;li&gt;Net worth and months of readily available living-expenses.&lt;/li&gt;
&lt;li&gt;Frequency of physical activity and degree of intrinsic motivation.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Some of these metrics are straightforward to capture and measure over time. I have a &lt;a href=&quot;https://www.withings.com/us/en/body-plus&quot;&gt;Withings Body+ Scale&lt;/a&gt;, which takes body fat percentage and weight measurements nearly daily before showering. I use &lt;a href=&quot;https://ynab.com/referral/?ref=oAuCdvn4I0cCK-fh&amp;utm_source=customer_referral&quot;&gt;You Need a Budget&lt;/a&gt; to track my savings and investment account balances and observe my spending patterns. My &lt;a href=&quot;https://www.apple.com/watch/&quot;&gt;Apple Watch&lt;/a&gt; keeps track of my active energy usage in &lt;a href=&quot;https://www.apple.com/ios/health/&quot;&gt;Apple Health&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Measuring intrinsic motivation is more difficult, but can be observed by proxy when evaluating other metrics. If most other metrics are trending negatively, it&amp;#39;s plausible that my intrinsic motivation is flagging. If trending positively, then I am probably doing &lt;em&gt;something&lt;/em&gt; right because I&amp;#39;m making detectable progress.&lt;/p&gt;

&lt;h2 id=&quot;my-2019-behavioral-goals&quot;&gt;My 2019 Behavioral Goals&lt;/h2&gt;

&lt;p&gt;Second, I set &lt;strong&gt;behavioral goals&lt;/strong&gt; that harmonize my economic, physical, and mental well-being:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Work primarily with clients who have a culture of sustainable pace.&lt;/li&gt;
&lt;li&gt;Drink less alcohol.&lt;/li&gt;
&lt;li&gt;Develop a more regular cadence of low to moderate-intensity physical activity.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You might notice that none of these behavioral goals are tied to the metrics directly. For me, when behavioral goals and key metrics are too cohesive, it becomes difficult to tell whether the behaviors are impacting the metrics.&lt;/p&gt;

&lt;p&gt;You may also notice that while the behavioral goals are specific and actionable, they are not pass-fail. There is not a magic number they seek to reach. There is no rigorous evaluation process; instead, I ask myself, &amp;quot;how are these comparing to previous baselines or trends?&amp;quot; and reflect upon that.&lt;/p&gt;

&lt;h2 id=&quot;my-economic-physical-and-mental-health-results&quot;&gt;My Economic, Physical, and Mental Health Results&lt;/h2&gt;

&lt;p&gt;Here are the results:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Body Fat Percentage, down 3%&lt;/li&gt;
&lt;li&gt;Body Weight, down 5.2%&lt;/li&gt;
&lt;li&gt;Net Worth, up 5.9%&lt;/li&gt;
&lt;li&gt;Months of readily available living expenses: 15&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;2020-and-beyond&quot;&gt;2020 and Beyond&lt;/h2&gt;

&lt;p&gt;I haven&amp;#39;t quite decided what my 2020 behavioral goals will be. I&amp;#39;m content with how my current priorities impact my physical, mental, and economic health, but I could see myself needing to replace the drink less goal as it&amp;#39;s not nearly as impactful now that two beers knock me on my ass. Perhaps I&amp;#39;ll replace it with something like &amp;quot;Cook meals at home more regularly.&amp;quot;&lt;/p&gt;

&lt;p&gt;I&amp;#39;m also considering adding a new goal: Reinvest all income &lt;a href=&quot;https://datausa.io/profile/geo/oakland-ca&quot;&gt;exceeding Oakland&amp;#39;s median household income&lt;/a&gt; into &lt;a href=&quot;https://www.pewresearch.org/fact-tank/2017/11/01/how-wealth-inequality-has-changed-in-the-u-s-since-the-great-recession-by-race-ethnicity-and-income/&quot;&gt;undercapitalized non-white-majority owned&lt;/a&gt; organizations, with an emphasis on cooperative or community-owned businesses.&lt;/p&gt;

&lt;p&gt;If you&amp;#39;d like to join me in learning how to go about doing this join me in &lt;a href=&quot;https://www.thenextegg.org/&quot;&gt;The Next Egg&lt;/a&gt;, an online community sponsored by the &lt;a href=&quot;https://www.theselc.org/&quot;&gt;The Sustainable Economies Law Center&lt;/a&gt;, &lt;a href=&quot;https://www.shareable.net/&quot;&gt;Shareable&lt;/a&gt; and &lt;a href=&quot;https://www.lifteconomy.com/&quot;&gt;LIFT Economy&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
  
  
  <entry>
    <id>http://zeespencer.com/how-kiera-and-i-merged-finances</id>
    <link type="text/html" rel="alternate" href="http://zeespencer.com/how-kiera-and-i-merged-finances"/>
    <title>How Kiera and I Merged (some of) our Finances</title>
    <updated>2016-04-17T00:00:00-07:00</updated>
    <author>
      <name>Zee</name>
      <uri>http://zeespencer.com/</uri>
    </author>
    <content type="html">&lt;p&gt;Having been with &lt;a href=&quot;https://twitter.com/kmanion&quot;&gt;Kiera&lt;/a&gt; for going on 4 years now; and having lived together for 3 of those years; It seemed a bit unnecessary that we maintain separate budgets for shared resources like groceries, rent, utilities, streaming media accounts, etc. We&amp;rsquo;d cobbled together a &amp;ldquo;I&amp;lsquo;ll pay for Blue Apron if you pay for the CSA&amp;rdquo; form of spreading of fiscal responsibilities, but that was getting more and more complicated and difficult to balance to ensure an equitable split based upon our respective incomes.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;I strongly value my independence and have a bit of anxiety around financial entanglements. We both strongly prefer a structured, equitable approach that allows the two of us to afford our shared expenses and make progress on shared goals while keeping our personal expenses and goals independent.&lt;/p&gt;

&lt;h3 id=&quot;constraints&quot;&gt;Constraints&lt;/h3&gt;

&lt;p&gt;So we set up some constraints:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Transparency. Either of us should be able to see how money is planned to be spent as well as how money has been spent.&lt;/li&gt;
&lt;li&gt;Equitable. Splitting expenses 50/50 isn&amp;rsquo;t equitable given the compensation disparity between us.&lt;/li&gt;
&lt;li&gt;Flexibility. We didn&amp;rsquo;t want to lock ourselves in to a specific financial plan; as we expect we&amp;rsquo;ll learn quite a bit about our family&amp;rsquo;s financial needs over time.&lt;/li&gt;
&lt;li&gt;Collaborative. Any tools or systems we used would have to allow both of us to have full read/write/admin privileges.&lt;/li&gt;
&lt;li&gt;Easy. We don&amp;rsquo;t want to enter what we&amp;rsquo;ve spent money on by hand or upload a pile of receipts. Automatic import of transactions was a must have.&lt;/li&gt;
&lt;li&gt;Trust, but verify. Purchases sometimes need to be split between &amp;ldquo;groceries&amp;ldquo; and &amp;rdquo;puppy&amp;rdquo; budget categories and I don&amp;rsquo;t want get into the habit of ignoring auto-categorized transactions as they stream through.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;building-the-budget&quot;&gt;Building the Budget&lt;/h3&gt;

&lt;p&gt;I&amp;rsquo;d been using &lt;a href=&quot;http://www.youneedabudget.com&quot;&gt;YouNeedABudget&lt;/a&gt; (or YNAB) for a few months now (as had Kiera) and while it has it&amp;rsquo;s warts it has still been relatively decent. It uses a virtual &amp;ldquo;envelope&amp;rdquo; style of budget where categories are defined, income is distributed into the categories&amp;rsquo; envelopes, and finally money is taken out of an envelope when a transaction is for that category. It&amp;rsquo;s also allows a single user to have multiple budgets. This allows us to maintain our own personal budgets while still having access to the family budget.&lt;/p&gt;

&lt;p&gt;Since we&amp;rsquo;d both been tracking our spending on things like rent, utilities, groceries, puppy, entertainment, etc. for about a month it was pretty easy for us to come up with an estimated total cost-per-month for those things. We also set up a category for purchasing upgrades for our home, such as that stand mixer I&amp;rsquo;ve been eyeing or a TV so we have a slightly better entertainment system than my 11&amp;rdquo; MacBook Air.&lt;/p&gt;

&lt;p&gt;We then summed the total budget for next month so we had a number to split between the two of us. Since we want to be equitable; we took the ratio of our respective salaries to the total budget and set that up as our personal contributions to the family budget:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;K&amp;rsquo;s Contribution = (K&amp;rsquo;s Income / (K&amp;rsquo;s Income + Z&amp;rsquo;s Income)) * Total Budget&lt;/li&gt;
&lt;li&gt;Z&amp;rsquo;s Contribution = (Z&amp;rsquo;s Income / (K&amp;rsquo;s Income + Z&amp;rsquo;s Income)) * Total Budget&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We set up a shared checking account at a local credit union (&lt;a href=&quot;https://www.patelco.org&quot;&gt;Patelco&lt;/a&gt;) because it has consistently high reviews, a branch literally next door from us, and YNAB supports importing their transactions.&lt;/p&gt;

&lt;p&gt;We &amp;ldquo;seeded&amp;rdquo; the checking account with our respective contributions for next month as well as a smaller portion to cover this month&amp;rsquo;s remaining expenses.&lt;/p&gt;

&lt;p&gt;Once the account was set up we moved our rent auto-payment, utility bills, CSA subscriptions, multi-media accounts, etc. to the shared account.&lt;/p&gt;

&lt;p&gt;Since sometimes we sometimes wind up buying family things using our personal money we set up a shared &lt;a href=&quot;https://cash.me&quot;&gt;Square Cash&lt;/a&gt; account. This account is used to reimburse us personally when we do a grocery run and forget the shared debit card.&lt;/p&gt;

&lt;p&gt;Every Saturday we spend 10~20m reviewing the last weeks transactions, reimbursing personally purchased shared expenses, and making adjustments to the budget. Around the middle of the month we transfer money in from our individual bank accounts.&lt;/p&gt;

&lt;h3 id=&quot;takeaways&quot;&gt;Takeaways&lt;/h3&gt;

&lt;p&gt;Budgeting, while stressful, is also liberating. Now we both know exactly how much money is being spent keeping us housed and fed; plus we can start planning for shared things that are too expensive for either one of us to just buy but both of us want.&lt;/p&gt;
</content>
  </entry>
  
  
  
  <entry>
    <id>http://zeespencer.com/defining-my-dream-job</id>
    <link type="text/html" rel="alternate" href="http://zeespencer.com/defining-my-dream-job"/>
    <title>Defining My Dream Job</title>
    <updated>2015-08-03T00:00:00-07:00</updated>
    <author>
      <name>Zee</name>
      <uri>http://zeespencer.com/</uri>
    </author>
    <content type="html">&lt;p&gt;About a year ago I got back into freelancing and started building a small,
distributed development studio. While I enjoyed the freedom and the people; I
couldn&amp;#39;t sustain the constant sales cycle and discovered management and
operations is a recipe for burnout for me. My constant anxiety over payroll,
bookkeeping and cash flow was debilitating.&lt;/p&gt;

&lt;p&gt;I could write in depth about what I&amp;#39;ve learned about myself and running a
business over the past year; or describe the agony of laying off good people who
may struggle to find new work due to systemic bias; or tipping into depression
due to a combination of burnout and the erosion of my self-confidence. But
instead I&amp;#39;d like to look forward. It&amp;#39;s less painful.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;It is time to shut down the consultancy side of Zinc. Zinc will remain focused
on &lt;a href=&quot;https://apprenticeship.community&quot;&gt;The Apprenticeship Community&lt;/a&gt; and &lt;a href=&quot;https://leanpub.com/u/justenoughmedia&quot;&gt;Just
Enough Media&lt;/a&gt;. We&amp;#39;ve ramped down our
delivery team, and while most have found new homes already; if you&amp;#39;re a
pairing company looking for junior and/or senior Javascript / Ruby developers
&lt;a href=&quot;mailto:zee@wecohere.com&quot;&gt;ping me&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This also means I am officially looking for full or part-time work; and do not
intend to continue consulting (at least, not primarily as a deliverer of
software).&lt;/p&gt;

&lt;p&gt;What would hiring me do for your team? My entire career has been built by
combining a reasonable level of proficiency at shipping working software with
the ability to to create opportunity for those around me to improve their
skills.&lt;/p&gt;

&lt;p&gt;My undying passion is helping teams and people become more effective. While I love
working closely with a team of compassionate, curious, cross-skilled peers
building solid software that meets customers needs and has a high degree of
technical quality; my greatest love is helping people plan, execute, and
reflect on their professional growth.&lt;/p&gt;

&lt;p&gt;My ideal job consists of working with varied teams that recognize the
value of people of different backgrounds, skill levels, and perspectives. The
antithesis of the ego driven, senior obsessed, &amp;quot;We hire the best&amp;quot;
&lt;a href=&quot;http://carlos.bueno.org/2014/06/mirrortocracy.html&quot;&gt;mirrortocracy&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I want to focus on guiding and facilitating peer mentorship and intentional
professional growth. I disagree completely with the notion that professional
growth &amp;quot;happens naturally.&amp;quot; It takes intentional investment in time and money.
It requires recognition that social and personal structures are a critical part
of a learning culture.&lt;/p&gt;

&lt;p&gt;This isn&amp;#39;t to say I won&amp;#39;t be coding. Collaborating on projects is required to
understand someone and assist them in planning their growth. I want
contributions to be evaluated not by features shipped or tasks completed but by
my fellow-workers ability to plan, observe and measure their professional
growth.&lt;/p&gt;

&lt;p&gt;If I were to write my own job description, it would look something like this:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Organizes and facilitates retrospectives, open-spaces, and other
peer-learning activities.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://mobprogramming.org&quot;&gt;Mob programs&lt;/a&gt; with teams and pair programs with
individuals with an emphasis on gleaning understanding and reflection while
doing work.&lt;/li&gt;
&lt;li&gt;Facilitates one-on-one and/or small group learning planning and reflection.&lt;/li&gt;
&lt;li&gt;Ships software as part of a set of teams, with an emphasis on
cross-pollination.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Alternatively, I&amp;#39;d be happy to work with a company that can demonstrate that
these responsibilities are taken care of already.&lt;/p&gt;

&lt;p&gt;I can subsist as an independent freelancer indefinitely; and will continue to
do so until I find the right place. How would I describe this place?&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;It recognizes the insidious, destructive nature of micro-aggressions and
subtle *isms and considers compassion a core skill.&lt;/li&gt;
&lt;li&gt;It has inoculated itself against &amp;quot;senior-coder-itis&amp;quot; and actively hires
across skill levels and specializations; while paying equitable salaries.&lt;/li&gt;
&lt;li&gt;It prioritizes perks such as 401(k)s, trans-inclusive health care, and
sustainable pace over ping pong tables and free beer.&lt;/li&gt;
&lt;li&gt;It is based somewhere with good mass transit; or allows remote work. I&amp;#39;m
currently based out of Oakland, California and am highly interested in
Montreal, Quebec.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you are interested, I&amp;#39;d love to &lt;a href=&quot;mailto:zee@wecohere.com&quot;&gt;get in touch&lt;/a&gt;.
If you&amp;#39;re not, I&amp;#39;d appreciate &lt;a href=&quot;https://twitter.com/zspencer/status/628566493748289536&quot;&gt;a signal boost on social
media&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
  
  
  <entry>
    <id>http://zeespencer.com/effective-code-critique</id>
    <link type="text/html" rel="alternate" href="http://zeespencer.com/effective-code-critique"/>
    <title>Effective Code Critique</title>
    <updated>2015-07-26T00:00:00-07:00</updated>
    <author>
      <name>Zee</name>
      <uri>http://zeespencer.com/</uri>
    </author>
    <content type="html">&lt;p&gt;Code review gets a bad rap. People worry that code reviews slow teams down,
create conflict between team members, or disempower team members by taking away
decision making authority.&lt;/p&gt;

&lt;p&gt;I believe these concerns are anti-patterns that indicate a team is using code
review for &lt;em&gt;criticism&lt;/em&gt; as opposed to &lt;em&gt;critique&lt;/em&gt;. What&amp;#39;s the difference?
&lt;em&gt;Critique is focused on specific parameters, where criticism is unbound.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;That said, many programmers are unclear how to perform judgement free code
reviews. The following are a series of suggestions which may help move code
reviews from criticism to critique:&lt;/p&gt;

&lt;!--more--&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#start-with-compassion&quot;&gt;Start with compassion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#working-code-wins&quot;&gt;Working code wins&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#discuss-clarity,-coupling,-cohesion,-and-encapsulation&quot;&gt;Discuss clarity, coupling, cohesion, and encapsulation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#celebrate-intentionally&quot;&gt;Celebrate intentionally&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#follow-up&quot;&gt;Follow up&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;start-with-compassion&quot;&gt;Start With Compassion&lt;/h2&gt;

&lt;p&gt;I like to begin each review by reflecting on the context of the person
submitting the code. Are they experienced team members or novices? Do you have
good rapport with them? Are they under schedule or personal or professional
pressure?&lt;/p&gt;

&lt;p&gt;I follow that up by reminding myself of a variation on the retrospective prime
directive; the submitter is doing the best they can given their past experiences
and current context. This isn&amp;#39;t to say the work is above reproach; but that the
submitter is doing the best they can.&lt;/p&gt;

&lt;h2 id=&quot;working-code-wins&quot;&gt;Working Code Wins&lt;/h2&gt;

&lt;p&gt;Code review may be used as a gate to prevent technically concerning code from
entering the system. This is a flawed approach to code review as it introduces
an unpredictable amount of latency in a workflow and implies distrust. I prefer
to allow anyone to merge the code right away, so long as the merger has
confidence that the change causes benefits from the user or business
perspective. I ask myself the following questions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Do I understand the goals of the change?&lt;/li&gt;
&lt;li&gt;Does it meet my understanding of user or business needs?&lt;/li&gt;
&lt;li&gt;What are the changes potential unintended side effects?&lt;/li&gt;
&lt;li&gt;Does the change update the user facing documentation?&lt;/li&gt;
&lt;li&gt;Do tests demonstrate the features functionality? These don&amp;#39;t need to go
through the UI, especialls when there&amp;#39;s reasonable confidence in the code
connecting the interface to the feature.&lt;/li&gt;
&lt;li&gt;Is there an image, gif, or video demonstrating the feature in use attached
to the change? This makes it much easier for team members to evaluate the
change from a users perspective.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If the code can be said to be working; then it may be merged ASAP. Further code
review for a piece of work may continue &lt;em&gt;past&lt;/em&gt; the change being released into
production.&lt;/p&gt;

&lt;p&gt;Allowing anyone to carry forward or merge a change at any time encourages low
cycle times, high flow, and tight collaboration between team members.&lt;/p&gt;

&lt;h2 id=&quot;discuss-clarity-coupling-cohesion-and-encapsulation&quot;&gt;Discuss Clarity, Coupling, Cohesion, and Encapsulation&lt;/h2&gt;

&lt;p&gt;Code reviews often focus on style over substance. I prefer to use linters or
automated style checkers in the build to pre-empt stylistic comments. This frees
up team members to focus on how a change impacts maintainability of the sofware.
The four aspects I focus on are clarity, coupling, cohesion, and encapsulation.&lt;/p&gt;

&lt;h3 id=&quot;clarity-what-does-this-code-mean&quot;&gt;Clarity - What Does This Code Mean?&lt;/h3&gt;

&lt;p&gt;Clarity is all about names, documentation, tests, types, etc. Clear code helps
future maintainers to understand the intent of the code as well as the
implementation. Are commit messages and notes coherent? Are the names of
variables and methods reasonable? Are there usage examples? Are types or shapes
of data demonstrated or enforced?&lt;/p&gt;

&lt;p&gt;Unclear code indicates a change lacks cohesion, has unnecessary coupling, or
poorly encapsulates the goal of the change. By paying attention to the clarity,
we make it easier to pick up the code and make changes later on.&lt;/p&gt;

&lt;h3 id=&quot;coupling-what-does-this-code-work-with&quot;&gt;Coupling - What Does This Code Work With?&lt;/h3&gt;

&lt;p&gt;Coupling is when changes to other components may require changes in this section
of code. How many external collaborators are used to do the work?  How deeply
does this code reach into it&amp;#39;s collaborators? How many of their functions are
being used? In cases where coupling with external collaborators is both wide and
deep it can be valuable to write an intermediary to wrap the collaborators and
expose a smaller surface area to the new code.&lt;/p&gt;

&lt;p&gt;By drawing attention to coupling, we may reduce the likelihood that we&amp;#39;ll have
to change this code when another component changes.&lt;/p&gt;

&lt;h3 id=&quot;encapsulation-how-will-others-use-this-code&quot;&gt;Encapsulation - How Will Others Use This Code?&lt;/h3&gt;

&lt;p&gt;While coupling is how a component interacts with outside collaborators;
encapsulation is how outside consumers interact with a given component. One
indicator of a loosely encapsulated component is difficulty in testing. A
component that is hard to test is difficult to use. This is likely because the
the code unintentionally exposes it&amp;#39;s implementation. Sometimes the difficulty
in testing is hidden behind test helpers; where a more effective approach may be
to improve the interface of the component itself.&lt;/p&gt;

&lt;p&gt;Long argument lists, callbacks, option hashes with required keys, and parameter
objects are all indicators of loose encapsulation. In many cases these are
completely reasonable; after all reducing the surface area of an interface
likely diminishes it&amp;#39;s utility. In other cases, it&amp;#39;s a sign the component may
be doing too much.&lt;/p&gt;

&lt;p&gt;When we draw attention to codes encapsulation during review, it creates an
opportunity to simplify interfaces and decrease the cost of re-using the
component.&lt;/p&gt;

&lt;h3 id=&quot;cohesion-what-is-the-codes-job&quot;&gt;Cohesion - What Is The Codes Job?&lt;/h3&gt;

&lt;p&gt;The clearest example of non-cohesive code is a horror story from my youth.
There was a SQL query which had hardcoded values it would return in order to
change the color of a label. The argument could be made that this encapsulated
the behavior of the feature; but in doing so it mixed the responsibility of
retrieving data with the responsibility of presenting the data. Cohesive code
eschews additional responsibilities wherever it can; resulting in horizontal
layers and vertical slices.&lt;/p&gt;

&lt;p&gt;By drawing attention to the cohesion of code we create opportunities to improve
clarity by grouping related functionality and un-grouping un-related
functionality. This un-related functionality may become either a collaborator or a
consumer of the component it was extracted from.&lt;/p&gt;

&lt;p&gt;When we frame our code review in terms of clarity, coupling, encapsulation, and
cohesion we change the focus from the programmer and place it squarely on the
artifact. It also moves us out of the world of moral judgement such as what&amp;#39;s
the &amp;quot;best&amp;quot; way to do something and into a conversation about the
tradeoffs that we make as we build a software system together.&lt;/p&gt;

&lt;h2 id=&quot;celebrate-intentionally&quot;&gt;Celebrate Intentionally&lt;/h2&gt;

&lt;p&gt;Despite our best intentions; no matter how well a code review goes it is still
a high pressure situation for the submitter. No matter how I try, I still feel
a bit sad when someone critiques my code. To counter the inevitable bummer of
critical feedback I try to comment on parts of the code that are of high quality
or teach me something. It can also help to use celebratory emoji.&lt;/p&gt;

&lt;p&gt;The important part is to always be genuine in your celebration; as it is often
impossible to discern between sarcasm or mockery and genuine excitement or
positivity. Especially for people who struggle to value their own contributions
already.&lt;/p&gt;

&lt;h2 id=&quot;follow-up&quot;&gt;Follow Up&lt;/h2&gt;

&lt;p&gt;If there&amp;#39;s valuable changes to be made from code review but the work was merged
already; it&amp;#39;s OK to add the desired changes in your task or project tracking
system. I generally prefer that the team has sole discretion on when to
complete those tasks; as they&amp;#39;ll have a better understanding of the cost of
delaying clean up as well as the impact that maintainability improvements will
have on short and long term goals.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Overall, I believe a compassionate, critique-oriented code review practice
results in high quality code and allows companies to include team members who
struggle with pair or mob programming.&lt;/p&gt;
</content>
  </entry>
  
  
  
  <entry>
    <id>http://zeespencer.com/a-pattern-for-distributed-retrospectives</id>
    <link type="text/html" rel="alternate" href="http://zeespencer.com/a-pattern-for-distributed-retrospectives"/>
    <title>A Pattern For Distributed Retrospectives</title>
    <updated>2015-02-15T00:00:00-08:00</updated>
    <author>
      <name>Zee</name>
      <uri>http://zeespencer.com/</uri>
    </author>
    <content type="html">&lt;p&gt;Well-facilitated, compassionate
&lt;a href=&quot;http://www.amazon.com/Agile-Retrospectives-Making-Teams-Great/dp/0977616649&quot;&gt;retrospectives&lt;/a&gt;
(the practice of taking time to discuss how to improve the effectiveness of a
team) are, in my experience, the core differentiator between a gelling,
high-performing team and a team that struggles to get things done.&lt;/p&gt;

&lt;p&gt;Now that I work primarily on distributed teams, I&amp;#39;ve found that retrospectives
are a touch harder. They lack the high-bandwidth feedback of body language that
can tell you early on when someone is getting upset or has something to say but
isn&amp;#39;t quite ready to say it.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;A pattern that seems to work is to do distributed retrospectives in near
silence.&lt;/p&gt;

&lt;p&gt;&amp;quot;Wait!&amp;quot; you may be saying. &amp;quot;Near silence?&amp;quot;&lt;/p&gt;

&lt;p&gt;Yep! Silence! &lt;a href=&quot;https://vimeo.com/114703856&quot;&gt;Silence is a powerful way to create space for
thoughtfulness&lt;/a&gt;. It gives team-members who may
struggle to express themselves verbally a chance to clearly express their
thoughts.&lt;/p&gt;

&lt;p&gt;Here&amp;#39;s the recipe I follow when facilitating distributed retrospectives:&lt;/p&gt;

&lt;h4 id=&quot;ingredients&quot;&gt;Ingredients&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;1 whole team. This team consists of everyone doing or guiding the work.&lt;/li&gt;
&lt;li&gt;1 shared-workspace. I like &lt;a href=&quot;https://docs.google.com&quot;&gt;Google Docs&lt;/a&gt; for it&amp;#39;s
group-chat, &amp;quot;suggesting&amp;quot; mode, and familiar interface.
&lt;a href=&quot;http://trello.com&quot;&gt;Trello&lt;/a&gt; and &lt;a href=&quot;https://www.cardboardit.com&quot;&gt;cardboardit&lt;/a&gt;
are also effective.&lt;/li&gt;
&lt;li&gt;1 retrospective &lt;a href=&quot;http://www.funretrospectives.com&quot;&gt;facilitation pattern&lt;/a&gt;. I
prefer &amp;quot;&lt;a href=&quot;http://retrospectivewiki.org/index.php?title=Start,_Stop,_Continue,_More_of,_Less_of_Wheel&quot;&gt;Keep Doing/Start Doing/Stop Doing/Do More/Do
Less&lt;/a&gt;&amp;quot;
as it&amp;#39;s relatively easy to use.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;directions&quot;&gt;Directions&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Open with the &lt;a href=&quot;http://www.retrospectives.com/pages/retroPrimeDirective.html&quot;&gt;Retrospective Prime
Directive&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Fill in initial topics of discussion for five to ten minutes. Once the adding
process slows down...&lt;/li&gt;
&lt;li&gt;Spend about five minutes adding comments and asking clarifying questions &lt;em&gt;in
the document.&lt;/em&gt; Try to only use your voice to bring attention to a comment in
the document. Mixin some up-votes and &amp;quot;+1&amp;quot;&amp;#39;s.&lt;/li&gt;
&lt;li&gt;Start the discussion with the most active topics.&lt;/li&gt;
&lt;li&gt;Spend about five minutes per-topic adding &lt;em&gt;specific actions to take&lt;/em&gt; on the
topic. This is a great time for topic requesters or people with strong
opinions to share them.&lt;/li&gt;
&lt;li&gt;With about fifteen minutes left, ask participants to select a reasonable set
of actions they, personally are going to take. Ask participants to add these
actions to the project tracking system.&lt;/li&gt;
&lt;li&gt;With about five minutes left, ask the group to take a moment to popcorn
style share something they&amp;#39;d like to celebrate with the group, or something
they&amp;#39;d like to get advice about outside the meeting.&lt;/li&gt;
&lt;li&gt;Close with gratitude and celebration!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Serves remote teams of 2 to 20 (and maybe more)&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;What patterns have worked for you in your distributed retrospectives? I&amp;#39;d love
to &lt;a class=&quot;feedback-email&quot; href=&quot;mailto: zee@wecohere.com&quot;&gt;hear your
ideas!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I&amp;#39;m available to provide training and coaching around effective practices on
distributed technical teams. &lt;a href=&quot;lead-email&quot; href=&quot;mailto:
zee@wecohere.com&quot;&gt;Let me know&lt;/a&gt; if you&amp;#39;re interested!&lt;/p&gt;
</content>
  </entry>
  
  
  
  <entry>
    <id>http://zeespencer.com/the-rationale-behind-testing</id>
    <link type="text/html" rel="alternate" href="http://zeespencer.com/the-rationale-behind-testing"/>
    <title>The Rationale Behind Testing</title>
    <updated>2015-02-12T00:00:00-08:00</updated>
    <author>
      <name>Zee</name>
      <uri>http://zeespencer.com/</uri>
    </author>
    <content type="html">&lt;p&gt;Tests are use cases.&lt;/p&gt;

&lt;p&gt;They illustrate &lt;strong&gt;how to use&lt;/strong&gt; the code they&amp;#39;re testing.&lt;/p&gt;

&lt;p&gt;They provide &lt;strong&gt;examples&lt;/strong&gt; of how the code works in a given context.&lt;/p&gt;

&lt;p&gt;They &lt;strong&gt;describe&lt;/strong&gt; the code&amp;#39;s behavior.&lt;/p&gt;

&lt;p&gt;They &lt;strong&gt;highlight pain&lt;/strong&gt; in how to use the code.&lt;/p&gt;

&lt;p&gt;They &lt;strong&gt;expose complexity&lt;/strong&gt; in our code and the business domain.&lt;/p&gt;

&lt;p&gt;When they &lt;strong&gt;notify us&lt;/strong&gt; the code no longer behaves as specified? That&amp;#39;s a bonus.
Not the goal.&lt;/p&gt;

&lt;p&gt;When we test, we get &lt;strong&gt;critical design feedback&lt;/strong&gt;.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;When we use tests to explore and refine our code&amp;#39;s design, we &lt;strong&gt;create nuanced,
educational conversations&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Well-designed code lets us take advantage of opportunities&lt;/strong&gt; that would
otherwise be out of reach.&lt;/p&gt;

&lt;p&gt;When we take advantage of unexpected opportunities, we &lt;strong&gt;create value&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;This is why I test. There may be other reasons, but these are mine.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Why do you test? Care to &lt;a class=&quot;feedback-email&quot; href=&quot;mailto: zee@wecohere.com&quot;&gt;Share your
reasons?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I help teams learn effective testing practices in Java, Ruby, JavaScript, and
Clojure. If this sounds like something you&amp;#39;re interested in, &lt;a
href=&quot;lead-email&quot; href=&quot;mailto: zee@wecohere.com&quot;&gt;drop me a line&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
  
  
  <entry>
    <id>http://zeespencer.com/when-to-hire-apprentices-and-junior-developers</id>
    <link type="text/html" rel="alternate" href="http://zeespencer.com/when-to-hire-apprentices-and-junior-developers"/>
    <title>When To Hire Apprentices And Junior Developers</title>
    <updated>2015-02-02T00:00:00-08:00</updated>
    <author>
      <name>Zee</name>
      <uri>http://zeespencer.com/</uri>
    </author>
    <content type="html">&lt;p&gt;As bootcamp-esque educational programs train more people on the baseline skills
to contribute to a software project, companies are learning how (and how not) to
integrate these lower-cost, less experienced developers with their teams.
Frequently, these companies hire these less-experienced, single-skilled
individuals as &amp;quot;Junior Developers&amp;quot; and throw them at a project.&lt;/p&gt;

&lt;p&gt;While this has some level of success, savvy companies are turning to
&lt;a href=&quot;https://engineering.groupon.com/2012/software-apprenticeship/groupons-apprenticeship-program/&quot;&gt;apprenticeship&lt;/a&gt;.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h3 id=&quot;what-is-apprenticeship&quot;&gt;What Is Apprenticeship?&lt;/h3&gt;

&lt;p&gt;Apprenticeship is a powerful concept. They take people with a growth mindset,
can-do attitude, an aptitude for development skills and a baseline of competence
and turn them into productive team members. A good apprenticeship program takes
into account all the skills necessary to ship software at a given company and
provides educational resources that bring a novice developer&amp;#39;s principles and
practices in line with those of the team. Apprentices are provided hands-on time
with dedicated mentors who give them specific, actionable and kind feedback on
their work; building their judgement and experience while minimizing the risk
that the software calcifies.&lt;/p&gt;

&lt;h3 id=&quot;what-is-a-junior-developer&quot;&gt;What Is a Junior Developer?&lt;/h3&gt;

&lt;p&gt;Junior developers are also incredibly useful. Junior developers are generally
capable of delivering software independently or on a team, provided they&amp;#39;re
given enough guidance on what to build. They are frequently left to learn things
on their own, with the only feedback they&amp;#39;re given as part of the code-review or
project demo. In the worst cases, this lack of feedback and guidance results in
short-term productivity gains followed by a &amp;#39;calcification&amp;#39; of the software.
Features that would have taken a few hours a month or two ago now take days and
have multiple regressions. This is not the fault of the junior developer, as
they lack the experience necessary to have good judgement about how to build
software that can be adapted as we understand users needs.&lt;/p&gt;

&lt;h3 id=&quot;when-to-hire-junior-developers&quot;&gt;When To Hire Junior Developers&lt;/h3&gt;

&lt;p&gt;Junior developers work great when there is already a cultural imperative of
clean code and learning. Once junior developers are integrated directly into the
practices you have established to maintain a high level of quality in your
software they can make changes and add features without much risk of software
calcification.&lt;/p&gt;

&lt;p&gt;Generally junior developers work best in a problem domain where it&amp;#39;s possible to
come up to speed in a few months and doesn&amp;#39;t require deep technical knowledge of
a particular branch of programming, such as machine learning or high
availability.&lt;/p&gt;

&lt;h3 id=&quot;when-to-hire-apprentices&quot;&gt;When To Hire Apprentices&lt;/h3&gt;

&lt;p&gt;If your company doesn&amp;#39;t currently have a culture of learning, practices in place
to ensure a a high level of quality in your software, or if your company has a
very specialized or complex problem domain apprentices really shine.&lt;/p&gt;

&lt;p&gt;Because apprenticeships explicitely set an expectation of learning during the
first few weeks and months it creates an opportunity for a novice developer to
pick up the expertise, principles, and practices required to contribute
effectively.&lt;/p&gt;

&lt;h2 id=&quot;apprentices-or-junior-developers-why-not-both&quot;&gt;Apprentices or Junior Developers: Why Not Both?&lt;/h2&gt;

&lt;p&gt;If you&amp;#39;re in a company that is &amp;quot;senior heavy&amp;quot; you are missing out on quite a few
competent developers who only need a bit of training and direction to make them
effective. My ideal teams are composed of:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;1~2 developers with 5+ years experience.&lt;/li&gt;
&lt;li&gt;1~2 developers with 2+ years experience.&lt;/li&gt;
&lt;li&gt;2~4 developers with 0+ years experience.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This mix helps ensure that despite judgement mistakes being made by junior
developers there&amp;#39;s enough people with more experience that can provide feedback
and guide refactorings to prevent calcification without getting stuck in a &amp;quot;too
many cooks&amp;quot; situation.&lt;/p&gt;

&lt;p&gt;It&amp;#39;s up to you to decide whether apprentices or junior developers fit your team
best, and I personally prefer using apprenticeship as a way to bring people on
as junior developers who otherwise would have had to be passed over because they
lack the experience necessary to contribute effectively on the team.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Is your team or company interested in hiring junior team members or building an
apprenticeship program? I&amp;#39;d be happy to &lt;a class=&quot;lead-email&quot; href=&quot;mailto:
zee@wecohere.com&quot;&gt;hear your questions and help out!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Disagree with something I&amp;#39;ve said? &lt;a class=&quot;feedback-email&quot; href=&quot;mailto:
zee@wecohere.com&quot;&gt;Tell me what I could do better.&lt;/a&gt;&lt;/p&gt;
</content>
  </entry>
  
  
  
  <entry>
    <id>http://zeespencer.com/jobs/logo-design-typography-and-branding</id>
    <link type="text/html" rel="alternate" href="http://zeespencer.com/jobs/logo-design-typography-and-branding"/>
    <title>Branding Inception: $2,000 - CLOSED</title>
    <updated>2015-01-26T00:00:00-08:00</updated>
    <author>
      <name>Zee</name>
      <uri>http://zeespencer.com/</uri>
    </author>
    <content type="html">&lt;p&gt;Zinc is a recently incorporated business focused on technical team training,
end-to-end product development, and technical management consulting. We are
investing in a solid foundation for our branding. To do so, we are looking for a
designer to provide logo design, typography choices, and color selection
services.&lt;/p&gt;

&lt;p&gt;The resulting brand will reflect the following values:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Simplicity&lt;/li&gt;
&lt;li&gt;High-quality&lt;/li&gt;
&lt;li&gt;Thoughtfulness&lt;/li&gt;
&lt;li&gt;Feedback-driven&lt;/li&gt;
&lt;/ul&gt;

&lt;!--more--&gt;

&lt;h3 id=&quot;is-this-gig-for-you&quot;&gt;Is This Gig For You?&lt;/h3&gt;

&lt;p&gt;The ideal designer:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Has a solid portfolio of logos and brand designs.&lt;/li&gt;
&lt;li&gt;Asks great questions to get the right kind of feedback they need to make a
great design.&lt;/li&gt;
&lt;li&gt;Is comfortable managing a feedback-centric workflow to refine and hone a
design.&lt;/li&gt;
&lt;li&gt;Is comfortable time-boxing their work.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;the-results-i-expect&quot;&gt;The Results I Expect&lt;/h3&gt;

&lt;p&gt;The output of this work would be:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A logo suitable for printing on square or round buttons, stickers, etc.&lt;/li&gt;
&lt;li&gt;A logo suitable for use as a banner on a website or in other situations where
a rectangular logo is preferred.&lt;/li&gt;
&lt;li&gt;Adobe Illustrator or Affinity Designer source files for the logo&lt;/li&gt;
&lt;li&gt;A color-pallete for high-contrast reading that degrades gracefully for
color-blindness&lt;/li&gt;
&lt;li&gt;A selection of fonts, with weights and sizes suitable for rendering on the
web.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;what-is-the-budget&quot;&gt;What Is The Budget?&lt;/h3&gt;

&lt;p&gt;Our budget is approximately $2,000 USD, with some wiggle room. This is an
inception for a small business, so unfortunately there&amp;#39;s not a huge budget.&lt;/p&gt;

&lt;p&gt;I am comfortable paying for usage rights of fonts, ideally under $250 for a
license that allows unlimited print and digital use.&lt;/p&gt;

&lt;h3 id=&quot;to-apply&quot;&gt;To Apply&lt;/h3&gt;

&lt;p&gt;Email &lt;a class=&quot;job-application-email&quot; href=&quot;mailto:
zee@wecohere.com&quot;&gt;zee+zincmadebranding@wecohere.com&lt;/a&gt; a
proposal with:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Your portfolio.&lt;/li&gt;
&lt;li&gt;A set of questions that you would like answered about the work.&lt;/li&gt;
&lt;li&gt;Your timeline of availability.&lt;/li&gt;
&lt;li&gt;An approximate quote for the project.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Thank you! I look forward to working with you!&lt;/p&gt;

&lt;p&gt;Zee&lt;/p&gt;
</content>
  </entry>
  
  
  
  <entry>
    <id>http://zeespencer.com/effectively-onboarding-junior-team-members</id>
    <link type="text/html" rel="alternate" href="http://zeespencer.com/effectively-onboarding-junior-team-members"/>
    <title>Effectively Onboarding Junior Team Members</title>
    <updated>2015-01-13T00:00:00-08:00</updated>
    <author>
      <name>Zee</name>
      <uri>http://zeespencer.com/</uri>
    </author>
    <content type="html">&lt;p&gt;It&amp;#39;s no secret there is a growing demand for technical and creative skills and
that our educational system is struggling to provide the skills to deliver
useful, working, modern products and services. This is further exacerbated by
our industries
&lt;a href=&quot;https://modelviewculture.com/pieces/manufacturing-the-talent-shortage&quot;&gt;unwillingness to look beyond a certain archetype&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Companies are beginning to realize what science has told us for years:
&lt;a href=&quot;http://en.wikipedia.org/wiki/Wason_selection_task#Explanations_of_performance_on_the_task&quot;&gt;framing the problem effectively is the best way to encourage others to solve it&lt;/a&gt;
and are responding by investing more heavily in employee training.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Companies such as
&lt;a href=&quot;https://www.facebook.com/notes/facebook-engineering/facebook-engineering-bootcamp/177577963919&quot;&gt;Facebook&lt;/a&gt;,
&lt;a href=&quot;http://www.thoughtworks.com/products/courses/agile-object-oriented-boot-camp&quot;&gt;Thoughtworks&lt;/a&gt;,
and &lt;a href=&quot;https://www.devmynd.com/jobs/apprenticeship&quot;&gt;so&lt;/a&gt;,
&lt;a href=&quot;https://engineering.groupon.com/2012/software-apprenticeship/groupons-apprenticeship-program/&quot;&gt;so&lt;/a&gt;,
&lt;a href=&quot;http://www.detroitlabs.com/apprentice/&quot;&gt;many&lt;/a&gt;,
&lt;a href=&quot;http://www.8thlight.com/apprenticeship&quot;&gt;more&lt;/a&gt; are turning to the
retro-education (Retrocation?) technique of apprenticeship to train technical
team members.&lt;/p&gt;

&lt;p&gt;Apprenticeship programs encourage learning on the job by creating social and
structural norms where it is safe to not know, to be wrong, and to make
mistakes. Even well structured apprenticeship programs may cause
&lt;a href=&quot;/migitating-anxiety-on-software-teams/&quot;&gt;anxiety&lt;/a&gt; which adds to a junior team
member&amp;#39;s cognitive overhead and shrink their learning capacity.&lt;/p&gt;

&lt;p&gt;I&amp;#39;ve found that the companies where junior team members are successful share
common attributes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Frequent, high quality feedback.&lt;/li&gt;
&lt;li&gt;Tight integration on a team that does useful, valuable work.&lt;/li&gt;
&lt;li&gt;Budgets for continued education and training.&lt;/li&gt;
&lt;li&gt;Regular, intentional interactions with senior and executive level colleagues.&lt;/li&gt;
&lt;li&gt;Dedicated advocates for team members.&lt;/li&gt;
&lt;li&gt;Flexible organizational structures.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;frequent-high-quality-feedback&quot;&gt;Frequent, High Quality Feedback&lt;/h3&gt;

&lt;p&gt;Delivering specific, actionable and kind feedback is
&lt;a href=&quot;http://www.pechakucha.org/presentations/the-most-valuable-skill&quot;&gt;the most valuable skill&lt;/a&gt;
you can build on your team. Without frequent, compassionate feedback small
behavioral concerns or technical misunderstandings become educational blockers.
Just as the cost to fix a bug increases the longer the fix is delayed,
innacurate mental models or behavioral patterns calcify into habits that take
much more work to rectify.&lt;/p&gt;

&lt;p&gt;I recommend a four-pronged approach to delivering feedback:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Frequent &lt;a href=&quot;#pairing&quot;&gt;pairing&lt;/a&gt; or &lt;a href=&quot;#mobbing&quot;&gt;mobbing&lt;/a&gt; on a feature or task.&lt;/li&gt;
&lt;li&gt;Integrated critical peer reviews of work output.&lt;/li&gt;
&lt;li&gt;1 on 1 meetings between team members and their advocate.&lt;/li&gt;
&lt;li&gt;Regular full team retrospectives.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;pairing-and-mobbing&quot;&gt;Pairing and Mobbing&lt;/h4&gt;

&lt;p&gt;Pairing and mobbing provide real-time opportunities to refine mental models and
behaviors. A solid, real-time collaborative working relationship is the best
learning tool ever.&lt;/p&gt;

&lt;p&gt;Pairing is when two people on the same computer, drawing pad, or other creative
tool working on the same task. Pairing is a powerful tool for building a shared
understanding of technique, principles, and practices; as it allows ideas to
emerge which combine the best of both participants.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://mobprogramming.org&quot;&gt;Mobbing&lt;/a&gt; is similar to &lt;a href=&quot;#pairing&quot;&gt;pairing&lt;/a&gt;, with the
added bonus of having even more context and understanding around the task.&lt;/p&gt;

&lt;p&gt;Pairing and mobbing is especially helpful for junior team members as they are
given an opportunity to do real, useful, valuable work in an environment where
any grievous errors can be corrected immediately and new techniques, principles
and patterns can be introduced at the exact time they&amp;#39;re most useful.&lt;/p&gt;

&lt;h4 id=&quot;regular-critical-peer-reviews&quot;&gt;Regular, critical peer reviews&lt;/h4&gt;

&lt;p&gt;Building peer review into your work process creates an opportunity for observing
and re-aligning low-level concerns (&amp;quot;It looks like you&amp;#39;re using a shade of blue
that&amp;#39;s different than our style guide, why is that?&amp;quot;) as well as high-level
concerns (&amp;quot;This part of our application seems to be collecting long methods
which take many arguments. How could we refactor it to encourage smaller,
composable parts?&amp;quot;).&lt;/p&gt;

&lt;p&gt;These reviews are best when they&amp;#39;re independently useful pieces of work being
compared against the artifact without the work. For those using version control,
this review happens for every
&lt;a href=&quot;https://guides.github.com/introduction/flow/index.html&quot;&gt;submitted patch&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Reviews should never, ever block useful work being completed.&lt;/em&gt; If the work
passes a very minimum level of quality (tests pass, adheres to style guide) then
it should be merged as soon as the path submitter it. This provides junior
contributors with confidence that their work is useful and meaningful while
still creating opportunities for learning via critical, specific, kind feedback
and ensuring a minimum level of quality of the work.&lt;/p&gt;

&lt;h4 id=&quot;1-on-1s-between-a-team-member-and-an-advocate&quot;&gt;1 on 1s Between a Team Member and an Advocate&lt;/h4&gt;

&lt;p&gt;As humans, we thrive on appreciation and connection. The surest sign you
appreciate someone is to support them in places that person lacks influence.&lt;/p&gt;

&lt;p&gt;An advocate&amp;#39;s role is to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Listen to and understand a team member and their emotional and intellectual
connection to their day to day work.&lt;/li&gt;
&lt;li&gt;Encourage and refine suggestions for how the company can change to support the
team member.&lt;/li&gt;
&lt;li&gt;Introduce, promote and advocate those changes in circles outside of the team
members influence.&lt;/li&gt;
&lt;li&gt;Relay back realistic progress on the changes a team member is asking for.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Listening to and understanding a single team member at a time allows concerns to
surface that may be difficult or uncomfortable to discuss in team
retrospectives. By making 1 on 1s regular we create space for people who are
ignored in rough-and-tumble loudest-person-wins tech culture.&lt;/p&gt;

&lt;p&gt;Because tech companies frequently over-value expertise and experience, junior
team members relevant, valuable insights into a culture can be ignored and
marginalized without dedicated space.&lt;/p&gt;

&lt;p&gt;If your culture is especially rough and tumble, you may consider ensuring
advocates do not work directly with the team member they advocate for, as the
day-to-day baggage can be carried into these conversations.&lt;/p&gt;

&lt;h4 id=&quot;regular-full-team-retrospectives&quot;&gt;Regular Full Team Retrospectives&lt;/h4&gt;

&lt;p&gt;Retrospectives are where a group gets together, reflects on the past month or
so, and discusses what they want to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Keep doing&lt;/li&gt;
&lt;li&gt;Start doing&lt;/li&gt;
&lt;li&gt;Do more of&lt;/li&gt;
&lt;li&gt;Stop doing&lt;/li&gt;
&lt;li&gt;Do less of&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are many
&lt;a href=&quot;http://www.amazon.com/Agile-Retrospectives-Making-Teams-Great/dp/0977616649&quot;&gt;forms a retrospective can take&lt;/a&gt;,
but these 5 items are the main gist.&lt;/p&gt;

&lt;p&gt;Good retrospectives start with the
&lt;a href=&quot;http://www.retrospectives.com/pages/retroPrimeDirective.html&quot;&gt;retrospective prime directive&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Regardless of what we discover, &lt;em&gt;we understand and truly believe that everyone
did the best job they could&lt;/em&gt;, given what they knew at the time, their skills
and abilities, the resources available, and the situation at hand.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Retrospectives, when time is allocated to address the issues brought up, can go
a long way towards creating a cohesive, functional, productive team. They are
especially useful for junior team members as good retrosepctives model a
productive, tension-resolving discussion; a skill that will serve them well
throughout their career and help them become the kind of team members that
proactively solve problems.&lt;/p&gt;

&lt;p&gt;Retrospectives are not a cure all. In situations where trust is broken a
retrospective can cause more harm than good. &lt;em&gt;If any person cannot in good
conscience agree to the retrospective prime directive, that must be respected.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In those cases, it is best for a conflict resolution specialist to investigate
potential bad actors, remove them if found, and rebuild trust.&lt;/p&gt;

&lt;h3 id=&quot;tight-integration-on-a-team-that-does-useful-valuable-work&quot;&gt;Tight Integration on a Team that Does Useful, Valuable Work&lt;/h3&gt;

&lt;p&gt;There&amp;#39;s a minor anti-pattern where interns or junior team members are tossed
onto an unimportant side-project that doesn&amp;#39;t matter if it lives or dies. While
I strongly advocate for
&lt;a href=&quot;http://chimera.labs.oreilly.com/books/1234000001813/ch05.html#breakable_toys&quot;&gt;breakable toys&lt;/a&gt;
there&amp;#39;s no stronger signal that you don&amp;#39;t trust or believe in someone than to
give them work that doesn&amp;#39;t matter.&lt;/p&gt;

&lt;p&gt;Of course, putting someone with little experience or judgement on a critical
project is also risky. We mitigate this risk by integrating junior team member
into teams where
&lt;a href=&quot;#frequent-high-quality-feedback&quot;&gt;frequent, high quality feedback&lt;/a&gt; is the status
quo.&lt;/p&gt;

&lt;p&gt;If none of your teams have a culture of compassionate feedback, find the one
that is most open or closest to the principles and focus on improving their
feedback skills over a few months before bringing on a junior team member. While
it can seem incredibly mechanistic, even highly experienced people can benefit
from specific, actionable and kind feedback.&lt;/p&gt;

&lt;h3 id=&quot;continued-education-and-training-budgets&quot;&gt;Continued Education and Training Budgets&lt;/h3&gt;

&lt;p&gt;When I was considering changing jobs from my first full time position I was
chatting with &lt;a href=&quot;http://xndev.com&quot;&gt;Matt Heusser&lt;/a&gt; about compensation and he said
something that stuck with me.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Money is the secular form of value.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;On it&amp;#39;s face this looks obvious, yet it has powerful implications. If a company
claims to value education or learning, it must also &lt;em&gt;spend money&lt;/em&gt; on learning
and education.&lt;/p&gt;

&lt;p&gt;If you plan to hire junior team members, provide them a dedicated budget to
improve their skills. Make it high enough to cover a dozen books, online
training courses, conferences (including travel and meals), and perhaps even
professional 1 on 1 training.&lt;/p&gt;

&lt;p&gt;Make sure they understand that the budget is &lt;em&gt;for them&lt;/em&gt;. They get to choose the
things that work best for their education and their interests. Make sure they
spend it. Training is an investment that pays off over months and years, but
money and time not spent learning can never be re-claimed.&lt;/p&gt;

&lt;p&gt;Junior team members especially benefit from this because they have so much to
learn and absorb. There is so much upside potential it doesn&amp;#39;t make sense to
pinch pennies here.&lt;/p&gt;

&lt;h3 id=&quot;regular-intentional-senior-and-executive-interactions&quot;&gt;Regular, Intentional Senior and Executive Interactions&lt;/h3&gt;

&lt;p&gt;At even small to medium sized companies, there can be an interaction gap between
the most junior and the most senior or executive colleagues. A companies
leadership sets values and principles that people throughout the company ascribe
to. Junior team members are often left out of the interactions that create and
share these principles and values; leaving them wondering what they&amp;#39;re supposed
to do or what is even important.&lt;/p&gt;

&lt;p&gt;By creating a collaborative culture between junior team members and senior team
members and executives we combine the freshest perspective with the strongest
judgement and the clearest, most bought-into vision. This is where the magic
happens.&lt;/p&gt;

&lt;h3 id=&quot;dedicated-advocates-for-team-members&quot;&gt;Dedicated Advocates for Team Members&lt;/h3&gt;

&lt;p&gt;As &lt;a href=&quot;#on-1s-between-a-team-member-and-an-advocate&quot;&gt;mentioned previously&lt;/a&gt;,
advocacy for team members outside of their sphere of influence is important.
While the best managers and leaders do this already, formalizing it into the job
descriptions of your company engraines advocacy as valued, desired behavior.&lt;/p&gt;

&lt;h3 id=&quot;flexible-organizational-structure&quot;&gt;Flexible Organizational Structure&lt;/h3&gt;

&lt;p&gt;When bringing on team members without much experience it&amp;#39;s possible the team
they&amp;#39;re on or the role they&amp;#39;re brought in for is not actually a good match. A
&lt;a href=&quot;http://www.amazon.com/The-Corporate-Lattice-Achieving-Performance/dp/1422155161&quot;&gt;flexible organization&lt;/a&gt;
allows people to find where their existing and desired skills fit well with the
companies needs. Flexible organizations create opportunities for people to
transition across roles and teams as they develop skills and improve their
careers.&lt;/p&gt;

&lt;p&gt;When a company over-values a specific set of skills and under-values others, it
disincentivizes people from doing the work they&amp;#39;re best at in favor of the work
they are rewarded more for. Flexible organizations pay everyone well and
recognize the value of all the skills necessary to create, deliver and support
the organization.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Is your team or company interested in bringing on junior team members? I&amp;#39;d be
happy to &lt;a class=&quot;lead-email&quot; href=&quot;mailto: zee@wecohere.com&quot;&gt;listen to your
questions and provide advice or consulting&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Disagree with something I&amp;#39;ve said? I&amp;#39;d love to
&lt;a class=&quot;feedback-email&quot; href=&quot;mailto:
zee@wecohere.com&quot;&gt;hear your thoughts.&lt;/a&gt;&lt;/p&gt;
</content>
  </entry>
  
  
  
  <entry>
    <id>http://zeespencer.com/running-tests-across-multiple-ruby-versions-with-rbenv-and-make</id>
    <link type="text/html" rel="alternate" href="http://zeespencer.com/running-tests-across-multiple-ruby-versions-with-rbenv-and-make"/>
    <title>Running Tests Across Multiple Ruby Versions With Rbenv And Make</title>
    <updated>2015-01-06T00:00:00-08:00</updated>
    <author>
      <name>Zee</name>
      <uri>http://zeespencer.com/</uri>
    </author>
    <content type="html">&lt;p&gt;When writing &lt;a href=&quot;http://glossary.codeunion.io/gem/&quot;&gt;gems&lt;/a&gt;, we frequently want to
verify behavior across a variety of ruby versions. While this is
&lt;a href=&quot;http://docs.travis-ci.com/user/languages/ruby/#Choosing-Ruby-versions-and-implementations-to-test-against&quot;&gt;possible with travis ci&lt;/a&gt;,
running microtests before pushing shrinks the likelihood of breaking the build.&lt;/p&gt;

&lt;p&gt;My objectives were to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Run tests against different ruby versions in parallel. I&amp;#39;ve got all these
cores, why not use them?&lt;/li&gt;
&lt;li&gt;Auto-run tests on file system changes.&lt;/li&gt;
&lt;li&gt;Commands must be discoverable with tab-completion.&lt;/li&gt;
&lt;li&gt;Adding additional versions must be relatively painless.&lt;/li&gt;
&lt;/ul&gt;

&lt;!--more--&gt;

&lt;p&gt;After a bit of prototyping, I settled on:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;a href=&quot;https://github.com/sstephenson/rbenv&quot;&gt;rbenv ruby version manager&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/quackingduck/wach&quot;&gt;Wach&lt;/a&gt; for re-running a task on file
system change.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gnu.org/software/make/manual/&quot;&gt;GNU Make&lt;/a&gt; for defining tasks.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For those of you who want the code right now, grab my
&lt;a href=&quot;https://github.com/zspencer/make-many-rubies&quot;
id=&quot;make-many-rubies-mid&quot;&gt;make-many-rubies&lt;/a&gt; repo. For those interested in the
thought process, read on.&lt;/p&gt;

&lt;h3 id=&quot;make-and-rake-better-together&quot;&gt;Make and Rake, Better Together.&lt;/h3&gt;

&lt;p&gt;Make is a powerful build system. While Rake is great for complex tasks that
require a language with functions and lists, Make shines at discoverability
(&lt;a href=&quot;http://bash-completion.alioth.debian.org&quot;&gt;free tab-completion!&lt;/a&gt; woo!) and
cross-language support.&lt;/p&gt;

&lt;p&gt;I tend to have a Makefile in every project I work on which encapsulate the
primary commands:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;make run&lt;/code&gt; - Runs the project&lt;/li&gt;
&lt;li&gt;&lt;code&gt;make test&lt;/code&gt; - Tests the project&lt;/li&gt;
&lt;li&gt;&lt;code&gt;make build&lt;/code&gt; - Builds the project&lt;/li&gt;
&lt;li&gt;&lt;code&gt;make release&lt;/code&gt; - Releases the project artifact.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;make deploy&lt;/code&gt; - Deploys the project to production.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;make tbrd&lt;/code&gt; - Pronounced &amp;quot;Tee-bird&amp;quot; tests, builds, releases and deploys the
project.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These tasks allow projects to have a common interface no matter what language,
deployment strategy, or test framework we use. Not every project has every task
of course; but the convention makes switching between different kinds of
projects in different languages a bit easier.&lt;/p&gt;

&lt;h3 id=&quot;read-the-source-luke&quot;&gt;Read the Source, Luke!&lt;/h3&gt;

&lt;p&gt;If you haven&amp;#39;t already, check out the &lt;a
href=&quot;https://github.com/zspencer/make-many-rubies&quot;
id=&quot;make-many-rubies-bot&quot;&gt;make-many-rubies&lt;/a&gt; repo. The Makefile is annotated
on every single line; and the Readme provides (hopefully useful) usage
instructions.&lt;/p&gt;

&lt;p&gt;Did you find this helpful? I&amp;#39;d love to hear how you keep your code working
across multiple ruby versions or use make to create a common interface across
teams and projects! Why not &lt;a id=&quot;send-email&quot; href=&quot;mailto:
zee@wecohere.com&quot;&gt;drop me a line&lt;/a&gt;?&lt;/p&gt;
</content>
  </entry>
  
  
  
  <entry>
    <id>http://zeespencer.com/migitating-anxiety-on-software-teams</id>
    <link type="text/html" rel="alternate" href="http://zeespencer.com/migitating-anxiety-on-software-teams"/>
    <title>Migitating Anxiety On Software Teams</title>
    <updated>2014-12-07T00:00:00-08:00</updated>
    <author>
      <name>Zee</name>
      <uri>http://zeespencer.com/</uri>
    </author>
    <content type="html">&lt;p&gt;Software development is a creative pursuit. It takes intense focus as well as
time away from a problem to for subconscious work. Both of these cognitive modes
are debilitated by stress and anxiety.&lt;/p&gt;

&lt;p&gt;A major source of anxiety is uncertainty. Uncertainty is almost always deeply
personal, and may be about many things:&lt;/p&gt;

&lt;!--more--&gt;

&lt;ul&gt;
&lt;li&gt;Are we earning enough to live comfortably?&lt;/li&gt;
&lt;li&gt;Are we compensated fairly for our time, effort and skills?&lt;/li&gt;
&lt;li&gt;Are our skills improving in a worth-while direction at a reasonable rate?&lt;/li&gt;
&lt;li&gt;Are we learning what we want to learn?&lt;/li&gt;
&lt;li&gt;Am we at risk of &lt;a href=&quot;http://www.apa.org/research/action/stereotype.aspx&quot;&gt;stereotype
threat&lt;/a&gt;?&lt;/li&gt;
&lt;li&gt;Is our work of a good quality?&lt;/li&gt;
&lt;li&gt;How do others perceive us? (especially those we respect or in positions of authority.)&lt;/li&gt;
&lt;li&gt;Is our work environment comfortable and condusive to our work style?&lt;/li&gt;
&lt;li&gt;Does our work matter?&lt;/li&gt;
&lt;li&gt;Do people expect us to represent &lt;a href=&quot;http://xkcd.com/385&quot;&gt;other people like us&lt;/a&gt;?&lt;/li&gt;
&lt;li&gt;And many, many more.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We may map these reasons to &lt;a href=&quot;http://danpink.com&quot;&gt;dan pink&amp;#39;s&lt;/a&gt; three drivers for
motivation:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Mastery&lt;/li&gt;
&lt;li&gt;Autonomy&lt;/li&gt;
&lt;li&gt;Purpose&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Anxiety saps our motivation by discouraging or obscuring mastery, making us
subservient to our fears, and keeps us focused inward instead of on the effect
of the work we&amp;#39;re doing. When we are anxious our conscious and sub-concious
attention is drained, preventing us from executing.&lt;/p&gt;

&lt;p&gt;In a well-adjusted team, we must make an effort to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Understand the anxieties we face individually and as a group.&lt;/li&gt;
&lt;li&gt;Take concrete steps to address and alleviate anxieties.&lt;/li&gt;
&lt;li&gt;Advocate for and make systemic changes which mitigate these anxieties.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Our responses to how anxiety manifests are often personal. There&amp;#39;s no &amp;quot;one size
fits all&amp;quot; approach to ensure people maintain a state of productive flow
unhindered by uncertainty and anxiety; however there are some things that have
significant impact:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Compensation&lt;/li&gt;
&lt;li&gt;Education&lt;/li&gt;
&lt;li&gt;Information&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;compensation&quot;&gt;Compensation&lt;/h3&gt;

&lt;p&gt;Anxieties rooted in finances are sticky. People feel uncomfortable discussing
money and companies prefer to keep personnel costs low. This is especially true
in software companies which have most of their budget devoted to salaries and
benefits.&lt;/p&gt;

&lt;p&gt;Some companies are taking radical steps, such as &lt;a href=&quot;http://www.management30.com/workout/salary-formula/&quot;&gt;using a salary
formula&lt;/a&gt; and &lt;a href=&quot;https://open.bufferapp.com/introducing-open-salaries-at-buffer-including-our-transparent-formula-and-all-individual-salaries/&quot;&gt;publicly
publishing salary
data&lt;/a&gt;.
I&amp;#39;m not 100% sold on this level of transparency, but it is a powerful way to
address perceived fairness. Here are a few other steps to reduce anxiety and
maintain high levels of creativity, attention, and motivation:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Pay people well and fairly, regardless of role. Pay hierarchies cause people
to resent others in roles at different pay levels, especially when there&amp;#39;s not
many opportunities to understand and appreciate the work others are doing.&lt;/li&gt;
&lt;li&gt;Don&amp;#39;t trade &amp;quot;culture&amp;quot; for compensation. Office toys and work-cations are
fun, but it doesn&amp;#39;t put food on the table; and they &lt;a href=&quot;https://modelviewculture.com/pieces/how-perks-can-divide-us&quot;&gt;can cause unintended
division&lt;/a&gt;. Perks
can&amp;#39;t take priority over respect.&lt;/li&gt;
&lt;li&gt;Don&amp;#39;t over-sell equity. Future income doesn&amp;#39;t alleviate current financial
pressure. A high-value on equity may encourage distrust, since the founders,
executives or board members &amp;quot;selling&amp;quot; the equity tend to over-value it. Plus,
startup equity &lt;a href=&quot;http://danilocampos.com/2015/01/startup-equity-benefits-your-boss-not-you/&quot;&gt;disproportionaly benefits
owners&lt;/a&gt;
over employees.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;education&quot;&gt;Education&lt;/h3&gt;

&lt;p&gt;Many software professionals are driven by our ability to create. We want to see
our abilities deepen and learn complementary skills. At the same time, we fear
our work is sub-par or we &lt;a href=&quot;http://www.huffingtonpost.com/morty-lefkoe/do-you-suffer-from-the-im_b_4791763.html&quot;&gt;don&amp;#39;t
belong&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;While we can&amp;#39;t guarantee the language or framework we&amp;#39;re using will continue to
be in fashion, we can:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Provide a set of expectations about what skills are valued in a given role. By
explicitely defining what makes a &amp;quot;Senior&amp;quot; engineer vs. a &amp;quot;Junior&amp;quot; one, we
create a mirror for people to look into and self-evaluate that the skills they
have are valuable.&lt;/li&gt;
&lt;li&gt;Focus on fundamentals and core skills instead of frameworks and technologies.
New techniques, libraries, and concepts come and go in the software world. By
encouraging people to level up their core skills we create current and future safety.&lt;/li&gt;
&lt;li&gt;Support new ideas and techniques. Discouraging teammates from trying out a new
technology or user research technique is an easy way to cause self-doubt and
anxiety.&lt;/li&gt;
&lt;li&gt;Support learning. Encourage reading at work. Provide a budget for
self-improvement that doesn&amp;#39;t have to be spent on conferences.  Support people
in the things and ways &lt;em&gt;they&lt;/em&gt; want to learn, not just what a company deems
worthwhile.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;information&quot;&gt;Information&lt;/h3&gt;

&lt;p&gt;Layoffs and re-organizations are almost always a source of anxiety. Buffer has a
very interesting approach of &lt;a href=&quot;https://open.bufferapp.com/buffer-november-update-2347000-run-rate-1189000-users/&quot;&gt;publicizing their financial data every
month&lt;/a&gt;.
While, again, this may not work for every business; providing reliable
information that builds trust among the people in the business is crucial. Some
anxiety inducing questions are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Are our sales healthy?&lt;/li&gt;
&lt;li&gt;Is there a connection between the work we&amp;#39;re doing and customer
satisfaction/financial stability?&lt;/li&gt;
&lt;li&gt;What are the risks people see and how are we avoiding them?&lt;/li&gt;
&lt;li&gt;Are there up-coming organizational changes that may affect how I do my work?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;How each company addresses these kinds of questions is tough. No matter how you
choose to do so, there&amp;#39;s a few tactics that are effective:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Terseness is a virtue. Long meandering reports are more interesting for the
person doing the reporting than the people effected by it.&lt;/li&gt;
&lt;li&gt;Make it consumable asyncronously. Being able to read and review information at
ones own convenience allows people to decide when and what to explore.&lt;/li&gt;
&lt;li&gt;Consistency is huge. Consistency in both delivery and type of information
presented helps people notice trends.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Don&amp;#39;t mandate it&lt;/em&gt;. Not everyone wants all the information or even the same
information. Distributing knowledge via a mandatory meeting can cast people
who are not anxious about the information as disengaged.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Providing financial stability, direction and time for improving skills, and
knowledge about the current and likely future state of a company all go a long
way in freeing up a teams mental capacity.&lt;/p&gt;

&lt;p&gt;I&amp;#39;d love to hear your thoughts on how anxiety and uncertainty affects software
teams! Why not &lt;a id=&quot;send-email&quot; href=&quot;mailto: zee@wecohere.com&quot;&gt;drop me a
line&lt;/a&gt;?&lt;/p&gt;
</content>
  </entry>
  
  
  
  <entry>
    <id>http://zeespencer.com/a-year-in-review-with-a-walking-desk</id>
    <link type="text/html" rel="alternate" href="http://zeespencer.com/a-year-in-review-with-a-walking-desk"/>
    <title>A Year In Review With A Walking Desk</title>
    <updated>2014-11-30T00:00:00-08:00</updated>
    <author>
      <name>Zee</name>
      <uri>http://zeespencer.com/</uri>
    </author>
    <content type="html">&lt;p&gt;For the past year or so, I&amp;#39;ve been doing most of my computing at a walking
desk. When I tell people this, they immediately ask &amp;quot;But how?!&amp;quot; or confidently
declare &amp;quot;I wouldn&amp;#39;t be able to walk while working!&amp;quot;&lt;/p&gt;

&lt;p&gt;While I was a bit skeptical at first, I find a walking desk fits quite nicely
into my work habits. I start the day with a mile or so walk, followed by
sitting and/or standing until lunch. After lunch I sit for a while, then switch
to walking. On a good day, I walk about eight miles. On average, I tend to walk
two to four miles a day.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h3 id=&quot;how-fast-do-you-walk&quot;&gt;How Fast Do You Walk?&lt;/h3&gt;

&lt;p&gt;While working, I&amp;#39;ve found I walk between 1.4 and 1.8 miles per hour. Any slower
or faster and I have to think too much about walking. While gaming, I can go up
to 2.2 miles per hour without my click accuracy going down significantly.&lt;/p&gt;

&lt;h3 id=&quot;what-does-walking-do-for-you&quot;&gt;What Does Walking Do For You?&lt;/h3&gt;

&lt;p&gt;When I am at a high energy level, I&amp;#39;ve found that walking helps me increase
my focus. The part of my brain that wants to be distracted by email, chat or
twitter has something to focus on, putting one foot in front of the other!&lt;/p&gt;

&lt;p&gt;When already fatigued, however, walking tends to fatigue me quicker. I
switch between walking and standing frequently, or decide I need a quick break
despite having gotten very little done or spending very little time focused
on the problem at hand.&lt;/p&gt;

&lt;h3 id=&quot;what-desk-treadmill-and-chair-do-you-have&quot;&gt;What Desk, Treadmill, and Chair Do You Have?&lt;/h3&gt;

&lt;p&gt;My setup consists of:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;a href=&quot;http://www.steelcase.com/en/products/category/seating/task/leap/pages/overview.aspx&quot;&gt;Steelcase Leap&lt;/a&gt; chair&lt;/li&gt;&lt;/li&gt;
&lt;li&gt;The 6&amp;#39; &lt;a href=&quot;http://www.ergodepot.com/Jarvis_Desk_p/jrv.htm&quot;&gt;Ergodepot Jarvis&lt;/a&gt;&lt;/li&gt;&lt;/li&gt;
&lt;li&gt;The &lt;a href=&quot;http://www.lifespanfitness.com/tr1200-dt3-under-desk-treadmill&quot;&gt;Lifespan TR1200&lt;/a&gt;&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;figure&gt;
  &lt;a href=&quot;images/standing-desk-with-treadmill-and-chair.jpg&quot;&gt;
    &lt;img alt=&quot;Standing desk with treadmill and chair&quot;
         src=&quot;/assets/images/standing-desk-with-treadmill-and-chair.jpg&quot; /&gt;
    &lt;figcaption&gt;The Jarvis, TR1200, and Leap&lt;/figcaption&gt;
  &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;I went with the wide desk because the company I was working for
provided two 27&amp;quot; thunderbolt displays. A full 6&amp;#39; wide desk area meant I could
use part of the desk for drawing or pen-and-paper note taking without feeling
cramped. The desk is also on wheels, which makes it easy to roll back and forth
as I switch between sitting and standing. This requires placing the treadmill
in the middle of the room, however so I abandoned it in my current setup.&lt;/p&gt;

&lt;p&gt;The Leap is, quite frankly, an amazing chair. I was walking &lt;em&gt;far more&lt;/em&gt; when
I had to choose between walking and a shitty chair. Now that I have the Leap I
sit way too often. Ah well. Lesson learned! Don&amp;#39;t buy a nice chair if you want to walk more!&lt;/p&gt;

&lt;p&gt;The TR1200 is a reasonable treadmill. While not noisy enough to bother me while listening to music,
I tend to use &lt;a href=&quot;http://mizage.com/shush/&quot;&gt;Shush&lt;/a&gt; to enable push to
talk when on calls. My MacBook Air&amp;#39;s microphone seems to pick up a gentle
&amp;quot;whoosh whoosh&amp;quot; of the belt and the &amp;quot;slap slap&amp;quot; of my feet.&lt;/p&gt;

&lt;h3 id=&quot;what-would-you-change-if-you-did-it-again&quot;&gt;What Would You Change If You Did It Again?&lt;/h3&gt;

&lt;p&gt;To be honest, I&amp;#39;m torn on this. I really like my current setup. It works
really well, and keeps me moving.&lt;/p&gt;

&lt;p&gt;I&amp;#39;m kind of tempted to try out some experiments to see if I walk more if
it&amp;#39;s easier or harder to switch between sitting or working. If I find I walk
more when it&amp;#39;s harder to switch, I&amp;#39;d try two non-adjustable desks, one high for
walking (with the nice monitor), one low for sitting.&lt;/p&gt;

&lt;p&gt;I do wish I&amp;#39;d spent less on the chair. The Leap is fantastic, but my partner&amp;#39;s
Ikea &lt;a href=&quot;http://www.ikea.com/us/en/catalog/products/00103102/&quot;&gt;Markus&lt;/a&gt; is quite
comfortable and several hundred dollars cheaper.&lt;/p&gt;

&lt;p&gt;There&amp;#39;s also been some word of &lt;a href=&quot;http://standdesk.co/products/stand-desk&quot;&gt;much cheaper adjustable height
desks&lt;/a&gt;. Heck, even &lt;a href=&quot;http://www.wired.com/2014/11/ikea-bekant-desk/&quot;&gt;Ikea is getting in
on it!&lt;/a&gt;&lt;/p&gt;
</content>
  </entry>
  
  
  
  <entry>
    <id>http://zeespencer.com/getting-past-junior</id>
    <link type="text/html" rel="alternate" href="http://zeespencer.com/getting-past-junior"/>
    <title>Getting Past Junior</title>
    <updated>2014-06-27T00:00:00-07:00</updated>
    <author>
      <name>Zee</name>
      <uri>http://zeespencer.com/</uri>
    </author>
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;Junior developers make complex solutions for simple problems.&lt;/p&gt;

&lt;p&gt;Average developers make simple solutions for simple problems and complex
solutions for complex problems.&lt;/p&gt;

&lt;p&gt;Senior developers make simple solutions for complex problems.&lt;/p&gt;

&lt;footer&gt;
&lt;cite&gt;Unknown&lt;/cite&gt;
&lt;/footer&gt;&lt;/blockquote&gt;

&lt;!--more--&gt;

&lt;p&gt;I was pairing with a friend of mine who is working as a junior developer. We
were reviewing and rewriting some of the code, and he asked &amp;quot;I can see this is
better, but how did you know to do it?&amp;quot;&lt;/p&gt;

&lt;p&gt;Well.&lt;/p&gt;

&lt;p&gt;That&amp;#39;s a hard question. I mumbled something about &amp;quot;When you&amp;#39;ve been doing
this as long as I have...&amp;quot;&lt;/p&gt;

&lt;p&gt;And that&amp;#39;s a bullshit answer.&lt;/p&gt;

&lt;p&gt;Much of my judgement comes from seeing what has worked and what didn&amp;#39;t; yet
that&amp;#39;s only part of the story. I take several deliberate actions to hone my
judgement:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;I Write throw-away code&lt;/li&gt;
&lt;li&gt;I Surround myself with expertise&lt;/li&gt;
&lt;li&gt;I Read. Constantly.&lt;/li&gt;
&lt;li&gt;I Turn the knob to 11&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;write-throw-away-code&quot;&gt;Write Throw-Away Code&lt;/h3&gt;

&lt;p&gt;Whether I&amp;#39;m working on a
&lt;a href=&quot;http://codekata.com/kata/codekata-how-it-started/&quot;&gt;kata&lt;/a&gt; or a &lt;a href=&quot;http://chimera.labs.oreilly.com/books/1234000001813/ch05.html#breakable_toys&quot;&gt;breakable
toy&lt;/a&gt;
or even production software; I throw away most of the code I write. Why? Because
my first attempt is a poor attempt. I use my first pass as a
&lt;a href=&quot;http://www.extremeprogramming.org/rules/spike.html&quot;&gt;&amp;quot;spike&amp;quot;&lt;/a&gt;, a kind of
hands-on learning opportunity.&lt;/p&gt;

&lt;p&gt;This gives me the freedom to experiment and explore without worrying about
adding unnecessary &lt;a href=&quot;https://en.wikipedia.org/wiki/Technical_debt&quot;&gt;technical
debt&lt;/a&gt;. This lets me go off the
beaten path a bit and try things I never would have if I knew it had to go into
production. Sure, some of these experiments are dead ends; but they invariably
provide me with more information about how to solve the kind of problem I&amp;#39;m
working in.&lt;/p&gt;

&lt;p&gt;Safety to experiment is crucial for building judgement.&lt;/p&gt;

&lt;h3 id=&quot;surround-yourself-with-expertise&quot;&gt;Surround Yourself With Expertise&lt;/h3&gt;

&lt;p&gt;While I may think I&amp;#39;m pretty hot shit when it comes to software development, the
fact of the matter is that there are thousands of developers with more experience,
better judgement, and deeper understanding than I. Add in the sheer breadth of
specialities in software and it&amp;#39;s pretty overwhelming. And humbling!&lt;/p&gt;

&lt;p&gt;I&amp;#39;ve spent the past 6 years building a network of people across a wide range of
specialities. From software testers to interaction designers to operations
engineers to machine learning scientists. When I have a problem, I can send off
an email or aks a question in IRC or Twitter.&lt;/p&gt;

&lt;p&gt;By investing in friendships across disciplines I &amp;quot;outsource&amp;quot; my judgement. This
helps me build judgement in a new territory quickly and effectively.&lt;/p&gt;

&lt;h3 id=&quot;read-constantly&quot;&gt;Read. Constantly.&lt;/h3&gt;

&lt;p&gt;And not just books. Read code. Find small code bases that do specific things and
read and annotate them. Find large code bases and skim them. I regularly
practice diving into an unfamiliar project and figuring out what&amp;#39;s going on.&lt;/p&gt;

&lt;p&gt;This builds judgement by letting me see how people I&amp;#39;ve never even met solve
problems. It also builds my ability to understand unfamiliar code.&lt;/p&gt;

&lt;p&gt;Not to undervalue books at all. I easily spend $500+ a year in technology books;
mostly when I&amp;#39;m learning a framework, language or tool.&lt;/p&gt;

&lt;h3 id=&quot;turn-the-knob-to-11&quot;&gt;Turn The Knob To 11&lt;/h3&gt;

&lt;p&gt;Turning the knob to 11 is when you take a very specific concept; and over-apply
it. Over-applying a technique or technology is the easiest way to find its
shortcomings. Want to learn to TDD? TDD &lt;em&gt;everything&lt;/em&gt; for a year. At the end
you&amp;#39;ll have a solid understanding of when to and when not to TDD.&lt;/p&gt;

&lt;p&gt;I love turning the knob to 11; but since it is directly intended to discover
where something breaks down it isn&amp;#39;t always a good practice to apply to
production code.&lt;/p&gt;

&lt;h3 id=&quot;judgement-makes-perfect&quot;&gt;Judgement Makes Perfect&lt;/h3&gt;

&lt;p&gt;Practice makes permanent, feedback and judgement makes perfect. Reflect on
your work. Intentionally seek the edges of your skills. This is how you move
beyond junior.&lt;/p&gt;
</content>
  </entry>
  
  
  
  <entry>
    <id>http://zeespencer.com/the-chefs-tale</id>
    <link type="text/html" rel="alternate" href="http://zeespencer.com/the-chefs-tale"/>
    <title>The Chef's Tale</title>
    <updated>2014-06-25T00:00:00-07:00</updated>
    <author>
      <name>Zee</name>
      <uri>http://zeespencer.com/</uri>
    </author>
    <content type="html">&lt;p&gt;Once upon a time there was a Chef. This Chef was sought by all of the rulers in
the land to cater their feasts. The Chef was ferried from castle to castle;
delighting all for whom they cooked.&lt;/p&gt;

&lt;p&gt;One day, a pair of scullery workers asked The Chef to tell them the secret. &amp;quot;My
children,&amp;quot; The Chef replied, &amp;quot;I have no secret. I wake up each day. I plan what
I will make. I make it. I review how it went. I learn when things don&amp;#39;t go
well, and I learn when things do.&lt;/p&gt;

&lt;p&gt;&amp;quot;But surely,&amp;quot; one child contended, &amp;quot;surely your renowned and creative dishes
must have a secret ingredient! Perhaps dust of a unicorn horn? Dragons blood?
Fairy hair?&amp;quot;&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;&amp;quot;I do not! When I explore a dish, I make it many different ways. Sometimes I
make it week upon week. I modify the ingredients. I alter timing. I change
the cooking temperature. Each day I seek to understand the dish more deeply.&lt;/p&gt;

&lt;p&gt;If I do not make a finished meal, I go hungry! If I ignore the
process, I do not learn! There is no secret, only work and discipline.&amp;quot;&lt;/p&gt;

&lt;p&gt;As the children returned to their duties, one mocked The Chef. &amp;quot;The Chef wants
all the fame and glory! They must be hiding a secret ingredient!&amp;quot;&lt;/p&gt;

&lt;p&gt;&amp;quot;I don&amp;#39;t know...&amp;quot; said the other. &amp;quot;Perhaps tomorrow I shall make my meal.&amp;quot;&lt;/p&gt;
</content>
  </entry>
  
  
  
  <entry>
    <id>http://zeespencer.com/the-vim-lovers-guide-to-editing-clojure</id>
    <link type="text/html" rel="alternate" href="http://zeespencer.com/the-vim-lovers-guide-to-editing-clojure"/>
    <title>The Vim Lovers Guide to Editing Clojure</title>
    <updated>2013-12-05T00:00:00-08:00</updated>
    <author>
      <name>Zee</name>
      <uri>http://zeespencer.com/</uri>
    </author>
    <content type="html">&lt;p&gt;I&amp;#39;ve recently started a Clojure gig, which has a pretty emacs-oriented language
ecosystem. Emacs uses Cider and Paredit to make it super easy to:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Move parenthesis around S-Expressions (aka &amp;#39;slurping&amp;#39; and &amp;#39;barfing&amp;#39;)&lt;/li&gt;
&lt;li&gt;Access a Clojure REPL&lt;/li&gt;
&lt;li&gt;Surround lines, words, etc. with parenthesis, braces, brackets and quotes&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Unfortunately I don&amp;#39;t really know emacs and would rather focus on learning a
language than an editor; so I set out to find vim equivalents.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Wonder of wonders, I happened upon:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;vim-fireplace&lt;/code&gt; for dead-simple REPL functionality, jump-to-source,
omni-complete, and a host of other goodies&lt;/li&gt;
&lt;li&gt;&lt;code&gt;surround.vim&lt;/code&gt; for changing, adding and removing braces, parenthesis, etc&lt;/li&gt;
&lt;li&gt;&lt;code&gt;paredit.vim&lt;/code&gt; for slurping and keeping parenthesis matching&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;vim-fireplace&quot;&gt;Vim Fireplace&lt;/h3&gt;

&lt;p&gt;Vim Fireplace is by none other than The Lord of Viml himself, Tim Pope. By
default it connects to the repl defined in &lt;code&gt;target/repl-port&lt;/code&gt; which makes it
pretty drop-in-and-go. Some of my favorite normal mode commands:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;cpp&lt;/code&gt; - Evaluate the s-expression and print the results&lt;/li&gt;
&lt;li&gt;&lt;code&gt;K&lt;/code&gt; - Print the Clojure documentation for the symbol under the cursor&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cqc&lt;/code&gt; - Open a mini-repl for executing arbitrary Clojure code&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cqq&lt;/code&gt; - Open a mini-repl, with the current S-expression pre-entered&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[d&lt;/code&gt; - Print the Clojure source for the symbol under the cursor&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[C-d&lt;/code&gt; - Go to the definition of the symbol under the cursor&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;It also comes with some nice command mode helpers as well:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;:A&lt;/code&gt; - Opens the test file for the given source file in the current buffer
(and vice versa). &lt;code&gt;AV&lt;/code&gt;/&lt;code&gt;AS&lt;/code&gt;/&lt;code&gt;AT&lt;/code&gt; are similar but are vsplit, split, and tab
respectively.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:Apropos &amp;lt;keyword&amp;gt;&lt;/code&gt; - Searches the current class path for symbols which
match the keyword&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:Eval &amp;lt;clojure code&amp;gt;&lt;/code&gt; - Executes arbitrary Clojure code and prints the
result&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;surround-vim&quot;&gt;Surround.vim&lt;/h3&gt;

&lt;p&gt;Surround.vim (also by Tim Pope) is great for manipulating parenthesis, quotes,
or brackets around your code. While initially designed for manipulating XML
documents and swapping tags, it&amp;#39;s definitely a handy tool for a new-found
lisper. Some normal mode commands:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;ys&amp;lt;motion&amp;gt;&amp;lt;char&amp;gt;&lt;/code&gt; - E.g. &lt;code&gt;ys$&amp;quot;&lt;/code&gt; surrounds the current line with quotation
marks I use &amp;quot;You&amp;#39;re surrounded &lt;code&gt;motion&lt;/code&gt; by &lt;code&gt;char&lt;/code&gt;!&amp;quot; for a mnemonic for this&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cs&amp;lt;motion&amp;gt;&amp;lt;current-char&amp;gt;&amp;lt;new-char&amp;gt;&lt;/code&gt; - Change Surrounding, E.g. &lt;code&gt;cs([&lt;/code&gt;
changes &lt;code&gt;(foo) to [foo]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ds&amp;lt;char&amp;gt;&lt;/code&gt; - Deletes the surrounding character. E.g. &lt;code&gt;ds(&lt;/code&gt; would change
&lt;code&gt;((foo))&lt;/code&gt; to &lt;code&gt;(foo)&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;paredit-vim&quot;&gt;Paredit.vim&lt;/h3&gt;

&lt;p&gt;Paredit.vim by Tamas Kavacs was extracted from Slimv, a much broader alternative
to vim-fireplace. Paredit.vim keeps your parenthesis well balanced, as well as
builds in slurping and barfing for your S Expressions.&lt;/p&gt;

&lt;p&gt;Paredit.vim is reasonably good, but if you use &lt;code&gt;\&lt;/code&gt; for your &lt;code&gt;leader&lt;/code&gt; key you&amp;#39;ll
want to add &lt;code&gt;let g:paredit_leader = &amp;#39;\&amp;#39;&lt;/code&gt; to your &lt;code&gt;.vimrc&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Unfortunately I&amp;#39;ve found it&amp;#39;s possible to accidentally unbalance your code,
making paredit.vim start to get in the way. The best way I&amp;#39;ve found to resolve
this is to select the offending character in visual mode and use &lt;code&gt;X&lt;/code&gt; to delete
it. This is because paredit does not seem to override &lt;code&gt;X&lt;/code&gt; in visual mode.&lt;/p&gt;

&lt;h3 id=&quot;happy-clojurevimming&quot;&gt;Happy ClojureVimming!&lt;/h3&gt;

&lt;p&gt;Overall, I&amp;#39;m pretty happy with this setup for now. It gives enough functionality
for me to focus on Clojure instead of the editor. Admittedly, I&amp;#39;ll probably want
to pick up emacs as soon as I&amp;#39;m reasonably comfortable in clojure.&lt;/p&gt;
</content>
  </entry>
  
  
  
  <entry>
    <id>http://zeespencer.com/designing-a-personal-learning-plan</id>
    <link type="text/html" rel="alternate" href="http://zeespencer.com/designing-a-personal-learning-plan"/>
    <title>Designing A Personal Learning Plan</title>
    <updated>2013-11-19T00:00:00-08:00</updated>
    <author>
      <name>Zee</name>
      <uri>http://zeespencer.com/</uri>
    </author>
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;Plans are worthless, but planning is everything. &lt;cite&gt;Dwight D.
Eisenhower&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We all have different paths along
&lt;a href=&quot;http://chimera.labs.oreilly.com/books/1234000001813/ch03.html&quot;&gt;the long road&lt;/a&gt;,
and it&amp;#39;s often difficult to find the best path. We have different goals and
different constraints. Some of us want to specialize in consumer-facing mobile
apps; others want to rethink the cryptographical underpinnings of our networking
protocols, and still others want to write code to provide a safe driving
experience for those of us who plummet down the highway in a metal container
going 80 miles an hour.&lt;/p&gt;

&lt;p&gt;This is OK; there&amp;#39;s tons of room for different passions in the technology field.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;The constraints in what you can accomplish as a programmer have less to do with
availability of meaningful problems and more to do with the resources you have
available to accomplish these objectives.&lt;/p&gt;

&lt;p&gt;This is why it&amp;#39;s critically important for each of us to design our own personal
learning plan. It&amp;#39;s incredibly easy to say &amp;quot;I want to build mobile apps!&amp;quot; or &amp;quot;I
want to develop embedded systems applications!&amp;quot; and never make any progress in
these goals.&lt;/p&gt;

&lt;p&gt;To start building my plan, I asked myself a few questions:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;What do I enjoy doing?&lt;/li&gt;
&lt;li&gt;What do I want to be significantly better at in 3 months?&lt;/li&gt;
&lt;li&gt;What are resources I could leverage to help accomplish these goals?&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Each week, I then set small, achievable goals that will take me a step closer to
my goals by creating a 1 ~ 3 item list that starts with &amp;quot;This week I intend
to...&amp;quot;&lt;/p&gt;

&lt;p&gt;At the end of the week, I reflect on the intentions and set new ones. For
intentions I didn&amp;#39;t follow through on, I default to &lt;em&gt;not&lt;/em&gt; choosing them for next
time. Instead, I ask myself:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Why did I not follow through with that intention?&lt;/li&gt;
&lt;li&gt;What does this failure to follow through mean about my long term goals?&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;By following this lightweight planning and reflection strategy, I&amp;#39;ve found it&amp;#39;s
much easier for me to intentionally improve my skills as a programmer.&lt;/p&gt;

&lt;p&gt;Hopefully it&amp;#39;ll also help you!&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This article was originally posted on
&lt;a href=&quot;https://medium.com/@growdevelopers/designing-a-personal-learning-plan-3755e953e85e&quot;&gt;Growing Developers&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Have other advice on how to improve your programming skills? &lt;a
class=&quot;feedback-email&quot; href=&quot;mailto: zee@wecohere.com&quot;&gt;Send me your
thoughts.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Are you or your team interested in personalized coaching as you learn to
program? I&amp;#39;d love to &lt;a class=&quot;lead-email&quot; href=&quot;mailto: zee@wecohere.com&quot;&gt;help
you design a personal learning plan for your or your team!&lt;/a&gt;&lt;/p&gt;
</content>
  </entry>
  
  
  
  <entry>
    <id>http://zeespencer.com/teach-yourself-programming-in-10000-hours</id>
    <link type="text/html" rel="alternate" href="http://zeespencer.com/teach-yourself-programming-in-10000-hours"/>
    <title>Teach Yourself Programming in 10,000 Hours</title>
    <updated>2013-11-13T00:00:00-08:00</updated>
    <author>
      <name>Zee</name>
      <uri>http://zeespencer.com/</uri>
    </author>
    <content type="html">&lt;p&gt;Becoming an excellent programmer is hard. It takes
&lt;a href=&quot;http://expertenough.com/1423/deliberate-practice&quot;&gt;deliberate practice&lt;/a&gt;,
&lt;a href=&quot;http://chimera.labs.oreilly.com/books/1234000001813/ch04.html#find_mentors&quot;&gt;mentorship&lt;/a&gt;,
and availability of &lt;a href=&quot;http://teamtreehouse.com/home&quot;&gt;quality&lt;/a&gt;
&lt;a href=&quot;https://www.codeschool.com/&quot;&gt;resources&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It takes &lt;a href=&quot;https://en.wikipedia.org/wiki/Outliers_(book)&quot;&gt;thousands of hours&lt;/a&gt; to
become en expert in a field, and programming is no exception.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;I want to help people get their 10,000 hours. So I&amp;#39;m relaunching
&lt;a href=&quot;http://growingdevelopers.com&quot;&gt;Growing Developers&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Growing Developers will offer discussion groups, chat rooms, hangouts, and other
pieces of &lt;a href=&quot;/articles/structure-and-space/&quot;&gt;structure&lt;/a&gt; to support an online
community of programmers who are constantly leveling up.&lt;/p&gt;

&lt;p&gt;If you are interested in any way, drop me a line at
&lt;a href=&quot;mailto:zee@wecohere.com&quot;&gt;zee@wecohere.com&lt;/a&gt; and we can level up together.&lt;/p&gt;
</content>
  </entry>
  
  
  
  <entry>
    <id>http://zeespencer.com/fear-not-your-ignorance</id>
    <link type="text/html" rel="alternate" href="http://zeespencer.com/fear-not-your-ignorance"/>
    <title>Fear Not Your Ignorance</title>
    <updated>2013-11-12T00:00:00-08:00</updated>
    <author>
      <name>Zee</name>
      <uri>http://zeespencer.com/</uri>
    </author>
    <content type="html">&lt;p&gt;Ignorance is a blessing. An opportunity.&lt;br /&gt;
Ignorance is where possibilities are boundless.&lt;br /&gt;
Don&amp;#39;t fear it. Embrace it.&lt;br /&gt;
Explore the unknown.&lt;br /&gt;&lt;/p&gt;
</content>
  </entry>
  
  
  
  <entry>
    <id>http://zeespencer.com/structure-and-space</id>
    <link type="text/html" rel="alternate" href="http://zeespencer.com/structure-and-space"/>
    <title>Structure and Space</title>
    <updated>2013-11-09T00:00:00-08:00</updated>
    <author>
      <name>Zee</name>
      <uri>http://zeespencer.com/</uri>
    </author>
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;First we shape our buildings, thereafter they shape us.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I first heard this phrase from my friend and colleague &lt;a href=&quot;http://blog.davingranroth.com/&quot;&gt;Davin
Granroth&lt;/a&gt;. While the phrase may originally have
been meant literally; I prefer a more allegorical interpretation.&lt;/p&gt;

&lt;!--more--&gt;

&lt;blockquote&gt;
&lt;p&gt;First we shape our society, thereafter it shapes us.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We may also remove the linear relationship if we desire:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;As we shape our society, it also shapes us.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I believe the structures we put in place and the spaces we have available are
the primary way society is shaped:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Space - The opportunities/lack of opportunities to exercise
&lt;a href=&quot;http://www.zeespencer.com/articles/agency-society-and-invention/&quot;&gt;agency&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Structure - The support for/obstacles to exercising your agency.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;space&quot;&gt;Space&lt;/h2&gt;

&lt;p&gt;Space may be thought of as &lt;em&gt;the availability of resources&lt;/em&gt;. Including, but not limited to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Time to use as we see fit.&lt;/li&gt;
&lt;li&gt;Money to spend in a way we believe most beneficial.&lt;/li&gt;
&lt;li&gt;Information, both accurate and accessible for our reference.&lt;/li&gt;
&lt;li&gt;Tools which we can use with limited instruction or fear.&lt;/li&gt;
&lt;li&gt;Wisdom we can rely on to guide our actions. Likely passed down from mentors.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For those who read Tom DeMarco it is similar to his definition of
&lt;a href=&quot;http://www.amazon.com/Slack-Getting-Burnout-Busywork-Efficiency/dp/0932633617&quot;&gt;slack&lt;/a&gt;,
a rejection of the time scarcity that is so prevalent today.&lt;/p&gt;

&lt;h2 id=&quot;structure&quot;&gt;Structure&lt;/h2&gt;

&lt;p&gt;Structure can be thought of as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The official, known rules we follow.&lt;/li&gt;
&lt;li&gt;The social norms we conform to.&lt;/li&gt;
&lt;li&gt;Physical constraints, such as the maximum speed for safe travel in an
automobile.&lt;/li&gt;
&lt;li&gt;Expectations we feel compelled to live up to, and hold others to as well.&lt;/li&gt;
&lt;li&gt;Obligations we fulfill for those around us.&lt;/li&gt;
&lt;li&gt;Habits which pervade our life in sometimes unexpected ways.&lt;/li&gt;
&lt;li&gt;Other &lt;a href=&quot;https://en.wikipedia.org/wiki/Affordance&quot;&gt;Affordances&lt;/a&gt; that restrict or
expand our ability to interact with the world and people around us.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;space-and-structure&quot;&gt;Space and Structure&lt;/h2&gt;

&lt;p&gt;Space and structure are so tightly related it feels impossible to seperate them
truly. As we adjust the structures around us, our available resources change. As
we make use of space, it impacts those around us. Often creating
structures which may decrease others space.&lt;/p&gt;

&lt;p&gt;Choosing how to use space and changing structures to create space for everyone
is an important part of creating a positive social force. Such changes must be
deliberate and thoughtful. Some questions which may help when considering
structural changes are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What is the intended goal of the structural change?&lt;/li&gt;
&lt;li&gt;Who may this structural change effect?&lt;/li&gt;
&lt;li&gt;How does this structural change come to exist?&lt;/li&gt;
&lt;li&gt;Who is likely to adopt the change first? Why?&lt;/li&gt;
&lt;li&gt;When will an impact be visible?&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  
  
  
  <entry>
    <id>http://zeespencer.com/impromptu-introduction-to-javascript</id>
    <link type="text/html" rel="alternate" href="http://zeespencer.com/impromptu-introduction-to-javascript"/>
    <title>Intro to JavaScript - TDD a Palindrome Checker</title>
    <updated>2013-11-05T00:00:00-08:00</updated>
    <author>
      <name>Zee</name>
      <uri>http://zeespencer.com/</uri>
    </author>
    <content type="html">&lt;p&gt;I was hanging out at the &lt;a href=&quot;http://swcguild.com/&quot;&gt;Software Craftsmanship Guild&lt;/a&gt;
today, and after a short conversation about managing complexity and the four
rules of simple design; they asked for an introduction to JavaScript.&lt;/p&gt;

&lt;p&gt;So of course I obliged. Here I impromptu TDD a palindrome checker in
JavaScript.&lt;/p&gt;

&lt;!--more--&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;//www.youtube.com/embed/OWL-ev-j89s&quot;
frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;
</content>
  </entry>
  
  
  
  <entry>
    <id>http://zeespencer.com/agency-society-and-invention</id>
    <link type="text/html" rel="alternate" href="http://zeespencer.com/agency-society-and-invention"/>
    <title>Agency, Society, and Invention</title>
    <updated>2013-10-29T00:00:00-07:00</updated>
    <author>
      <name>Zee</name>
      <uri>http://zeespencer.com/</uri>
    </author>
    <content type="html">&lt;p&gt;I&amp;#39;ve become convinced a life well lived requires a high level of personal
agency.&lt;/p&gt;

&lt;p&gt;I believe this not from rational introspection or a position of moral
highground; but from noticing the things which make me happy or sad, bring me
joy or rage, or drive me to engage or withdraw.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Before we can continue, I&amp;#39;d like to explore the definition of agency.&lt;/p&gt;

&lt;h2 id=&quot;a-poor-yet-working-definition-of-agency&quot;&gt;A poor, yet working, definition of agency&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Agency is ones ability to choose how to live their life.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Consider the available resources we all have:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Time&lt;/li&gt;
&lt;li&gt;Physical strength&lt;/li&gt;
&lt;li&gt;Emotional presence&lt;/li&gt;
&lt;li&gt;Mental attention&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Someone with high agency effortlessly chooses how to spend these resources.
Someone with low agency struggles to choose how to spend these resources.&lt;/p&gt;

&lt;h2 id=&quot;what-does-this-have-to-do-with-society&quot;&gt;What does this have to do with society?&lt;/h2&gt;

&lt;p&gt;If you agree with this definition of agency, the following statement
may be reasonable:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A useful measure of society is how it increases or decreases the agency of
the people who dwell within it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;what-does-this-have-to-do-with-invention&quot;&gt;What does this have to do with invention?&lt;/h2&gt;

&lt;p&gt;Again, we must start with definitions.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Invention is the placement of a thing or idea into a new context&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Inventions are frequently placed into a societal context, and as such have an
impact upon that societys agency.&lt;/p&gt;

&lt;p&gt;Inventions tend to enable or disable individuals in interesting or unintended
ways. Consider the television. It increases availability of things one could
spend their mental energy on without ever leaving the home!&lt;/p&gt;

&lt;p&gt;However, it&amp;#39;s also a conduit for subtle(or less so!) conditioning which
influences how people &amp;quot;choose&amp;quot; to spend the limited resources we have
available.&lt;/p&gt;

&lt;h2 id=&quot;tying-it-all-together&quot;&gt;Tying it all together&lt;/h2&gt;

&lt;p&gt;As we build the inventions of this generation, we are responsible for
considering the impact of the things or ideas we are building on the agency of
the society they are being placed into.&lt;/p&gt;

&lt;h2 id=&quot;practical-steps&quot;&gt;Practical Steps&lt;/h2&gt;

&lt;p&gt;Some of the questions I like to ask myself when choosing what to invest my
resources in are:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Who is likely to have their agency impacted by this thing or idea?&lt;/li&gt;
&lt;li&gt;What are the positive ways this will impact their agency?&lt;/li&gt;
&lt;li&gt;What are the negative ways this will impact their agency?&lt;/li&gt;
&lt;/ol&gt;
</content>
  </entry>
  
  
  
  <entry>
    <id>http://zeespencer.com/back-to-coding</id>
    <link type="text/html" rel="alternate" href="http://zeespencer.com/back-to-coding"/>
    <title>Back to Codin'</title>
    <updated>2013-10-25T00:00:00-07:00</updated>
    <author>
      <name>Zee</name>
      <uri>http://zeespencer.com/</uri>
    </author>
    <content type="html">&lt;p&gt;The last 9 months have been some of the most amazing, fullfilling, enjoyable
months I&amp;#39;ve ever had.&lt;/p&gt;

&lt;p&gt;I&amp;#39;ve been lucky enough to teach nearly 150 hard working, passionate people the
basics of development and help launch their career in a field I love.&lt;/p&gt;

&lt;p&gt;This has consumed every ounce of my energy, so I&amp;#39;m looking forward to taking
time to recharge, relax, and &lt;strong&gt;build some software&lt;/strong&gt;.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h4 id=&quot;i-can-provide&quot;&gt;I can provide:&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;Some competence at writing useful, clean code&lt;/li&gt;
&lt;li&gt;Mentoring for developers, project/product managers, or interaction designers&lt;/li&gt;
&lt;li&gt;Horrible puns&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;im-looking-for&quot;&gt;I&amp;#39;m looking for:&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;A distributed team to work with&lt;/li&gt;
&lt;li&gt;For 10~30 hours a week&lt;/li&gt;
&lt;li&gt;To build something hard/fun/meaningful&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you are interested, I&amp;#39;d love to chat. My email is
&lt;a href=&quot;mailto:zee@wecohere.com&quot;&gt;zee@wecohere.com&lt;/a&gt;&lt;/p&gt;
</content>
  </entry>
  
  
  
  <entry>
    <id>http://zeespencer.com/extracting-an-application</id>
    <link type="text/html" rel="alternate" href="http://zeespencer.com/extracting-an-application"/>
    <title>Splitting codebases</title>
    <updated>2013-06-02T00:00:00-07:00</updated>
    <author>
      <name>Zee</name>
      <uri>http://zeespencer.com/</uri>
    </author>
    <content type="html">&lt;p&gt;As programmers, we split our code along what job those bits of code do for us.
We pontificate about whether MVVM or MVC or another pattern is the appropriate
way to build an app for the given language, environment, or problem domain.&lt;/p&gt;

&lt;p&gt;This is valuable! Adaptable code knows little about other parts of the system,
and good application design patterns guide us to writing adaptable code with
little effort.&lt;/p&gt;

&lt;p&gt;I am curious: how does slicing code along the job code does for users impact how
we build software?&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Consider the following:&lt;/p&gt;

&lt;p&gt;An application that has two user archetypes: a visitor and a regular
user. Regular users wind up using the messaging and content creation features
quite regularly, while visitors mostly visit pages which display content.&lt;/p&gt;

&lt;p&gt;If we care about separating concerns based upon what the code did for the
coders, we would build the content display feature and the content creation
features into the same application.&lt;/p&gt;

&lt;p&gt;If we care about separating code based upon what the code does for a person, we
could build the content display feature and the content creation features into
two different applications and route users to the appropriate application.&lt;/p&gt;

&lt;p&gt;Splitting these features into independent applications provides two advantages:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;It allows for experimentation. If I can route users based upon type to a separate app
seamlessly, the jump to routing users based upon cohort becomes much simpler.&lt;/li&gt;
&lt;li&gt;It allows for optimization. If we split our application, we could provide the
visitor application with caching without burdening the registered user
application.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This isn&amp;#39;t free, however, it requires answering some hard questions:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;How do we extract components to share between applications?&lt;/li&gt;
&lt;li&gt;How do we manage changes to shared components?&lt;/li&gt;
&lt;li&gt;How does this impact the complexity of our network layer?&lt;/li&gt;
&lt;li&gt;What is the appropriate timing to extract an application?&lt;/li&gt;
&lt;li&gt;What skills would I need to do so effectively?&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answering these questions will be most beneficial to those of us who are
designing our applications for experimentation and/or working on systems with
large differences in the resource demands between user types.&lt;/p&gt;

&lt;p&gt;From these groups, I expect to see the next generation of application patterns.
Patterns which make splitting codebases by what it does for a user as
commonplace as frameworks designed to make splitting codebases by what it does
for us programmers.&lt;/p&gt;
</content>
  </entry>
  
  
  
  <entry>
    <id>http://zeespencer.com/the-learn-startup</id>
    <link type="text/html" rel="alternate" href="http://zeespencer.com/the-learn-startup"/>
    <title>The Learn Startup</title>
    <updated>2013-05-13T00:00:00-07:00</updated>
    <author>
      <name>Zee</name>
      <uri>http://zeespencer.com/</uri>
    </author>
    <content type="html">&lt;p&gt;A long time ago, in an industry far far away, there were two competing
production models: the assembly line and the master craftsmen.&lt;/p&gt;

&lt;p&gt;The master craftsmen hand built each and every machine. Painstakingly ensuring
it was beautiful and functional. Each machine was resplendent and tuned to
perfection, but it took days to build one.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;The assembly line churned hundreds of machines for each one the craftsmen
produced. The machines worked and were not too shabby. Sure they were less
reliable, less beautiful, and less powerful, but they were also much less
expensive.&lt;/p&gt;

&lt;p&gt;Soon, the assembly line became the dominant form of manufacture. Producers began
to tweak their lines. Some increased the speed. Others added quality control at
the end. Still more built machines to do most of the work, seeking consistency
and precision.&lt;/p&gt;

&lt;p&gt;Eventually, the experiments yielded smaller and smaller results, to the point
where running an experiment was often more expensive than the changes it
yielded. The companies began to get complacent.&lt;/p&gt;

&lt;p&gt;At this time, a young producer decided that instead of waiting to check for
quality at the end of the manufacture; they would prevent the part from
continuing along the assembly line if its quality was lacking.&lt;/p&gt;

&lt;p&gt;Their colleagues were skeptical. &amp;quot;This will never work!&amp;quot; They said. &amp;quot;You&amp;#39;re
stopping work left and right!&amp;quot; The young producer begged for an opportunity to
try their experiment. &amp;quot;Let&amp;#39;s try just for one small factory! We&amp;#39;ll follow the
same rigorous validation process! If it&amp;#39;s a failure we can retool the factory
to do it the normal way!&amp;quot;&lt;/p&gt;

&lt;p&gt;The producers colleagues agreed. A small factory was outfitted to allow anyone
to stop the parts from moving through the line. For the first few weeks, it was
slow going, with stops every hour.&lt;/p&gt;

&lt;p&gt;However, when the line stopped the producer demanded that the factory workers
discover why and fix it. Slowly, but surely, stoppages slowed down. Machines
were rolling off the line nearly as quickly as the other factories. Even
better, very few needed further work after going through quality checks.&lt;/p&gt;

&lt;p&gt;After a few months, the factory was outperforming every other factory in it&amp;#39;s
class. They were building more machines that worked better at a lower cost per
unit than any other factory in its class!&lt;/p&gt;

&lt;p&gt;The rest, as they say, is history.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;The preceding text is a highly simplified explanation of the rise of Toyota
and the lean production system which is now buzzwording into meaninglessness in
the technology industry. Stop doing lean startups. Start doing learn startups.&lt;/em&gt;&lt;/p&gt;
</content>
  </entry>
  
  
  
  <entry>
    <id>http://zeespencer.com/beginning-again</id>
    <link type="text/html" rel="alternate" href="http://zeespencer.com/beginning-again"/>
    <title>Begin Again</title>
    <updated>2013-05-05T00:00:00-07:00</updated>
    <author>
      <name>Zee</name>
      <uri>http://zeespencer.com/</uri>
    </author>
    <content type="html">&lt;p&gt;Professions are complex. From outside it looks solid.&lt;/p&gt;

&lt;p&gt;Entrepreneur. Lawyer. Designer. Accountant. Developer.&lt;/p&gt;

&lt;p&gt;Once we dig in we discover its diversity. Subtle differences become stark
contrasts.&lt;/p&gt;

&lt;p&gt;We discover, explore, and absorb skills and ideas one after another.&lt;/p&gt;

&lt;p&gt;The parts coalesce. Patterns direct our actions. We recompose our thoughts and
behaviors.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;This is a dangerous moment.&lt;/p&gt;

&lt;p&gt;When our vision is clear, we are blind.&lt;/p&gt;

&lt;p&gt;When our field is explored, we are lost.&lt;/p&gt;

&lt;p&gt;When we have arrived, we must begin again.&lt;/p&gt;
</content>
  </entry>
  
  
  
  <entry>
    <id>http://zeespencer.com/the-windsurfer</id>
    <link type="text/html" rel="alternate" href="http://zeespencer.com/the-windsurfer"/>
    <title>The Windsurfer</title>
    <updated>2013-04-13T00:00:00-07:00</updated>
    <author>
      <name>Zee</name>
      <uri>http://zeespencer.com/</uri>
    </author>
    <content type="html">&lt;p&gt;She chrouches, alert and ready.&lt;br /&gt;
Waves crash across the bow.&lt;br /&gt;
She clenches the mast tightly&lt;br /&gt;
She furrows up her brow.&lt;br /&gt;
Winds roar with fury&lt;br /&gt;
Waves whip to foam&lt;br /&gt;
All other beach-goers&lt;br /&gt;
Turn their faces home.&lt;br /&gt;&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Not the lone windsurfer.&lt;br /&gt;
Cold and wind combine&lt;br /&gt;
To turn &lt;em&gt;wretched weather&lt;/em&gt;&lt;br /&gt;
Into an ideal time.&lt;br /&gt;
She leans, She twists, She catches&lt;br /&gt;
A roaring, potent gust&lt;br /&gt;
She skips across the ocean&lt;br /&gt;
She leaves birds in the dust.&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;em&gt;Embrace those opportunities which arise from discomfort. They may contain a secret joy&lt;/em&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
</content>
  </entry>
  
  
  
  <entry>
    <id>http://zeespencer.com/introducing-jekyll-cdn</id>
    <link type="text/html" rel="alternate" href="http://zeespencer.com/introducing-jekyll-cdn"/>
    <title>Introducing jekyll-cdn</title>
    <updated>2013-03-23T00:00:00-07:00</updated>
    <author>
      <name>Zee</name>
      <uri>http://zeespencer.com/</uri>
    </author>
    <content type="html">&lt;p&gt;I extracted my jekyll plugin for cache-busting from my blog into a gem,
&lt;a href=&quot;http://github.com/zspencer/jekyll-cdn&quot;&gt;jekyll-cdn&lt;/a&gt;! The main feature is a set
of Liquid filters for getting the right &lt;code&gt;asset_path&lt;/code&gt;, &lt;code&gt;stylesheet_path&lt;/code&gt;, and
&lt;code&gt;javascript_path&lt;/code&gt; for the environment you&amp;#39;re building.&lt;/p&gt;

&lt;p&gt;It&amp;#39;s super light weight, provider agnostic, and doesn&amp;#39;t require an asset
pipeline. Have fun fellow jekyll-lovers!&lt;/p&gt;
</content>
  </entry>
  
  
  
  <entry>
    <id>http://zeespencer.com/choosing-kindness-over-condemnation</id>
    <link type="text/html" rel="alternate" href="http://zeespencer.com/choosing-kindness-over-condemnation"/>
    <title>Choosing Kindness over Condemnation</title>
    <updated>2013-03-21T00:00:00-07:00</updated>
    <author>
      <name>Zee</name>
      <uri>http://zeespencer.com/</uri>
    </author>
    <content type="html">&lt;p&gt;It&amp;#39;s easy when hurt to lash out.&lt;br /&gt; To crush those who caused me pain.&lt;/p&gt;

&lt;p&gt;It&amp;#39;s hard when hurt to reach out.&lt;br /&gt; To comfort those who caused me pain.&lt;/p&gt;

&lt;p&gt;When I choose to be kind, I am forgotten.&lt;/p&gt;

&lt;p&gt;When I choose to condemn, I am remembered.&lt;/p&gt;

&lt;p&gt;I broker my humanity for a moment of hate.&lt;/p&gt;

&lt;p&gt;I trade my dignity for a flash of pride.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;&lt;em&gt;This is written in the wake of death threats being made to a woman who stood up
for herself. It&amp;#39;s written in the wake of a man losing his job for an off color
joke. It&amp;#39;s written in the wake of the million ways I sell my goodness to my
ego.&lt;/em&gt;&lt;/p&gt;
</content>
  </entry>
  
  
  
  <entry>
    <id>http://zeespencer.com/gertrude-the-giraffe</id>
    <link type="text/html" rel="alternate" href="http://zeespencer.com/gertrude-the-giraffe"/>
    <title>Gertrude the Giraffe</title>
    <updated>2013-03-12T00:00:00-07:00</updated>
    <author>
      <name>Zee</name>
      <uri>http://zeespencer.com/</uri>
    </author>
    <content type="html">&lt;p&gt;I have a small menagerie I take wherever I go. One who has accompanied me since
I was a child is Gertrude. Gertrude is a giraffe with a long, beautiful neck
with spots which spell four words: &lt;em&gt;Guess, Google, Grab, Go&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;When I get stuck Gertrude reaches up with her long neck and plucks a leaf out of
a Guessandtrythis tree. She drops it in front of me and prods me until I pick it
up. With each guess I gather information to help us make another, better guess.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Gertrude is nobodies fool. If guessing isn&amp;#39;t getting us anywhere, she nudges the
big red &lt;em&gt;Google It!&lt;/em&gt; button. The Great Google opens up and we glean information
from her pages.&lt;/p&gt;

&lt;p&gt;If Gertrude senses Google doesn&amp;#39;t have the wisdom we seek she reaches her long,
elegant neck out of my office, grabs a colleague with her teeth, and drags them
to my desk. Once they recover from their shock they share opinions, expertise,
and experiences which illuminate nooks and crannies I never knew existed!&lt;/p&gt;

&lt;p&gt;Gertrude is far more empathetic than I. She senses when I&amp;#39;m too panicked to
learn and will grab me from my chair and shove me out the door for a walk.  Each
step takes me further and further from my frustration until when I finally make
it back it is a brand new problem! The assumptions that were clouding my vision
fall away and I see how to move forward.&lt;/p&gt;

&lt;p&gt;I&amp;#39;m glad Gertrude reminds me to guess and try, google, grab others, and go for
walks. I don&amp;#39;t know where I&amp;#39;d be without her!&lt;/p&gt;
</content>
  </entry>
  
  
  
  <entry>
    <id>http://zeespencer.com/a-caveat-when-hosting-a-static-site-on-cloudfront</id>
    <link type="text/html" rel="alternate" href="http://zeespencer.com/a-caveat-when-hosting-a-static-site-on-cloudfront"/>
    <title>A Caveat When Hosting a Static Site on CloudFront</title>
    <updated>2013-03-03T00:00:00-08:00</updated>
    <author>
      <name>Zee</name>
      <uri>http://zeespencer.com/</uri>
    </author>
    <content type="html">&lt;p&gt;I recently experimented with hosting my blog on CloudFront. While this was
great for performance it caused a few issues.&lt;/p&gt;

&lt;p&gt;Cloudflare does not translate &lt;code&gt;/foo&lt;/code&gt; to &lt;code&gt;/foo/index.html&lt;/code&gt;, which makes perfect
sense for performance; but causes problems if you depend on the server to
follow that lookup pattern.&lt;/p&gt;

&lt;p&gt;To fix this I use S3 for &lt;code&gt;zeespencer.com&lt;/code&gt; and CloudFront for
&lt;code&gt;assets.zeespencer.com&lt;/code&gt; and the
&lt;a href=&quot;http://github.com/zspencer/jekyll-cdn&quot;&gt;jekyll-cdn&lt;/a&gt; gem to provide Liquid
filters so switching between local testing and hosted is a snap.&lt;/p&gt;
</content>
  </entry>
  
  
  
  <entry>
    <id>http://zeespencer.com/onward</id>
    <link type="text/html" rel="alternate" href="http://zeespencer.com/onward"/>
    <title>Onward</title>
    <updated>2013-02-19T00:00:00-08:00</updated>
    <author>
      <name>Zee</name>
      <uri>http://zeespencer.com/</uri>
    </author>
    <content type="html">&lt;p&gt;Last year was fantastic. I started my own business, helped three startups get
off the ground, learned a ton about working with distributed teams, and fell in
love.&lt;/p&gt;

&lt;p&gt;This year is even more exciting! I signed on with
&lt;a href=&quot;http://devbootcamp&quot;&gt;DevBootCamp&lt;/a&gt; where I&amp;#39;ll help hundreds of people begin their
programming journey! Talk about fun!&lt;/p&gt;

&lt;p&gt;While I was initially leary of boot-camp style developer training DevBootCamp
won me over. Not only do they teach practical programming skills they also
teach:&lt;/p&gt;

&lt;!--more--&gt;

&lt;ol&gt;
&lt;li&gt;How to continue learning&lt;/li&gt;
&lt;li&gt;How to solve problems&lt;/li&gt;
&lt;li&gt;How to work as a team&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;DevBootCamp doesn&amp;#39;t expect graduates to launch a startup or be a rails wizard at
the end of their program. They make three promises:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;You&amp;#39;ll know yourself enough to keep growing.&lt;/li&gt;
&lt;li&gt;You&amp;#39;ll learn enough code to &lt;a href=&quot;http://my.safaribooksonline.com/book/career-development/9780596806842/accurate-self-assessment/sweep_the_floor&quot;&gt;sweep the floor&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;You&amp;#39;ll grow enough of a makers mindset to overcome difficult problems.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;That&amp;#39;s what makes a great beginner developer.&lt;/p&gt;

&lt;p&gt;Not Rails. Not Node. Not Django. Not Spring.&lt;/p&gt;

&lt;p&gt;Initiative, self-knowledge, humility, and enough experience to be useful.&lt;/p&gt;
</content>
  </entry>
  
  
  
  <entry>
    <id>http://zeespencer.com/were-going-to-grind-young</id>
    <link type="text/html" rel="alternate" href="http://zeespencer.com/were-going-to-grind-young"/>
    <title>Grind Young</title>
    <updated>2013-02-17T00:00:00-08:00</updated>
    <author>
      <name>Zee</name>
      <uri>http://zeespencer.com/</uri>
    </author>
    <content type="html">&lt;p&gt;I hear your heart beat from all that caffeine&lt;br /&gt;
Oh, what a shame there&amp;#39;s not more in your bloodstream&lt;br /&gt;
So while you&amp;#39;re here in my cafe&lt;br /&gt;
Let&amp;#39;s make the most of the beans that we&amp;#39;re gonna grind young&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;We&amp;#39;re gonna grind young&lt;br /&gt;
We&amp;#39;re gonna grind young&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Let&amp;#39;s make the most of the beans like we&amp;#39;re gonna grind young&lt;br /&gt;
Let&amp;#39;s make the most of the beans like we&amp;#39;re gonna grind young&lt;br /&gt;
&amp;lt;!--more--&amp;gt;&lt;/p&gt;

&lt;p&gt;Young beans, fresh from the trees&lt;br /&gt;
As they roast the aroma frees&lt;br /&gt;
That roast&amp;#39;s lookin&amp;#39; good&lt;br /&gt;
Getting darker just like it should&lt;br /&gt;
Don&amp;#39;t care who&amp;#39;s watching when we cooking&amp;#39; it up (You Know)&lt;br /&gt;
That magic that we got nobody can touch (For sure)&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Looking for some espresso tonight (yeah)&lt;br /&gt;
Take my cup, I&amp;#39;ll show you the wild, side&lt;br /&gt;
Like it&amp;#39;s the last roast of our lives (uh huh)&lt;br /&gt;
We&amp;#39;ll keep brewing &amp;#39;til we die&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;I hear your heart beat from all that caffeine&lt;br /&gt;
Oh, what a shame there&amp;#39;s not more in your bloodstream&lt;br /&gt;
So while you&amp;#39;re here in my cafe&lt;br /&gt;
Let&amp;#39;s make the most of the beans that we&amp;#39;re gonna grind young&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;We&amp;#39;re gonna grind young&lt;br /&gt;
We&amp;#39;re gonna grind young&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Let&amp;#39;s make the most of the beans like we&amp;#39;re gonna grind young&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Let&amp;#39;s make the most of the beans like we&amp;#39;re gonna grind young&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Young baristas, making shots&lt;br /&gt;
Heating up the vacuum pots&lt;br /&gt;
Steaming up, gettin&amp;#39; hot&lt;br /&gt;
Fill me, give me all you&amp;#39;ve got&lt;br /&gt;
It&amp;#39;s pretty obvious that you&amp;#39;ve got a crush (you know)&lt;br /&gt;
That magic in our hands, it&amp;#39;s making you flush (for sure)&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Looking for some espresso tonight (yeah)&lt;br /&gt;
Take my cup, I&amp;#39;ll show you the wild, side&lt;br /&gt;
Like it&amp;#39;s the last roast of our lives (uh huh)&lt;br /&gt;
We&amp;#39;ll keep brewing &amp;#39;til we die&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;I hear your heart beat from all that caffeine&lt;br /&gt;
Oh, what a shame there&amp;#39;s not more in your bloodstream&lt;br /&gt;
So while you&amp;#39;re here in my cafe&lt;br /&gt;
Let&amp;#39;s make the most of the beans that we&amp;#39;re gonna grind young&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;I hear your heart beat from all that caffeine&lt;br /&gt;
Oh, what a shame there&amp;#39;s not more in your bloodstream&lt;br /&gt;
So while you&amp;#39;re here in my cafe&lt;br /&gt;
Let&amp;#39;s make the most of the beans that we&amp;#39;re gonna grind young&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;We&amp;#39;re gonna grind young&lt;br /&gt;
We&amp;#39;re gonna grind young&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Let&amp;#39;s make the most of the beans like we&amp;#39;re gonna grind young&lt;br /&gt;&lt;/p&gt;
</content>
  </entry>
  
  
  
  <entry>
    <id>http://zeespencer.com/using-nil-effectively</id>
    <link type="text/html" rel="alternate" href="http://zeespencer.com/using-nil-effectively"/>
    <title>Using Nil Effectively</title>
    <updated>2013-02-17T00:00:00-08:00</updated>
    <author>
      <name>Zee</name>
      <uri>http://zeespencer.com/</uri>
    </author>
    <content type="html">&lt;p&gt;We seem to use &lt;code&gt;nil&lt;/code&gt;s in place of a default return value in a function. Say you
wanted to write a function that splits a string on its commas:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;nil_split_on_comma&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;unless&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;include?&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;,&quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;,&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;While this seems reasonable it can have some unfortunate side effects:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nil_split_on_comma&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;asdfqwer&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Woops! Undefined method map for &lt;code&gt;nil&lt;/code&gt; class! Let&amp;#39;s try again!&lt;/p&gt;

&lt;!--more--&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;better_split_on_comma&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;unless&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;include?&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;,&quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;,&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;better_split_on_comma&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;asdfqwer&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ah! Much better! Because this function always returns an object of the same type
it can be used without checking the value! The astute reader will spot this as
an example of the &lt;a href=&quot;http://c2.com/cgi/wiki?NullObject&quot;&gt;Null Object Pattern&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In spite of it&amp;#39;s lack of suitability as a replacement for a reasonable default
value, I&amp;#39;m a fan of &lt;code&gt;nil&lt;/code&gt;. I especially like it&amp;#39;s use as a &lt;a href=&quot;http://en.wikipedia.org/wiki/Null_character&quot;&gt;null
terminator&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;iterable_fetch_val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;1234567890&quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iterable_fetch_val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iterable_fetch_val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here we&amp;#39;re relying on the side effect that a &lt;code&gt;nil&lt;/code&gt; value is also falsey. I&amp;#39;m
less edgey about this because this functions use case is an iterator, instead of
an accessor; but it&amp;#39;s still a little iffy.&lt;/p&gt;

&lt;p&gt;However, if you return an empty string instead of a falsey value it requires an
additional method call to use as an iterator:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;uniterable_fetch_val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;1234567890&quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;until&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uniterable_fetch_val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;empty?&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uniterable_fetch_val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As you can see, &lt;code&gt;nil&lt;/code&gt;&amp;#39;s aren&amp;#39;t all bad. However they should be used with
precision. Think about how varyied return types can cause complexity to move
through the code.&lt;/p&gt;
</content>
  </entry>
  
  
  
  <entry>
    <id>http://zeespencer.com/now-i-know-that-love-is-blind</id>
    <link type="text/html" rel="alternate" href="http://zeespencer.com/now-i-know-that-love-is-blind"/>
    <title>Now I Know That Love Is Blind</title>
    <updated>2013-02-14T00:00:00-08:00</updated>
    <author>
      <name>Zee</name>
      <uri>http://zeespencer.com/</uri>
    </author>
    <content type="html">&lt;p&gt;Now I know that love is blind&lt;br /&gt;
In the dark your smile shines.&lt;br /&gt;
My heart is stolen and I feel fine!&lt;br /&gt;
Why is organ harvesting a crime?&lt;br /&gt;&lt;/p&gt;
</content>
  </entry>
  
  
  
  <entry>
    <id>http://zeespencer.com/two-lumps-of-clay</id>
    <link type="text/html" rel="alternate" href="http://zeespencer.com/two-lumps-of-clay"/>
    <title>Two Lumps of Clay</title>
    <updated>2013-02-10T00:00:00-08:00</updated>
    <author>
      <name>Zee</name>
      <uri>http://zeespencer.com/</uri>
    </author>
    <content type="html">&lt;p&gt;Two lumps of clay were bought by a potter and set on her windowsill to
soften in the sun. The first was terrified of being prodded, poked, and shaped.
&amp;quot;I don&amp;#39;t want any part of this!&amp;quot; He said, &amp;quot;I&amp;#39;m a good piece of clay! I don&amp;#39;t
want to be a pot!&amp;quot; and he hardened himself in the noon day sun.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;His sister, however, was ecstatic. &amp;quot;I&amp;#39;ve always dreamed of being covered in
patterns and holding flowers! This is the opportunity I was born for!&amp;quot; And as
she spoke she softened in the suns rays.&lt;/p&gt;

&lt;p&gt;When the potter returned she picked up both bricks of clay. She placed the
brother on her wheel and attempted to form him, but he was too hard. No matter
how she pushed and prodded he wouldn&amp;#39;t form. Realizing that he would never make
a good pat, she stamped a pattern on him and placed him as a centerpiece in one
of her gardens.&lt;/p&gt;

&lt;p&gt;The sister, however, was perfectly suited for the throwing wheel. She was
quickly turned into a beautiful vase, painted with brilliant colors, and filled
with beautiful flowers.&lt;/p&gt;

&lt;p&gt;These two lumps of clay both had the same opportunities but different attitudes.
Both found a place to fit their personalities and allowed them to shine. When we
appreciate our differences we can find places for everyone to excel.&lt;/p&gt;
</content>
  </entry>
  
  
  
  <entry>
    <id>http://zeespencer.com/point-victor</id>
    <link type="text/html" rel="alternate" href="http://zeespencer.com/point-victor"/>
    <title>Point Victor</title>
    <updated>2013-02-10T00:00:00-08:00</updated>
    <author>
      <name>Zee</name>
      <uri>http://zeespencer.com/</uri>
    </author>
    <content type="html">&lt;p&gt;There was a young lad named Rictor&lt;br /&gt;
Who gloated he was the &lt;em&gt;Point Victor&lt;/em&gt;&lt;br /&gt;
But the cards he&amp;#39;d &amp;quot;completed&amp;quot;&lt;br /&gt;
Had bugs left untreated&lt;br /&gt;
And rejection befell poor young Rictor&lt;br /&gt;&lt;/p&gt;
</content>
  </entry>
  
  
  
  <entry>
    <id>http://zeespencer.com/ambiguity-is-an-opportunity-to-refactor</id>
    <link type="text/html" rel="alternate" href="http://zeespencer.com/ambiguity-is-an-opportunity-to-refactor"/>
    <title>Ambiguity In Code Is an Opportunity to Refactor</title>
    <updated>2013-02-01T00:00:00-08:00</updated>
    <author>
      <name>Zee</name>
      <uri>http://zeespencer.com/</uri>
    </author>
    <content type="html">&lt;p&gt;There&amp;#39;s a common design principle that states &amp;quot;Design the system to prevent
errors from occuring.&amp;quot; Lean manufacturing calls this
&lt;em&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Poka-yoke&quot;&gt;Poka-yoke&lt;/a&gt;&lt;/em&gt;. Interaction design calls
these
&lt;em&gt;[forcing functions](http://www.interaction-design.org/encyclopedia/forcing&lt;/em&gt;functions.html)_.&lt;/p&gt;

&lt;p&gt;Since a much of the time building software is spent reading code, it&amp;#39;s important
to decrease the amount of errors in understanding while we read.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;One way to do this is to decrease ambiguity. Consider the &lt;code&gt;&amp;amp;&lt;/code&gt; symbol in Ruby.
It&amp;#39;s a method call on some ruby classes,
&lt;a href=&quot;/musings/the-ruby-&amp;-symbol/&quot;&gt;a unary operator&lt;/a&gt; for converting objects to
blocks, and a binary operator for calling the &lt;code&gt;&amp;amp;&lt;/code&gt; method without using a &lt;code&gt;.&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In order to properly understand what the &lt;code&gt;&amp;amp;&lt;/code&gt; is doing you have to figure out
which of it&amp;#39;s three roles it&amp;#39;s fulfilling. If it&amp;#39;s a binary operator or a method
call you also must understand what that method is in the context of which object
it&amp;#39;s using.&lt;/p&gt;

&lt;p&gt;For example, &lt;code&gt;1 | 5&lt;/code&gt; is a
&lt;a href=&quot;http://en.wikipedia.org/wiki/Bitwise_operation#OR&quot;&gt;bitwise or&lt;/a&gt; operation, while
&lt;code&gt;[1,3,5] | [3,5,7]&lt;/code&gt; is a [set
union](http://en.wikipedia.org/wiki/Union&lt;em&gt;(set&lt;/em&gt;theory).&lt;/p&gt;

&lt;p&gt;While we learn to infer this over time there is some cognitive overhead as we
read. To combat this, I propose we take a cue from the
&lt;a href=&quot;http://www.python.org/dev/peps/pep-0020/&quot;&gt;zen of python&lt;/a&gt;, which states
&lt;em&gt;explicit is better than implicit&lt;/em&gt;. In that spirit, python provides
&lt;a href=&quot;http://docs.python.org/2/library/stdtypes.html#set.intersection&quot;&gt;two ways&lt;/a&gt; to
do set intersections: the &lt;code&gt;&amp;amp;&lt;/code&gt; operator, and the &lt;code&gt;intersection&lt;/code&gt; function.&lt;/p&gt;

&lt;p&gt;Since ruby does not always provide named variants for ambiguous symbols this
provides us with an opportunity to refactor. When we encounter ambiguity, maybe
it&amp;#39;s time to extract a method to describes the operation more explicitely than
&lt;code&gt;|&lt;/code&gt; or &lt;code&gt;&amp;amp;&lt;/code&gt;.&lt;/p&gt;
</content>
  </entry>
  
  
  
  <entry>
    <id>http://zeespencer.com/what-mom-and-dad-need-to-know-about-the-current-security-breakdown</id>
    <link type="text/html" rel="alternate" href="http://zeespencer.com/what-mom-and-dad-need-to-know-about-the-current-security-breakdown"/>
    <title>What Mom and Dad Need to Know About the Rails Security Exploit</title>
    <updated>2013-01-31T00:00:00-08:00</updated>
    <author>
      <name>Zee</name>
      <uri>http://zeespencer.com/</uri>
    </author>
    <content type="html">&lt;p&gt;Dear Mom, Dad, Gramma, Brothers, Aunts and Uncles&lt;/p&gt;

&lt;p&gt;I&amp;#39;ve got some bad news. You may have some work to do to keep your private
information safe and prevent people from being able to impersonate you on the
Internet.&lt;/p&gt;

&lt;p&gt;As you know, I&amp;#39;m a computer programmer. Or a nerd. Or whatever. Essentially
people give me money to sit on my butt and get fatter. Yes Mom, I know I haven&amp;#39;t
called in a few weeks. I&amp;#39;m sorry. Anyway, my people have really let you all down
right now.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;You see, there&amp;#39;s a problem with the Internet right now. It&amp;#39;s even worse because
Facebook, Twitter, and Google are central to our digital lives.&lt;/p&gt;

&lt;p&gt;You know how when you sign in to Yelp on your phone it asks you to log in with
Facebook? Or how more and more web pages ask you to Log in with Google? Well,
that&amp;#39;s gotten a bit more dangerous in the last month.&lt;/p&gt;

&lt;p&gt;Essentially there is a security problem in a very common framework, called Ruby
on Rails. This framework runs a lot of websites. Websites like
&lt;a href=&quot;http://meetup.com&quot;&gt;Meetup.com&lt;/a&gt;, tons of facebook games, and quite a few
business applications like &lt;a href=&quot;http://www.getharvest.com/&quot;&gt;Harvest&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If an app you added on Facebook, Twitter, Google or LinkedIn is compromised it
gives the attacker the ability to do whatever that app is allowed to do on
facebook, twitter, google or linked in.&lt;/p&gt;

&lt;p&gt;Even worse many of the applications we developers make are greedy about what we
want you to allow the app to do. Some social games require you to give them the
right to post things on your friends timeline before they&amp;#39;ll even let you play!
What dirtbags, right?&lt;/p&gt;

&lt;p&gt;I figured I should apologize for all of us, as well as inform you of the risks
that you are now being exposed to, as well as what steps to take to make
yourself a little safer.&lt;/p&gt;

&lt;h3 id=&quot;protecting-your-google-accounts&quot;&gt;Protecting Your Google Accounts&lt;/h3&gt;

&lt;p&gt;Google is the largest concern for me. I use it to log in to all kinds of things
and it has tons of my personal data in it. Including client lists, budgets, and
things like that.&lt;/p&gt;

&lt;p&gt;Apps you log in to with Google can access all kinds of things; like your
contacts, email, calendar, documents in google drive, and even your chat history
if you use google chat!&lt;/p&gt;

&lt;p&gt;Thankfully it&amp;#39;s pretty straightforward to revoke access with Google, though a
bit time consuming. They have a
&lt;a href=&quot;http://support.google.com/accounts/bin/answer.py?hl=en&amp;answer=41236&quot;&gt;support page explaining how&lt;/a&gt;,
located here:
&lt;a href=&quot;http://support.google.com/accounts/bin/answer.py?hl=en&amp;answer=41236&quot;&gt;http://support.google.com/accounts/bin/answer.py?hl=en&amp;amp;answer=41236&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;protecting-your-facebook-account&quot;&gt;Protecting Your Facebook Account&lt;/h3&gt;

&lt;p&gt;Most Facebook apps are allowed to get your contact information, many can post
status or pictures, and a few can add or remove friends.&lt;/p&gt;

&lt;p&gt;If your not cool that some stranger on the Internet can someday possibly
impersonate you on Facebook, even if you change your password you may want to
follow
&lt;a href=&quot;http://howto.cnet.com/8301-11310_39-57347928-285/how-to-revoke-facebook-app-permissions/&quot;&gt;these instructions&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I know, I know. It&amp;#39;s painful. You have to click twice per app you want to
remove, and if you&amp;#39;re like me you somehow have accumulated dozens of them over
the years. Oops. I&amp;#39;ll think twice before logging in with facebook!&lt;/p&gt;

&lt;h3 id=&quot;protecting-your-linked-in-account&quot;&gt;Protecting Your Linked In Account&lt;/h3&gt;

&lt;p&gt;Most LinkedIn apps can access your personal information, as well as post updates
to your timeline. Some can update your work history, or send private messages.&lt;/p&gt;

&lt;p&gt;It&amp;#39;s easy to
&lt;a href=&quot;http://www.linkedin.com/answers/using-linkedIn/ULI/868108-1020804&quot;&gt;revoke access on LinkedIn&lt;/a&gt;,
especially because there are so few apps for the platform!&lt;/p&gt;

&lt;h3 id=&quot;protecting-your-twitter-account&quot;&gt;Protecting Your Twitter Account&lt;/h3&gt;

&lt;p&gt;Most twitter apps can update your status, some can send DMs. A lot of my
personal brand is tied up in Twitter, so this is more important for me than
LinkedIn, but I&amp;#39;m assuming the opposite is true for you.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://support.twitter.com/articles/76052-how-to-connect-and-revoke-third-party-applications&quot;&gt;Revoking twitter access&lt;/a&gt;
is a joy compared to Facebook!&lt;/p&gt;

&lt;h3 id=&quot;the-thrilling-conclusion&quot;&gt;The Thrilling Conclusion&lt;/h3&gt;

&lt;p&gt;I would strongly recommend removing all access for Facebook, Twitter, Google,
and LinkedIn apps for the time being. If you &lt;em&gt;really need&lt;/em&gt; whatever app it was,
contact the apps support team and ask them if they are using rails, and if so if
they are up to date with the latest security patches. If they say yes, then
you&amp;#39;re good to go!&lt;/p&gt;

&lt;p&gt;I wish I could say this was all you should be worried about, but we&amp;#39;re in for a
bumpy ride over the next few months.&lt;/p&gt;

&lt;h3 id=&quot;more-details&quot;&gt;More Details&lt;/h3&gt;

&lt;p&gt;For a more detailed understanding of the security exploit, you should read this
article by
&lt;a href=&quot;http://www.kalzumeus.com/2013/01/31/what-the-rails-security-issue-means-for-your-startup/&quot;&gt;Patrick McKenzie&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;call-to-action&quot;&gt;&lt;p&gt;Are you a business owner or manager responsible
for a rails app? I'm available to help ensure your customers are safe. Just send
  me an email: &lt;a href=&quot;mailto:
  zee@wecohere.com&quot;&gt;zee@wecohere.com&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;
</content>
  </entry>
  
  
  
  <entry>
    <id>http://zeespencer.com/i-sense-a-pattern</id>
    <link type="text/html" rel="alternate" href="http://zeespencer.com/i-sense-a-pattern"/>
    <title>I sense a pattern</title>
    <updated>2013-01-31T00:00:00-08:00</updated>
    <author>
      <name>Zee</name>
      <uri>http://zeespencer.com/</uri>
    </author>
    <content type="html">&lt;p&gt;From curiosities, interest.&lt;/p&gt;

&lt;p&gt;From interest, desire.&lt;/p&gt;

&lt;p&gt;From desire, passion.&lt;/p&gt;

&lt;p&gt;From passion, thoughts,&lt;/p&gt;

&lt;p&gt;From thoughts, actions.&lt;/p&gt;

&lt;p&gt;From actions, habits.&lt;/p&gt;

&lt;p&gt;From habits, self.&lt;/p&gt;

&lt;p&gt;From self, curiosities.&lt;/p&gt;
</content>
  </entry>
  
  
  
  <entry>
    <id>http://zeespencer.com/the-ruby-&-symbol</id>
    <link type="text/html" rel="alternate" href="http://zeespencer.com/the-ruby-&-symbol"/>
    <title>The Ruby & Symbol</title>
    <updated>2013-01-30T00:00:00-08:00</updated>
    <author>
      <name>Zee</name>
      <uri>http://zeespencer.com/</uri>
    </author>
    <content type="html">&lt;p&gt;&amp;amp; is a powerful ruby operator, when you use it as a unary operator it has two
main use cases:&lt;/p&gt;

&lt;p&gt;The most common is to pass an object as a block to a method, like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;reject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:nil?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This calls &lt;code&gt;#to_proc&lt;/code&gt; on the symbol &lt;code&gt;:nil?&lt;/code&gt;, converts the result into a block,
and passes it to the reject method. A line by line breakdown looks something
like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;reject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:nil?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;reject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;proc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:nil?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_proc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;reject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;proc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;reject&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;nil?&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;!--more--&gt;

&lt;p&gt;The second is explicitly declaring a block by using the &lt;code&gt;&amp;amp;&lt;/code&gt; in a method
definition:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;yield&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;print_results&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;bar&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;With an explicitly named block you can do useful things, like map a block to
all the columns in a table:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;column_map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;column_map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And of course, explicitly named blocks still allow you to expand an object to a
block:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;column_map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]],&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:odd?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;For more reading on the &amp;amp; operator, check out  &lt;em&gt;&lt;a href=&quot;http://ablogaboutcode.com/2012/01/04/the-ampersand-operator-in-ruby/&quot;&gt;The Ampersand Operator in
Ruby&lt;/a&gt;&lt;/em&gt; by
&lt;a href=&quot;https://twitter.com/panthomakos&quot;&gt;Pan Thomakos&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I you want to grok blocks, I&amp;#39;d recommend the excellent &lt;em&gt;&lt;a href=&quot;http://www.robertsosinski.com/2008/12/21/understanding-ruby-blocks-procs-and-lambdas/&quot;&gt;Understanding Ruby
Blocks, Procs and
Lambdas&lt;/a&gt;&lt;/em&gt;
by &lt;a href=&quot;http://www.robertsosinski.com/&quot;&gt;Robert Sosinki&lt;/a&gt;&lt;/p&gt;
</content>
  </entry>
  
  
  
  <entry>
    <id>http://zeespencer.com/building-a-remote-pairing-setup</id>
    <link type="text/html" rel="alternate" href="http://zeespencer.com/building-a-remote-pairing-setup"/>
    <title>Build a Command Line Remote Pairing Setup</title>
    <updated>2013-01-29T00:00:00-08:00</updated>
    <author>
      <name>Zee</name>
      <uri>http://zeespencer.com/</uri>
    </author>
    <content type="html">&lt;p&gt;Over the past couple years I&amp;#39;ve done a bit of remote pairing. When I need a GUI
everything is pretty straightforward: &lt;a href=&quot;http://join.me&quot;&gt;Join.me&lt;/a&gt; for
screen/keyboard sharing and iPad with Skype or Google Hangout for video calls.
This is pretty bandwidth intensive and can be slow, so I&amp;#39;d rather keep as much
as I can in a terminal.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;There&amp;#39;s a few obstacles to that though:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; I travel a lot, so my network location is random and I can&amp;#39;t change the
coffee shops firewall&lt;/li&gt;
&lt;li&gt; I want to see anything my partner do&lt;/li&gt;
&lt;li&gt; I want to add partners easily&lt;/li&gt;
&lt;li&gt; I don&amp;#39;t want to share any passwords.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thankfully a remote virtual machine, SSH, and tmux let me meet all these
requirements. Hooray!&lt;/p&gt;

&lt;h2 id=&quot;set-up-the-remote-server&quot;&gt;Set up the remote server&lt;/h2&gt;

&lt;p&gt;I use &lt;a href=&quot;http://prgmr.com/xen/&quot;&gt;prgmr.com&lt;/a&gt; for my utility server provider.
They&amp;#39;ve got great support, don&amp;#39;t overload their servers, and they love their
customers. This is a pretty low intensity server, so a 128MB instance is
probably fine.&lt;/p&gt;

&lt;p&gt;Add two user accounts. One is for you to log in to and manage the server. Don&amp;#39;t
even think about using root! The other is for your partners to log in with. I
use the name &lt;code&gt;pair&lt;/code&gt; for mine.&lt;/p&gt;

&lt;p&gt;For some distributions of *nix you&amp;#39;ll need to allow port forwarding over SSH.
To do this open up the servers sshd_config as root (typically located at
&lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt;), find or add the  &lt;code&gt;AllowTcpForwarding&lt;/code&gt; line, set it to
&lt;code&gt;yes&lt;/code&gt;, and ensure it&amp;#39;s uncommented.&lt;/p&gt;

&lt;h3 id=&quot;configure-your-user&quot;&gt;Configure your user&lt;/h3&gt;

&lt;p&gt;Your user&amp;#39;s role on this server is to allow you to use SSH to forward a port on
the server to your system. To be honest, you don&amp;#39;t need to change anything, but
I recommend using keys to access your server instead of a password. To do that,
you&amp;#39;ll need to create an &lt;code&gt;authorized_keys&lt;/code&gt; file in your &lt;code&gt;~/.ssh&lt;/code&gt; directory.
This file must &lt;em&gt;be only accessible to your user&lt;/em&gt; otherwise it will not be
accepted by any sane distributions ssh server. To make it yours and yours
alone, type &lt;code&gt;chmod 600 ~/.ssh/authorized_keys&lt;/code&gt; before going forward.&lt;/p&gt;

&lt;p&gt;Now, append your public key to the &lt;code&gt;~/.ssh/authorized_keys&lt;/code&gt; file. Github
provides an &lt;a href=&quot;https://help.github.com/articles/generating-ssh-keys&quot;&gt;excellent tutorial on creating ssh
keys&lt;/a&gt; if you don&amp;#39;t think
you have a public key.&lt;/p&gt;

&lt;p&gt;From now on, typing &lt;code&gt;ssh your-user@your-server&lt;/code&gt; will use key-pair
encryption to verify your identity; which is far more secure than meager
passwords. For an added security boost you may want to edit your
&lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt; and change &lt;code&gt;PasswordAuthentication&lt;/code&gt; to &lt;code&gt;no&lt;/code&gt; &lt;em&gt;after
you&amp;#39;ve verified logging in without a password works.&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;configure-the-pair-user&quot;&gt;Configure the pair user&lt;/h3&gt;

&lt;p&gt;The pair user is where the magic happens. Login to the pair user, and create an
authorized keys file by typing &lt;code&gt;touch ~/.ssh/authorized_keys&lt;/code&gt; and change it&amp;#39;s
permissions &lt;code&gt;chmod 600 ~/.ssh/authorized_keys&lt;/code&gt;!&lt;/p&gt;

&lt;h4 id=&quot;adding-a-partners-public-key&quot;&gt;Adding a partners public key&lt;/h4&gt;

&lt;p&gt;When we append a partners public key to the authorized_keys file we want to
prefix it with the &lt;code&gt;command&lt;/code&gt; ssh directive:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;command=&amp;quot;ssh &amp;lt;my-user-name&amp;gt;@localhost -p 1337&amp;quot;,no-port-forwarding,no-X11-forwarding,no-agent-forwarding &amp;lt;my-partners-public-key&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This forces the incoming connection to execute an ssh command to connect to
localhost on port 1337, and once that is complete it will kill the connection.
The &lt;code&gt;no-(agent|port|X11)-forwarding&lt;/code&gt; directives are another security
precaution. Now we can add anyone we want as a partner with very little fear.&lt;/p&gt;

&lt;p&gt;Go ahead and add your public key as a partner for now, then from your local
machine type &lt;code&gt;ssh pair@your-server&lt;/code&gt;. This should give you a message like
&lt;code&gt;ssh: connect to host localhost port 1337: Connection refused&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This is good! It means that you successfully connected as &lt;code&gt;pair&lt;/code&gt; on your server
&lt;em&gt;and&lt;/em&gt; it tried to connect to ssh on port 1337! Yay!&lt;/p&gt;

&lt;p&gt;All that&amp;#39;s left to do now is to generate an ssh key for the pair user, so log
back in to the server as &lt;code&gt;pair&lt;/code&gt; and follow step 3 on the aforementioned &lt;a href=&quot;https://help.github.com/articles/generating-ssh-keys&quot;&gt;ssh
key tutorial&lt;/a&gt;. This is
the key we&amp;#39;ll give access rights to our machine; using the &lt;code&gt;command&lt;/code&gt; directive
to always force them into joining an existing tmux session.&lt;/p&gt;

&lt;h2 id=&quot;set-up-your-machine&quot;&gt;Set up your machine&lt;/h2&gt;

&lt;h3 id=&quot;install-tmux&quot;&gt;Install tmux&lt;/h3&gt;

&lt;p&gt;If you&amp;#39;re on a Mac I recommend installing tmux through
&lt;a href=&quot;http://mxcl.github.com/homebrew/&quot;&gt;homebrew&lt;/a&gt;. Most Linux distributions come
with it as a package in their standard repository now a days.&lt;/p&gt;

&lt;h3 id=&quot;set-up-your-local-ssh-server-and-authorized_keys&quot;&gt;Set up your local ssh server and authorized_keys&lt;/h3&gt;

&lt;p&gt;If you&amp;#39;re on a mac, you&amp;#39;ll need to &lt;a href=&quot;http://osxdaily.com/2011/09/30/remote-login-ssh-server-mac-os-x/&quot;&gt;enable remote
login&lt;/a&gt;. If
you&amp;#39;re a Linux person make sure you have the sshd package installed and the
service running.&lt;/p&gt;

&lt;p&gt;Once that&amp;#39;s done, set up your authorized_keys for your local machine: &lt;code&gt;touch
~/.ssh/authorized_keys &amp;amp;&amp;amp; chmod 600 ~/.ssh/authorized_keys&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now take the public key you created for the pair username, and add it to the
end of your &lt;code&gt;~/.ssh/authorized_keys&lt;/code&gt; file, like so:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;command=&amp;quot;tmux attach&amp;quot;,no-port-forwarding,no-X11-forwarding,no-agent-forwarding &amp;lt;pair-users-ssh-public-key&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;test-it-out&quot;&gt;Test it out&lt;/h3&gt;

&lt;p&gt;From your local machine open a new terminal and type &lt;code&gt;ssh -R1337:localhost:22
your-user@your-server&lt;/code&gt; . This sets up the network forwarding stuff. Yay!&lt;/p&gt;

&lt;p&gt;From a second terminal, type in &lt;code&gt;ssh pair@your-server&lt;/code&gt;. This should give you
at least these two lines:  &lt;code&gt;no sessions&lt;/code&gt; and &lt;code&gt;Connection to localhost closed&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;no sessions&lt;/code&gt; line is letting us know tmux doesn&amp;#39;t have anything to attach
to. the &lt;code&gt;Connection to localhost closed&lt;/code&gt; is letting us know that we were kicked
off the system. As we should be!&lt;/p&gt;

&lt;p&gt;Now, on &lt;em&gt;another&lt;/em&gt; terminal launch &lt;code&gt;tmux&lt;/code&gt;, then from the second terminal try
&lt;code&gt;ssh pair@your-server&lt;/code&gt; again. If all goes well, you should see the contents
of the third terminal in the second terminal, and it should redraw pretty fast.&lt;/p&gt;

&lt;h3 id=&quot;further-enhancements&quot;&gt;Further enhancements&lt;/h3&gt;

&lt;p&gt;This is my vanilla command line remote pairing environment. If you want more
power, there&amp;#39;s a few things you should do:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Read the &lt;a href=&quot;http://pragprog.com/book/bhtmux/tmux&quot;&gt;tmux book&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Enhance tmux with &lt;a href=&quot;https://github.com/zolrath/wemux&quot;&gt;wemux&lt;/a&gt; or &lt;a href=&quot;https://github.com/benmills/vimux&quot;&gt;vimux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Look into &lt;a href=&quot;http://mosh.mit.edu/&quot;&gt;mosh&lt;/a&gt; as an ssh alternative. It&amp;#39;s supposed to be great for low-bandwidth situations.&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  
  
  
  <entry>
    <id>http://zeespencer.com/thank-you-heather-steve-and-corey</id>
    <link type="text/html" rel="alternate" href="http://zeespencer.com/thank-you-heather-steve-and-corey"/>
    <title>Thank You Heather, Steve, and Corey</title>
    <updated>2013-01-25T00:00:00-08:00</updated>
    <author>
      <name>Zee</name>
      <uri>http://zeespencer.com/</uri>
    </author>
    <content type="html">&lt;p&gt;Recently I saw a few highly critical tweets go by my stream about a package
written by Heather Arthur. They were by Corey Haines and Steve Klabnik, a couple
of my friends.&lt;/p&gt;

&lt;p&gt;Heather discovered the tweets and was &lt;a href=&quot;http://harthur.wordpress.com/2013/01/24/771/&quot;&gt;justifiably hurt by
them&lt;/a&gt;. Both
&lt;a href=&quot;http://programmingtour.blogspot.com/2013/01/im-sorry.html?m=1&quot;&gt;Corey&lt;/a&gt; and
&lt;a href=&quot;http://blog.steveklabnik.com/posts/2013-01-23-node&quot;&gt;Steve&lt;/a&gt; posted apologies;
which Heather
&lt;a href=&quot;https://twitter.com/harthvader/status/294609044323328000&quot;&gt;accepted&lt;/a&gt;.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Everyone handled this better than I could. Heather called out behavior that
caused her pain. Steve and Corey acknowledged their hurtful behavior. Everyone
was respectful, open, and honest.&lt;/p&gt;

&lt;p&gt;I&amp;#39;ve been impressed
&lt;a href=&quot;https://twitter.com/testobsessed/status/294686512229019648&quot;&gt;by&lt;/a&gt;
&lt;a href=&quot;https://twitter.com/raganwald/status/294687185691615232&quot;&gt;the&lt;/a&gt;
&lt;a href=&quot;https://twitter.com/kellabyte/status/294346907445252097&quot;&gt;communities&lt;/a&gt;
&lt;a href=&quot;https://twitter.com/nhajratw/status/294451766488088577&quot;&gt;response&lt;/a&gt; of
&lt;a href=&quot;https://twitter.com/KentBeck/status/294487997213192193&quot;&gt;support&lt;/a&gt; towards
Heather.&lt;/p&gt;

&lt;p&gt;Thank you Heather for setting an example to others to share when they&amp;#39;re
hurting. Thank you community, for supporting Heather&amp;#39;s vulnerability. Thank you
Steve and Corey for taking responsibility for your actions.&lt;/p&gt;

&lt;p&gt;Ya&amp;#39;ll make me happy to be a programmer.&lt;/p&gt;
</content>
  </entry>
  
  
  
  <entry>
    <id>http://zeespencer.com/building-communities-of-empowerment</id>
    <link type="text/html" rel="alternate" href="http://zeespencer.com/building-communities-of-empowerment"/>
    <title>Building Communities of Empowerment</title>
    <updated>2013-01-13T00:00:00-08:00</updated>
    <author>
      <name>Zee</name>
      <uri>http://zeespencer.com/</uri>
    </author>
    <content type="html">&lt;p&gt;Recently I sat in on a conversation between two people I respect. One declared
empowerment is an individuals choice. We choose how to respond to situations and
we can choose to remove ourselves from unacceptable situations.&lt;/p&gt;

&lt;p&gt;The other stated empowerment requires us to have support from our community. It
needs structures in place so that negative situations are reduced and positive
situations are increased.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Both of them are right.&lt;/p&gt;

&lt;p&gt;In the moment, I can choose to remove myself from an unpleasant situation. In
the future, I can choose to avoid groups that tend to put me into unpleasant
situations. But empowerment can&amp;#39;t just be about retreating. It needs to make a
positive impact in the future. It needs to set the stage for richer, fuller
lives.&lt;/p&gt;

&lt;p&gt;That&amp;#39;s where empowerment requires strucure. It requires support. It requires
a community. It takes a lot of people to make the future a better place. It
takes a lot of light to drive out shadows.&lt;/p&gt;

&lt;p&gt;Empowerment is not as simple as what you do for yourself or what is imposed upon
you. It&amp;#39;s a complex, nuanced thing. If we want to attract good people
regardless of color, gender, or background we&amp;#39;re going to need to understand
these nuances and balance between empowering ourselves and putting structures in
place to support each other.&lt;/p&gt;

&lt;p&gt;I&amp;#39;m not saying this will be easy. It&amp;#39;s hard to take the right amount of
responsibility for the situations we&amp;#39;re in. It takes constant practice to
forgive and empathize when emotions run hot. It takes work to build communities
that back each other up. It&amp;#39;s hard to shape a culture of empathy and support.&lt;/p&gt;

&lt;p&gt;But damn, it&amp;#39;s worth it.&lt;/p&gt;
</content>
  </entry>
  
  
  
  <entry>
    <id>http://zeespencer.com/how-do-you-find-mentors-outside-your-core-skills</id>
    <link type="text/html" rel="alternate" href="http://zeespencer.com/how-do-you-find-mentors-outside-your-core-skills"/>
    <title>How Do You Find Mentors Outside Your Core Skills?</title>
    <updated>2013-01-08T00:00:00-08:00</updated>
    <author>
      <name>Zee</name>
      <uri>http://zeespencer.com/</uri>
    </author>
    <content type="html">&lt;p&gt;To ring in the new year, I want to expose some of my ignorance.&lt;/p&gt;

&lt;p&gt;I&amp;#39;m a pretty sharp developer, I&amp;#39;m competent at experience and interaction design, and
I&amp;#39;m reasonably good at running a business. Yet I&amp;#39;m not even nearing an expert in
any of those things.&lt;/p&gt;

&lt;p&gt;My strongest skills by far are in programming and my social circle attracts
fellow programmers. I love these people. They&amp;#39;re smart, talented, have broad
sets of interests, and tongs of experience but they grow me more as a developer
or engineer than as a designer or a businessman.&lt;/p&gt;

&lt;p&gt;Deepening my programming skills can make it difficult to relate with people
outside of that domain. I&amp;#39;m glad I chose to focus on programming
for the past few years, but I want to shore up the skills I&amp;#39;ve been
neglecting; which leads me to my question:&lt;/p&gt;

&lt;p&gt;How do you find mentors outside of your core skill sets? How do you build
relationships with people who have passions orthogonal to yours?&lt;/p&gt;
</content>
  </entry>
  
  
  
  <entry>
    <id>http://zeespencer.com/we-are-better-than-this</id>
    <link type="text/html" rel="alternate" href="http://zeespencer.com/we-are-better-than-this"/>
    <title>We Are Better Than This</title>
    <updated>2012-12-20T00:00:00-08:00</updated>
    <author>
      <name>Zee</name>
      <uri>http://zeespencer.com/</uri>
    </author>
    <content type="html">&lt;p&gt;Let me start this off by saying I&amp;#39;m furious. I&amp;#39;m furious at my gender, and my
&amp;#39;professional&amp;#39; community.&lt;/p&gt;

&lt;p&gt;Maybe you haven&amp;#39;t seen Iris Classon&amp;#39;s &lt;a href=&quot;http://www.irisclasson.com/2012/12/19/stupid-question-107-shhh-harassment-not-a-problem-strong-content-warning/&quot;&gt;recent blog post about her
stalker&lt;/a&gt;,
but here&amp;#39;s the gist: she&amp;#39;s been programming for a year and a half and she is
already experiencing the worst of us. Our sexism. Our selfishness. Our
lack of decency.&lt;/p&gt;

&lt;p&gt;We don&amp;#39;t have to tolerate this kind of behavior. We can reject those that
propagate it. We can shout down those who defend it.&lt;/p&gt;

&lt;p&gt;Why the hell are we debating if conferences should have anti-harassment
policies? Why are we surprised when a woman shows up at a user group? Why do we
assume that just because someone is different they can&amp;#39;t be as good as us?&lt;/p&gt;

&lt;p&gt;And that&amp;#39;s what this is; an inability to interact with anything or anyone
different than us. This is us thinking we&amp;#39;re the best thing to happen to the
universe. This is poison.&lt;/p&gt;

&lt;p&gt;Grow up. We&amp;#39;re not in high school anymore. We don&amp;#39;t have to act like a frat
house. We can treat each other with dignity and respect.&lt;/p&gt;
</content>
  </entry>
  
  
  
  <entry>
    <id>http://zeespencer.com/keeping-space</id>
    <link type="text/html" rel="alternate" href="http://zeespencer.com/keeping-space"/>
    <title>Keeping Space</title>
    <updated>2012-12-12T00:00:00-08:00</updated>
    <author>
      <name>Zee</name>
      <uri>http://zeespencer.com/</uri>
    </author>
    <content type="html">&lt;p&gt;While at Devbootcamp last week I was introduced to a new phrase by an
instructor. I asked how intensely draining his job must be, and he remarked
that his wife is amazingly good at &amp;quot;keeping space&amp;quot; for him. I didn&amp;#39;t grasp what
he meant, so I asked him to clarify.&lt;/p&gt;

&lt;p&gt;&amp;quot;Keeping space,&amp;quot; he said, &amp;quot;is when my wife gives me a safe haven to release the
pent up emotions from spending all day investing myself in the students here.&amp;quot;&lt;/p&gt;

&lt;p&gt;&amp;quot;So it&amp;#39;s like being an emotional anchor?&amp;quot; I asked.&lt;/p&gt;

&lt;p&gt;&amp;quot;Not quite,&amp;quot; he replied. &amp;quot;While it is about providing a ground for all that
energy; It&amp;#39;s also about providing a safe place for me to be broken;  a place
where even when I am at my worst she&amp;#39;ll still accept me and care about me and
not hold it against me.&amp;quot;&lt;/p&gt;

&lt;p&gt;Who in your life keeps space for you? Who do you keep space for? How do you
practice it?&lt;/p&gt;
</content>
  </entry>
  
  
  
  <entry>
    <id>http://zeespencer.com/in-pursuit-of-excellence</id>
    <link type="text/html" rel="alternate" href="http://zeespencer.com/in-pursuit-of-excellence"/>
    <title>In Pursuit of Excellence</title>
    <updated>2012-12-02T00:00:00-08:00</updated>
    <author>
      <name>Zee</name>
      <uri>http://zeespencer.com/</uri>
    </author>
    <content type="html">&lt;p&gt;Excellence is not only about the task at hand.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It&amp;#39;s about treating others well&lt;/li&gt;
&lt;li&gt;It&amp;#39;s about accepting criticism&lt;/li&gt;
&lt;li&gt;It&amp;#39;s about knowing yourself&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Excellence takes commitment. I have to work to remember:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;To trust first, question later&lt;/li&gt;
&lt;li&gt;To listen with my heart as well as my ears&lt;/li&gt;
&lt;li&gt;To appreciate and explore the subtle complexities of others views&lt;/li&gt;
&lt;li&gt;To give my attention firmly to those who ask of it&lt;/li&gt;
&lt;li&gt;To respond respectully, honestly, and directly&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What values and principles guide your search for excellence?&lt;/p&gt;
</content>
  </entry>
  
  
  
  <entry>
    <id>http://zeespencer.com/simplicity-wins</id>
    <link type="text/html" rel="alternate" href="http://zeespencer.com/simplicity-wins"/>
    <title>Simplicity Wins</title>
    <updated>2012-11-29T00:00:00-08:00</updated>
    <author>
      <name>Zee</name>
      <uri>http://zeespencer.com/</uri>
    </author>
    <content type="html">&lt;p&gt;Occam&amp;#39;s Razor applies to your business plan.&lt;/p&gt;

&lt;p&gt;Occam&amp;#39;s Razor applies to your design.&lt;/p&gt;

&lt;p&gt;Occam&amp;#39;s Razor applies to your code.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Stop adding blades; dammit.&lt;/em&gt;&lt;/p&gt;
</content>
  </entry>
  
  
  
  <entry>
    <id>http://zeespencer.com/ignorance-and-realism-in-testing</id>
    <link type="text/html" rel="alternate" href="http://zeespencer.com/ignorance-and-realism-in-testing"/>
    <title>Ignorance and Realism in Testing</title>
    <updated>2012-11-24T00:00:00-08:00</updated>
    <author>
      <name>Zee</name>
      <uri>http://zeespencer.com/</uri>
    </author>
    <content type="html">&lt;p&gt;I was talking through some of my thoughts on applying visual and interaction
design critique principles to code with &lt;a href=&quot;http://www.ecomba.org/&quot;&gt;Enrique Comba&lt;/a&gt;.
At the time, I was in the middle of analyzing the differences between &lt;a href=&quot;https://gist.github.com/4141476#file_normal_spec.rb&quot;&gt;directly
calling the method&lt;/a&gt; under
test, &lt;a href=&quot;https://gist.github.com/4141476#file_let_spec.rb&quot;&gt;nested describes and
lets&lt;/a&gt;, and using a &lt;a href=&quot;https://gist.github.com/4141476#file_custom_assertion_spec.rb&quot;&gt;custom
assertion&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I was pointing out how moving the method call out to a custom assert hid a
breadcrumb developers would use when understanding the system under test, while
leaving it in a let would at least keep it in the same test file. Enrique
responded with an interesting perspective:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&amp;quot;That&amp;#39;s the point of BDD. Your tests shouldn&amp;#39;t care about your implementation
at all.&amp;quot;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I was a little taken aback. One of my favorite parts about clearly written specs
is how they give the programmer direction in the use of the code being tested.
If the test code is completely ignorant of the implementation, how can it
provide those insights?!&lt;/p&gt;

&lt;p&gt;After an hour or so, I started thinking about &lt;a href=&quot;http://about.me/searls&quot;&gt;Justin
Searls&lt;/a&gt; recent presentation on &lt;a href=&quot;http://oredev.org/2012/sessions/budgeting-reality-a-new-approach-to-mock-objects&quot;&gt;realism in
tests&lt;/a&gt;.
This got me thinking: &lt;strong&gt;What if the level of realism and the level of ignorance
of a test are two related variables?&lt;/strong&gt; A test which provides a high level of
realism of the system under test may not mock out external services the system
uses because it does not know about them. Conversely, tests which provides a low
level of realism often very clearly point out how its collaborators must be
formed, as well as the usage of the code under test.&lt;/p&gt;

&lt;p&gt;Hopefully these complementary insights will provide me with more purposeful,
better organized test suites in the future.&lt;/p&gt;
</content>
  </entry>
  
  
  
  <entry>
    <id>http://zeespencer.com/the-proud-ants</id>
    <link type="text/html" rel="alternate" href="http://zeespencer.com/the-proud-ants"/>
    <title>The Proud Ants</title>
    <updated>2012-11-23T00:00:00-08:00</updated>
    <author>
      <name>Zee</name>
      <uri>http://zeespencer.com/</uri>
    </author>
    <content type="html">&lt;p&gt;Once upon a time there was an ant colony. It wasn&amp;#39;t a very big colony, but it
had the best hunters, builders, and nurses for miles around. For many seasons,
the colony prospered.&lt;/p&gt;

&lt;p&gt;The builders dug out barracks for the hunters, nurseries for the nurses, and
dormitories for themselves. They dug stores for the food, which were soon
overflowing with the hunters spoils. The nurses raised strong children who
swelled the ranks of the colony, making it stronger than ever.&lt;/p&gt;

&lt;p&gt;One day, the weather turned cooler. The hunters couldn&amp;#39;t find as much food as
before. Soon the food they brought back was not enough to feed the colony, so
the Queen opened up the food reserves. &lt;/p&gt;

&lt;p&gt;As winter grew longer the ants became afraid they would run out of food before
spring. The leaders of the castes, believing their own caste to be most
important, began to dissent.&lt;/p&gt;

&lt;p&gt;&amp;quot;My Queen! We are the builders. We built this strong home! You must give us more
food or we will all starve, and then who will prevent the tunnels from
collapsing upon us and killing us all?&amp;quot;&lt;/p&gt;

&lt;p&gt;&amp;quot;Don&amp;#39;t listen to them!&amp;quot; snapped the leader of the hunters. &amp;quot;We are the ones who
found and brought the food! We deserve more food, or who will find food
when spring comes?&amp;quot;&lt;/p&gt;

&lt;p&gt;&amp;quot;Oh dear!&amp;quot; moaned the leader of the nurses. &amp;quot;Our poor children! How will we
protect them and teach them to be strong? Our entire colony will die out if we
lose our children We must have a larger share of the food!&amp;quot;&lt;/p&gt;

&lt;p&gt;The Queen was silent. She could see a seed of hate being planted in the hearts
of the formerly close brothers. Seeking to be fair and show her respect for
their leadership, she decreed:&lt;/p&gt;

&lt;p&gt;&amp;quot;Every caste will be given food, according to the amount of ants in it. It is up
to you, the caste leaders, to choose who to feed to make it through the winter.&amp;quot;&lt;/p&gt;

&lt;p&gt;The leaders were angry. &amp;quot;You are weak!&amp;quot; declared the hunter. &amp;quot;You are not strong
enough to lead us!&amp;quot;&lt;/p&gt;

&lt;p&gt;&amp;quot;You are unstable!&amp;quot; gasped the builder, &amp;quot;You lack the foundations to support us!&amp;quot;&lt;/p&gt;

&lt;p&gt;&amp;quot;You are foolish!&amp;quot; said the nurse, &amp;quot;You are not wise enough to rule us!&amp;quot;&lt;/p&gt;

&lt;p&gt;But the Queen refused to relent.&lt;/p&gt;

&lt;p&gt;Secretly, the leaders began to plot. Each believed their caste was strong enough
to survive on it&amp;#39;s own, and so they decided that come spring time, they would
found their own colonies.&lt;/p&gt;

&lt;p&gt;After a harsh winter, they set their plans in motion. Each leader left the
colony; taking the best of their caste with them and leaving the young, infirm,
and elderly.&lt;/p&gt;

&lt;p&gt;The Queen was sad to see her formerly great colony torn apart, but resolved to
make the best of it. She gathered all who remained together into the great hall.&lt;/p&gt;

&lt;p&gt;&amp;quot;My people,&amp;quot; she began, &amp;quot;we have faced a harsh winter. We have been betrayed by
those we entrusted, and we have difficult days ahead of us. From now on, in
order to build respect between our castes, we will live together in towns of
mixed skills. Builders with nurses, nurses with hunters, and hunters with
builders. All food gathered by a town shall be theirs and their leaders shall
decide how to split it when the winter comes again.&amp;quot;&lt;/p&gt;

&lt;p&gt;Murmurs ran through the crowd &amp;quot;But those dirty hunters are who got us into this
mess in the first place!&amp;quot; shouted an elderly builder. &amp;quot;I don&amp;#39;t want to share my
food with them!&amp;quot;&lt;/p&gt;

&lt;p&gt;&amp;quot;Then you can find your own food on the surface and live on your own. But you
will no longer be given food from our hunters or care from our nurses.&amp;quot; The old
builder was silent.&lt;/p&gt;

&lt;p&gt;&amp;quot;Fine.&amp;quot; He grouched. &amp;quot;I&amp;#39;ll share my room. For now.&amp;quot;&lt;/p&gt;

&lt;p&gt;As the summer went on, the Queens colony grew stronger. Though much of the
wisdom of the experts had been lost, they were able to collect food, keep their
tunnels from collapsing, and rear their young. Slowly, the different castes grew
to respect each other, and enjoy living with one another.&lt;/p&gt;

&lt;p&gt;As the summer slowly changed to fall three weak, strange ants came to the
colony to beg audience with the Queen.&lt;/p&gt;

&lt;p&gt;&amp;quot;Please,&amp;quot; the first begged, &amp;quot;I come from the colony of builders. We are in need
of aid. We built the most beautiful colony, with deep and strong tunnels, but we
were unable to find enough food to feed our children, and many of our strongest
builders are now unable to walk. Please, give us food so that we may survive!&amp;quot;&lt;/p&gt;

&lt;p&gt;&amp;quot;No!&amp;quot; the second interjected, &amp;quot;I am from the colony of hunters. We found much
food, and stored it for the winter; but the tunnels to our storehouses have
collapsed and we are starving. Give us the food instead!&amp;quot;&lt;/p&gt;

&lt;p&gt;&amp;quot;But Queen!&amp;quot; the third cried, &amp;quot;I am from the colony of nurses. We have many
strong young children to feed, but we have been unable to store enough food for
winter because we cannot build storehouses to put them! We must have the extra
food so our children can live on!&amp;quot;&lt;/p&gt;

&lt;p&gt;The three began to quarrel amongst themselves again, pleading their cases and
shouting down their former brothers. The Queen was infuriated by their
pettiness, but moved by their plights.&lt;/p&gt;

&lt;p&gt;&amp;quot;Silence!&amp;quot; she declared &amp;quot;You nurses have many strong young ants, go to the
hunters and dig out their stores. Go to the builders and seek their wisdom to
guide you in reinforcing the hunters tunnels and building your own store rooms.
Hunters, give part of your food to the nurses for digging your tunnels and part
to the builders for their help in reinforcing them.&amp;quot;&lt;/p&gt;

&lt;p&gt;The three ants were shocked by this suggestion. &amp;quot;Give up our food?!&amp;quot; the hunter
replied. &amp;quot;Never!&amp;quot; &lt;/p&gt;

&lt;p&gt;&amp;quot;Help those selfish hunters?&amp;quot; shouted the builder. &amp;quot;I&amp;#39;d rather die!&amp;quot;&lt;/p&gt;

&lt;p&gt;&amp;quot;Our children are strong,&amp;quot; declared the nurse. &amp;quot;We will make do without their help.&amp;quot;&lt;/p&gt;

&lt;p&gt;And so they left. After another harsh winter, the queen sent scouts to find the
colonies of her former friends. At the hunters colony, all was in ruins;
abandoned, but with inaccessible storehouses full of food. The builders colony
had become a beautiful tomb, filled with the dead. The nurses had survived, but
barely. All of the elders had been lost, and they were quibbling amongst
themselves.&lt;/p&gt;

&lt;p&gt;The Queen, not being one to pass up an opportunity, dug out the store houses of
the hunters; offered sanctuary to the remaining nurses if they would live by her
rules; and formed a second colony in the builders majestic ruins.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Respect those who are different, or starve in the winter.&lt;/strong&gt;&lt;/p&gt;
</content>
  </entry>
  
  
  
  <entry>
    <id>http://zeespencer.com/why-i-dont-use-aliases</id>
    <link type="text/html" rel="alternate" href="http://zeespencer.com/why-i-dont-use-aliases"/>
    <title>Why I Don't Use Aliases</title>
    <updated>2012-06-20T00:00:00-07:00</updated>
    <author>
      <name>Zee</name>
      <uri>http://zeespencer.com/</uri>
    </author>
    <content type="html">&lt;p&gt;The difference between an amateur and a professional is their capability to
execute consistently in a variety of situations.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How dependent are you on your tools, environment, and configuration?&lt;/strong&gt;&lt;/p&gt;
</content>
  </entry>
  
  
  
  <entry>
    <id>http://zeespencer.com/business-model-innovation-factory-book-review</id>
    <link type="text/html" rel="alternate" href="http://zeespencer.com/business-model-innovation-factory-book-review"/>
    <title>Saul Kaplan's Business Model Innovation Factory</title>
    <updated>2012-05-06T00:00:00-07:00</updated>
    <author>
      <name>Zee</name>
      <uri>http://zeespencer.com/</uri>
    </author>
    <content type="html">&lt;p&gt;TL/DR: BMIF is a thought provoking look at what a business model is and how they
impact society. While it&amp;#39;s content is exceptional, It has stylistic issues that
sometimes detract.&lt;/p&gt;

&lt;p&gt;I met Saul late last year at BIF and I consider him a friend. As a friend, I
tend to hold him to an absurdly high standard. The book is good. I&amp;#39;m just an
asshole.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;BMIF has a highly energized, well articulated, and compelling opening. It
starts by challenging what a business model is; introducing the idea &lt;em&gt;business
models are not simply how your business captures value; but also how one creates
value.&lt;/em&gt; From there it challenges the notion business models are only for
business. Saul declares &lt;em&gt;business models are for everyone: nonprofits,
businesses, and even individuals.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;This satisfying start struggles to live through the rest of the book. Saul&amp;#39;s
amicable and compelling voice slips into reiterations of title phrases; each of
which could create a broader understanding of business model innovation if they
were subtle variations on the books core theme instead of repeats of the same
three or four words.&lt;/li&gt;
&lt;li&gt;The content, while compelling, seemed heavily weighted on the negative.
Knowing Saul&amp;#39;s penchant for inspirational storytelling; I expected more real
world examples of people rethinking how they create and capture value and
transforming businesses and society.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;When Saul releases a second edition here are the recommendations I would make:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Delete words. The book can be somewhat repetitious at times.&lt;/li&gt;
&lt;li&gt;Share success. These ideas are transforming institutions all over the world.
Shout it from the mountaintops! Be proud!&lt;/li&gt;
&lt;li&gt;Embrace variety. How many times is the word &amp;quot;innovation&amp;quot; used?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I&amp;#39;d definitely do a read through of the eBook edition, but wait for the
hardcover before investing in a physical copy.&lt;/p&gt;
</content>
  </entry>
  
  
  
  <entry>
    <id>http://zeespencer.com/rejecting-vs-breaking-out</id>
    <link type="text/html" rel="alternate" href="http://zeespencer.com/rejecting-vs-breaking-out"/>
    <title>When to Reject and Accept Work</title>
    <updated>2012-04-15T00:00:00-07:00</updated>
    <author>
      <name>Zee</name>
      <uri>http://zeespencer.com/</uri>
    </author>
    <content type="html">&lt;p&gt;No matter how well you define what should be done you will always wind
up with work that isn&amp;#39;t quite right. In these situations you have three
courses of action:
1. Reject the work and provide feedback.
2. Accept the work and add new work items.
3. Accept the work and ignore its imperfections.&lt;/p&gt;

&lt;p&gt;Choosing which course to take is dependent on a few concerns:
1. Timing
2. Solution/Problem Fit
3. Cost
4. Team Impact&lt;/p&gt;

&lt;p&gt;Accepting the work despite imperfections is prudent when time is of the essence.
Blocking forward progress may be the best option if what was done is
significantly out of alignment with what needed to be done. Adding additional
work items while allowing the current one to move forward is perfect when the
work provides some value, but could be improved upon. When you have a team which
loves to see things getting done rejecting work may do more to demoralize them.
When you have a team that strives to have high quality work, rejecting may
communicate that you share their goal to create something impressive, even if it
takes longer.&lt;/p&gt;

&lt;p&gt;Next time you&amp;#39;re in a position to accept work think about these concerns.
Communicate why you have chosen to accept or reject the work. Hopefully
you&amp;#39;ll wind up with smoother projects because of it.&lt;/p&gt;
</content>
  </entry>
  
  
  
  <entry>
    <id>http://zeespencer.com/coding-the-distance</id>
    <link type="text/html" rel="alternate" href="http://zeespencer.com/coding-the-distance"/>
    <title>Coding the Distance</title>
    <updated>2012-02-26T00:00:00-08:00</updated>
    <author>
      <name>Zee</name>
      <uri>http://zeespencer.com/</uri>
    </author>
    <content type="html">&lt;p&gt;Reluctantly crouched at the command line&lt;br /&gt;
Keyboards clicking and clacking in time&lt;br /&gt;
&amp;lt;!--more--&amp;gt;
The green bar flashes, the vim pops up&lt;br /&gt;
Churning, and burning, they push changes up&lt;br /&gt;
They deftly maneuver and regex to rename&lt;br /&gt;
Fingers flying fast keyboards in flame&lt;br /&gt;
Reckless and wild, they commit and they push&lt;br /&gt;
Their prowess is potent though they sit on their tush.&lt;br /&gt;
As they speed through the release, the deploy goes out&lt;br /&gt;
They all get up and pour themselves stout&lt;br /&gt;
The team room is empty except for one man&lt;br /&gt;
Still coding, and typing, as fast as he can&lt;br /&gt;
The sun has gone down and the moon come up&lt;br /&gt;
And long ago he&amp;#39;s emptied his coffee cup&lt;br /&gt;
But he&amp;#39;s coding, and typing, and stubbing things out&lt;br /&gt;
And hacking up a feature customers are raving about&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;He&amp;#39;s deploying continuous&lt;br /&gt;
He&amp;#39;s deploying with speed&lt;br /&gt;
She&amp;#39;s all alone&lt;br /&gt;
In her time of need&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Because he&amp;#39;s hacking and cracking and refactoring obsessed&lt;br /&gt;
He&amp;#39;s fighting and typing and running his specs&lt;br /&gt;
He&amp;#39;s deploying continuous&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;No bonus, no vacay, no pressrelease, no wine&lt;br /&gt;
He&amp;#39;s haunted by something he cannot define&lt;br /&gt;
Bowel-shaking earthquakes of doubt and remorse&lt;br /&gt;
Assail him, impale him with monster-truck force.&lt;br /&gt;
In his mind, he&amp;#39;s still coding, still making the grade&lt;br /&gt;
She&amp;#39;s hoping in time that her memories will fade.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Because he&amp;#39;s hacking and cracking and refactoring obsessed&lt;br /&gt;&lt;br /&gt;
He&amp;#39;s fighting and typing and running his specs&lt;br /&gt;
the sun has gone down and the moon come up&lt;br /&gt;
and long ago he&amp;#39;s emptied his coffee cup&lt;br /&gt;
But he&amp;#39;s coding, and typing, and stubbing things out&lt;br /&gt;
And hacking up a feature customers are raving about&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;He&amp;#39;s deploying continuous&lt;br /&gt;
He&amp;#39;s deploying with speed&lt;br /&gt;
She&amp;#39;s all alone&lt;br /&gt;
In her time of need&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Because he&amp;#39;s hacking and cracking and moving to the next&lt;br /&gt;
He&amp;#39;s fighting and typing and running his specs&lt;br /&gt;
he&amp;#39;s hacking and cracking and moving to the next&lt;br /&gt;
He&amp;#39;s fighting and typing and running his specs&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;He&amp;#39;s deploying continuous&lt;br /&gt;
He&amp;#39;s deploying for speed&lt;br /&gt;
He&amp;#39;s deploying continuous&lt;br /&gt;&lt;/p&gt;
</content>
  </entry>
  
  
  
  <entry>
    <id>http://zeespencer.com/a-breakup-letter-for-backbone</id>
    <link type="text/html" rel="alternate" href="http://zeespencer.com/a-breakup-letter-for-backbone"/>
    <title>Breaking Up With Backbone</title>
    <updated>2012-02-14T00:00:00-08:00</updated>
    <author>
      <name>Zee</name>
      <uri>http://zeespencer.com/</uri>
    </author>
    <content type="html">&lt;p&gt;Dear Backbone,&lt;/p&gt;

&lt;p&gt;It&amp;#39;s been fun. We&amp;#39;ve had some incredible times together. But I just
don&amp;#39;t see us working out.&lt;/p&gt;

&lt;p&gt;Don&amp;#39;t get me wrong, you have some nice features, your code base is relatively
clean, you have good test coverage, and features don&amp;#39;t change drastically
between releases.&lt;/p&gt;

&lt;p&gt;But you don&amp;#39;t seem to understand what I want. I mean, yea, I &lt;em&gt;crave&lt;/em&gt; a clear
separation of concerns between domain, persistance, and presentation layers. I
&lt;em&gt;demand&lt;/em&gt; a way to keep my html free from javascript (and vice versa). I may even
sometimes want a way to play nicely with the browser history as people interact
broadly with my app.&lt;/p&gt;

&lt;p&gt;But dammit, I don&amp;#39;t need something that binds events for me. I don&amp;#39;t need
something to determine which code to execute based upon which url I happen to be
on. I&amp;#39;ll be damned if I start treating javascript like a &amp;quot;class inheritance&amp;quot;
system when it&amp;#39;s prototypical. I sure as hell don&amp;#39;t want to throw away what
little knowledge I have of javascript to follow one of many competing half baked
idioms for javascript application structure.&lt;/p&gt;

&lt;p&gt;Maybe I don&amp;#39;t get it. Maybe it&amp;#39;s me, not you. But let&amp;#39;s face it: You don&amp;#39;t help
me be more productive. That&amp;#39;s why I use rails in spite of it&amp;#39;s crazy desire to
modify base objects, poor architecture, silly ActiveRecord, and absurd routing
system. I can go from 0 to app in about 5 minutes with Rails. With you, it is
30~45. Part of it is lack of practice, but part of it is how little you actually
do for me. Sure, your persistence layer is fantastic.  But your views? Now
you&amp;#39;re just getting in the way of javascript&amp;#39;s event binding! Don&amp;#39;t even get me
started on routing. If a query variable is part of the URL it breaks? Really?!&lt;/p&gt;

&lt;p&gt;I&amp;#39;m burnt out on javascript app frameworks. I think I&amp;#39;ll stick with jQuery.&lt;/p&gt;

&lt;p&gt;I know it isn&amp;#39;t sexy. I know 99% of jQuery plugins are giant pile of poo. I
know jQuery doesn&amp;#39;t provide me with a reasonable way to separate my concerns.
That&amp;#39;s why I lean on libraries like
&lt;a href=&quot;http://westcoastlogic.com/lawnchair/&quot;&gt;lawnchair&lt;/a&gt;,
&lt;a href=&quot;http://pjax.heroku.com/&quot;&gt;pjax&lt;/a&gt;, &lt;a href=&quot;http://handlebarsjs.com/&quot;&gt;handlebars&lt;/a&gt;, and
&lt;a href=&quot;http://documentcloud.github.com/underscore/&quot;&gt;underscore&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;They don&amp;#39;t make javascript into something else, work well in greenfield or
legacy applications, and can be used independently without significantly
altering your codebase or workflow.&lt;/p&gt;

&lt;p&gt;Without a framework it&amp;#39;s up to me to ensure I don&amp;#39;t create a big ball of mud.
It&amp;#39;s up to me to make sure I seperate my concerns. It&amp;#39;s up to me to create clean
code.&lt;/p&gt;

&lt;p&gt;To be honest, that&amp;#39;s how I like it.&lt;/p&gt;
</content>
  </entry>
  
  
  
  <entry>
    <id>http://zeespencer.com/finding-flow-in-practice</id>
    <link type="text/html" rel="alternate" href="http://zeespencer.com/finding-flow-in-practice"/>
    <title>Finding Flow in Practice</title>
    <updated>2012-01-14T00:00:00-08:00</updated>
    <author>
      <name>Zee</name>
      <uri>http://zeespencer.com/</uri>
    </author>
    <content type="html">&lt;p&gt;I spent 5 hours practicing visual design.&lt;/p&gt;

&lt;p&gt;I never picked up a pen.&lt;/p&gt;

&lt;p&gt;I used a more familiar, less efficient tool.&lt;/p&gt;

&lt;p&gt;It kept me focused.&lt;/p&gt;

&lt;p&gt;Had I tried to a pen I would not have lasted 10 minutes.&lt;/p&gt;

&lt;p&gt;I need to become more comfortable with pens.&lt;/p&gt;
</content>
  </entry>
  
  
  
  <entry>
    <id>http://zeespencer.com/talking-is-hard</id>
    <link type="text/html" rel="alternate" href="http://zeespencer.com/talking-is-hard"/>
    <title>Talking is Hard</title>
    <updated>2011-12-30T00:00:00-08:00</updated>
    <author>
      <name>Zee</name>
      <uri>http://zeespencer.com/</uri>
    </author>
    <content type="html">&lt;p&gt;I am an external thinker.&lt;/p&gt;

&lt;p&gt;When I write, I feel the words.&lt;/p&gt;

&lt;p&gt;I touch them.&lt;/p&gt;

&lt;p&gt;Once I see them, I know they are not the words I want&lt;/p&gt;

&lt;p&gt;So I reshape them.&lt;/p&gt;

&lt;p&gt;When I talk, whatever comes out is out.&lt;/p&gt;

&lt;p&gt;No editing. No revising.&lt;/p&gt;

&lt;p&gt;Never the words I want.&lt;/p&gt;
</content>
  </entry>
  
  
  
  <entry>
    <id>http://zeespencer.com/confessions-of-a-shitty-pianist</id>
    <link type="text/html" rel="alternate" href="http://zeespencer.com/confessions-of-a-shitty-pianist"/>
    <title>Confessions of a Shitty Pianist</title>
    <updated>2011-12-29T00:00:00-08:00</updated>
    <author>
      <name>Zee</name>
      <uri>http://zeespencer.com/</uri>
    </author>
    <content type="html">&lt;p&gt;Once I practiced daily, studied theory, explored composers and genres, and wrote
my own music.&lt;/p&gt;

&lt;p&gt;I became a badass pianist.&lt;/p&gt;

&lt;p&gt;Then I stopped practicing, experimenting, exploring, and creating.&lt;/p&gt;

&lt;p&gt;Now I&amp;#39;m a shitty pianist.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If we rarely practice, study, explore, or create we are not exceptional.&lt;/strong&gt;&lt;/p&gt;
</content>
  </entry>
  
  
  
  <entry>
    <id>http://zeespencer.com/three-reasons-for-testers-not-to-learn-to-code</id>
    <link type="text/html" rel="alternate" href="http://zeespencer.com/three-reasons-for-testers-not-to-learn-to-code"/>
    <title>Three Reasons For Testers Not To Learn To Code</title>
    <updated>2011-09-01T00:00:00-07:00</updated>
    <author>
      <name>Zee</name>
      <uri>http://zeespencer.com/</uri>
    </author>
    <content type="html">&lt;p&gt;Michael Bolton wrote an exceptional article listing &lt;a href=&quot;http://www.google.com/url?q=http%3A%2F%2Fwww.developsense.com%2Fblog%2F2011%2F09%2Fat-least-three-good-reasons-for-testers-to-learn-to-program%2F&amp;sa=D&amp;sntz=1&amp;usg=AFQjCNHXDMFi5sz7HvSmAi40Munf2ClJcg&quot;&gt;three reasons for software
testers to learn to write
code&lt;/a&gt;.
Here&amp;#39;s three reasons why a tester &lt;em&gt;shouldn&amp;#39;t&lt;/em&gt; learn to code.&lt;/p&gt;

&lt;p&gt;On one hand, this is incredibly important. After all, learning as much as we can
about as many things as we can is a powerful career move.&lt;/p&gt;

&lt;p&gt;Yet there are some decent reasons why a software tester shouldn&amp;#39;t learn how to
program. Bear in mind, I&amp;#39;m not saying we shouldn&amp;#39;t learn to program. I&amp;#39;m merely
stating there are repercussions to learning to code which can harm our
awesomeness as a tester if we&amp;#39;re not careful.&lt;/p&gt;

&lt;h3 id=&quot;1-the-more-we-think-like-a-computer-the-less-we-think-like-a-person&quot;&gt;1. The More We Think Like A Computer, The Less We Think Like a Person.&lt;/h3&gt;

&lt;p&gt;Computers, eh? All those zero&amp;#39;s and one&amp;#39;s. &lt;strong&gt;All that reductionist logic.
Absolutely zero innovation.&lt;/strong&gt; As we learn to program, we discover
to program well we have to think like a computer. As we think like a computer,
we begin to focus on the happy path: &amp;quot;What is the one thing I need to
do to verify this bit works.&amp;quot; This focus blinds us to the less-happy path.&lt;/p&gt;

&lt;p&gt;The more we learn to isolate, the harder it is to notice emergent issues.
Reductionism is powerful. Experiment driven systems like the scientific method
have reshaped our planet&amp;#39;s surface and sent us to space.&lt;/p&gt;

&lt;p&gt;But reductionism sucks when it comes to emergent properties. Bad. The best
testers are the adept at seeing the whole. They notice that twiddling this
feature here will impact the outcome of that feature there. &lt;strong&gt;Coding is
reductionist in nature, which is why we developers often screw up integration.&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;2-coding-is-hard-developers-are-good-at-it&quot;&gt;2. Coding is Hard. Developers Are Good At It.&lt;/h3&gt;

&lt;p&gt;Do you know how to write maintainable, expressive, working code? No? Neither do
I. And neither do most coders. But they&amp;#39;re probably better at it than we are,
for now. After a while we can be a code master, but until then we run the risk
of creating automated checks that are less reliable than the code they&amp;#39;re
checking. This causes false positives and a high cost of ownership.&lt;/p&gt;

&lt;p&gt;But hey! If we follow some basic principles, devote ourselves to learning, and
remain pragmatic we may wind up being one of the best coders on the team. Then
our vengeance will be complete on those developers who spurned our bug reports
and laughed at our test plans!  Oh yes... Vengeance...&lt;/p&gt;

&lt;h3 id=&quot;3-the-more-time-we-spend-coding-the-less-time-we-spend-testing&quot;&gt;3. The More Time We Spend Coding, The Less Time We Spend Testing.&lt;/h3&gt;

&lt;p&gt;Given the &lt;a href=&quot;http://www.developsense.com/blog/2009/08/testing-vs-checking/&quot;&gt;definition of checking and
testing&lt;/a&gt;, test
automation is often not testing, it&amp;#39;s the verification of testing.  I&amp;#39;m not
advocating avoiding automating checks. That way lies madness. And bad software.
And tears. I&amp;#39;m suggesting &lt;strong&gt;testers are highly skilled contextual evaluatores
who evaluate and communicate risk and reward to decision makers more effectively
than any automated check.&lt;/strong&gt; Excellent testers prioritize that over learning the
intricacies of a programming language.&lt;/p&gt;

&lt;p&gt;Learning to code as a way to improve your ability to evaluate risk and check for
errors more effectively is reasonable. Learning to code to convert test plans to
automated tests may not be.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;If you&amp;#39;re a tester and you want to learn to code, consider checking out
&lt;a href=&quot;http://codeunion.io&quot;&gt;codeunion.io&lt;/a&gt;. We provide customized training to
supercharge your technical career path, no matter what your current skill
level.&lt;/em&gt;&lt;/p&gt;
</content>
  </entry>
  
  
  
  <entry>
    <id>http://zeespencer.com/judging-code-simplicity-fit-it-through-the-tube</id>
    <link type="text/html" rel="alternate" href="http://zeespencer.com/judging-code-simplicity-fit-it-through-the-tube"/>
    <title>Judging Code Simplicity Fit It Through The Tube</title>
    <updated>2010-04-25T00:00:00-07:00</updated>
    <author>
      <name>Zee</name>
      <uri>http://zeespencer.com/</uri>
    </author>
    <content type="html">&lt;p&gt;We coders have all kinds of definitions of simple code. To some, simple code is
code they understand and read easily. Others believe simple code follows the
coolest, most appropriate design pattern. Some say simple code has the fewest
characters.&lt;/p&gt;

&lt;p&gt;Extreme Programming tries to setttle that debate by offering &lt;a href=&quot;http://www.extremeprogramming.org/rules/simple.html&quot;&gt;four qualities of
simple code&lt;/a&gt;: testability,
browsability, understandability, and explainabilty.&lt;/p&gt;

&lt;p&gt;To make these qualities easier to remember I coin the mnemonic TUBE.&lt;/p&gt;

&lt;h3 id=&quot;testable&quot;&gt;Testable&lt;/h3&gt;

&lt;p&gt;Can automated tests be written for each piece of functionality and permutation
of behavior? Are there positive &lt;em&gt;and&lt;/em&gt; negative use-cases?&lt;/p&gt;

&lt;h3 id=&quot;understandable&quot;&gt;Understandable&lt;/h3&gt;

&lt;p&gt;When you read a function, does it do what you expected given it&amp;#39;s method
signature? How long does it take to figure out what the code does?&lt;/p&gt;

&lt;h3 id=&quot;browsable&quot;&gt;Browsable&lt;/h3&gt;

&lt;p&gt;Can the code be browsed in an IDE? How quickly does someone who didn&amp;#39;t write the
code find what they&amp;#39;re looking for?&lt;/p&gt;

&lt;h3 id=&quot;explainable&quot;&gt;Explainable&lt;/h3&gt;

&lt;p&gt;I&amp;#39;m pretty sure this is here twice because it&amp;#39;s so important. Can a different
developer tell you what the code does? Does their explanation match yours?&lt;/p&gt;

&lt;p&gt;If your code meets these criteria, congratulations! Your code fits in the TUBE,
and when the TUBE fits, make commits!&lt;/p&gt;
</content>
  </entry>
  
  
  
  <entry>
    <id>http://zeespencer.com/the-trouble-with-triangles</id>
    <link type="text/html" rel="alternate" href="http://zeespencer.com/the-trouble-with-triangles"/>
    <title>The Trouble With Triangles</title>
    <updated>2010-02-01T00:00:00-08:00</updated>
    <author>
      <name>Zee</name>
      <uri>http://zeespencer.com/</uri>
    </author>
    <content type="html">&lt;p&gt;The iron triangle has been redefined several times in the past few years.&lt;/p&gt;

&lt;p&gt;There&amp;#39;s &lt;a href=&quot;http://www.noop.nl/2008/04/getting-square.html&quot;&gt;Jurgen Appelo&amp;#39;s Iron
Square&lt;/a&gt;, &lt;a href=&quot;http://jimhighsmith.com/beyond-scope-schedule-and-cost-the-agile-triangle/&quot;&gt;Jim Highsmith&amp;#39;s Agile
Triangle&lt;/a&gt;,
&lt;a href=&quot;http://codesqueeze.com/the-broken-iron-triangle-is-broken/&quot;&gt;Max Pool&amp;#39;s Iron
Line&lt;/a&gt;, and any
number of other variations. At first glance, these seem like good models which
allow us to balance needs.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h3 id=&quot;but-there-is-a-flaw&quot;&gt;But There Is a Flaw.&lt;/h3&gt;

&lt;p&gt;The traditional Iron Triangle concerns itself with things which are
quantitative: cost, time to deliver, number of features, etc; while most of the
agile permutations have moved to qualitative measurements like value and
quality. All of a sudden we are mixing something objective, like time, with
something subjective, like value.&lt;/p&gt;

&lt;h3 id=&quot;so-how-does-this-break-things&quot;&gt;So... How Does This Break Things?&lt;/h3&gt;

&lt;p&gt;By comparing objective and subjective attributes we no longer have the iron
nature of the iron triangle. An example: it is possible to increase the amount
of value created by doing the most valuable work first. This increases value
created while potentially decreasing the amount of time it takes to produce that
value! We&amp;#39;ve &amp;quot;bent iron&amp;quot; so to speak.&lt;/p&gt;

&lt;p&gt;We may also introduce practices which decrease time to complete while increasing
costs; such as bringing in a domain expert to pair or mob program with us or
using test driven design to improve the changeability of our software.&lt;/p&gt;

&lt;p&gt;In software and other creative work, adding cost normally means adding people,
however Brooks&amp;#39;s Law states as we add people to a late project, time to complete
increases. This is an instance where the traditional Iron Triangle appears
flawed.&lt;/p&gt;

&lt;p&gt;So what should we do when trying to apply a triangle to agile practices:&lt;/p&gt;

&lt;h3 id=&quot;use-triangles-iron-or-otherwise-as-mental-models&quot;&gt;Use Triangles (Iron or Otherwise) as Mental Models.&lt;/h3&gt;

&lt;p&gt;Triangles help us observe, not control. Find their limits; such as where, when,
and why they break down. Challenge assumptions they make and learn what systems
they were initially conceived to explain.&lt;/p&gt;

&lt;p&gt;Remember: There are no best practices. Only practices with varying degrees of
effectiveness depending on the environment in which they are applied.&lt;/p&gt;
</content>
  </entry>
  
  
</feed>
